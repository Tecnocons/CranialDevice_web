{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\morga\\\\Desktop\\\\CranialDevice_web\\\\CranialDevice_web\\\\frontend\\\\src\\\\pages\\\\login\\\\LoginRegister.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Container, TextField, Button, Card, CardContent, Typography, CircularProgress, InputAdornment } from '@mui/material';\nimport { styled } from '@mui/system';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport LockIcon from '@mui/icons-material/Lock';\nimport { useAuth } from '../../contexts/AuthContext';\nimport backgroundImage from '../../assets/background.png'; // Importa l'immagine\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Root = styled('div')({\n  display: 'flex',\n  justifyContent: 'center',\n  // Cambia 'flex-end' a 'center'\n  alignItems: 'center',\n  height: '100vh',\n  backgroundImage: `url(${backgroundImage})`,\n  backgroundSize: 'cover',\n  backgroundPosition: 'center',\n  padding: '20px',\n  overflow: 'hidden' // Impedisce lo scorrimento\n});\nconst StyledCard = styled(Card)({\n  maxWidth: 400,\n  width: '100%',\n  // Assicura che il card non superi il 100% del contenitore\n  padding: 16,\n  margin: 16,\n  backgroundColor: 'rgba(255, 255, 255, 0.9)' // Aggiunge uno sfondo semi-trasparente per il contrasto\n});\nconst Form = styled('form')({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: 16\n});\nconst StyledButton = styled(Button)({\n  marginTop: 16\n});\nconst Title = styled(Typography)({\n  fontFamily: 'Roboto, sans-serif',\n  fontWeight: 700,\n  marginBottom: 16\n});\nfunction LoginRegister() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    setUser\n  } = useAuth();\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [isFirstUser, setIsFirstUser] = useState(null);\n  useEffect(() => {\n    const checkFirstUser = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/check-admin');\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setIsFirstUser(data.isFirstUser);\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n    checkFirstUser();\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const url = isFirstUser ? 'http://localhost:5000/api/register' : 'http://localhost:5000/api/login';\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        password\n      }),\n      credentials: 'include' // Includi le credenziali\n    });\n    const data = await response.json();\n    setMessage(data.message);\n    if (response.ok) {\n      setUser({\n        name: data.name,\n        isAdmin: data.isAdmin\n      });\n      navigate(`/main?admin=${data.isAdmin}`);\n    }\n  };\n  if (isFirstUser === null) {\n    return /*#__PURE__*/_jsxDEV(Root, {\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Root, {\n    children: /*#__PURE__*/_jsxDEV(StyledCard, {\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          variant: \"h4\",\n          component: \"h2\",\n          gutterBottom: true,\n          children: isFirstUser ? 'Register as Admin' : 'Login'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Name\",\n            variant: \"outlined\",\n            value: name,\n            onChange: e => setName(e.target.value),\n            required: true,\n            InputProps: {\n              startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"start\",\n                children: /*#__PURE__*/_jsxDEV(AccountCircle, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 19\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Password\",\n            type: \"password\",\n            variant: \"outlined\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true,\n            InputProps: {\n              startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"start\",\n                children: /*#__PURE__*/_jsxDEV(LockIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 19\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StyledButton, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            children: isFirstUser ? 'Register' : 'Login'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), message && /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"error\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginRegister, \"eHYCKRYPd6kkbotCB88ccCJyqoc=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = LoginRegister;\nexport default LoginRegister;\nvar _c;\n$RefreshReg$(_c, \"LoginRegister\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Container","TextField","Button","Card","CardContent","Typography","CircularProgress","InputAdornment","styled","AccountCircle","LockIcon","useAuth","backgroundImage","jsxDEV","_jsxDEV","Root","display","justifyContent","alignItems","height","backgroundSize","backgroundPosition","padding","overflow","StyledCard","maxWidth","width","margin","backgroundColor","Form","flexDirection","gap","StyledButton","marginTop","Title","fontFamily","fontWeight","marginBottom","LoginRegister","_s","navigate","setUser","name","setName","password","setPassword","message","setMessage","isFirstUser","setIsFirstUser","checkFirstUser","response","fetch","ok","Error","data","json","error","console","handleSubmit","e","preventDefault","url","method","headers","body","JSON","stringify","credentials","isAdmin","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","component","gutterBottom","onSubmit","label","value","onChange","target","required","InputProps","startAdornment","position","type","color","_c","$RefreshReg$"],"sources":["C:/Users/morga/Desktop/CranialDevice_web/CranialDevice_web/frontend/src/pages/login/LoginRegister.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Container, TextField, Button, Card, CardContent, Typography, CircularProgress, InputAdornment } from '@mui/material';\nimport { styled } from '@mui/system';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport LockIcon from '@mui/icons-material/Lock';\nimport { useAuth } from '../../contexts/AuthContext';\nimport backgroundImage from '../../assets/background.png';  // Importa l'immagine\n\nconst Root = styled('div')({\n  display: 'flex',\n  justifyContent: 'center',  // Cambia 'flex-end' a 'center'\n  alignItems: 'center',\n  height: '100vh',\n  backgroundImage: `url(${backgroundImage})`,\n  backgroundSize: 'cover',\n  backgroundPosition: 'center',\n  padding: '20px',\n  overflow: 'hidden',  // Impedisce lo scorrimento\n});\n\nconst StyledCard = styled(Card)({\n  maxWidth: 400,\n  width: '100%',  // Assicura che il card non superi il 100% del contenitore\n  padding: 16,\n  margin: 16,\n  backgroundColor: 'rgba(255, 255, 255, 0.9)',  // Aggiunge uno sfondo semi-trasparente per il contrasto\n});\n\nconst Form = styled('form')({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: 16,\n});\n\nconst StyledButton = styled(Button)({\n  marginTop: 16,\n});\n\nconst Title = styled(Typography)({\n  fontFamily: 'Roboto, sans-serif',\n  fontWeight: 700,\n  marginBottom: 16,\n});\n\nfunction LoginRegister() {\n  const navigate = useNavigate();\n  const { setUser } = useAuth();\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [isFirstUser, setIsFirstUser] = useState(null);\n\n  useEffect(() => {\n    const checkFirstUser = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/check-admin');\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setIsFirstUser(data.isFirstUser);\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n    checkFirstUser();\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const url = isFirstUser ? 'http://localhost:5000/api/register' : 'http://localhost:5000/api/login';\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ name, password }),\n      credentials: 'include'  // Includi le credenziali\n    });\n\n    const data = await response.json();\n    setMessage(data.message);\n\n    if (response.ok) {\n      setUser({ name: data.name, isAdmin: data.isAdmin });\n      navigate(`/main?admin=${data.isAdmin}`);\n    }\n  };\n\n  if (isFirstUser === null) {\n    return (\n      <Root>\n        <CircularProgress />\n      </Root>\n    );\n  }\n\n  return (\n    <Root>\n      <StyledCard>\n        <CardContent>\n          <Title variant=\"h4\" component=\"h2\" gutterBottom>\n            {isFirstUser ? 'Register as Admin' : 'Login'}\n          </Title>\n          <Form onSubmit={handleSubmit}>\n            <TextField\n              label=\"Name\"\n              variant=\"outlined\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              required\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <AccountCircle />\n                  </InputAdornment>\n                ),\n              }}\n            />\n            <TextField\n              label=\"Password\"\n              type=\"password\"\n              variant=\"outlined\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <LockIcon />\n                  </InputAdornment>\n                ),\n              }}\n            />\n            <StyledButton type=\"submit\" variant=\"contained\" color=\"primary\">\n              {isFirstUser ? 'Register' : 'Login'}\n            </StyledButton>\n          </Form>\n          {message && <Typography color=\"error\">{message}</Typography>}\n        </CardContent>\n      </StyledCard>\n    </Root>\n  );\n}\n\nexport default LoginRegister;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}