{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Davide Grieco\\\\CranialDevice_web\\\\frontend\\\\src\\\\pages\\\\LoginRegister.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Container, TextField, Button, Card, CardContent, Typography } from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100vh',\n    backgroundColor: '#f5f5f5'\n  },\n  card: {\n    maxWidth: 400,\n    padding: theme.spacing(2),\n    margin: theme.spacing(2)\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: theme.spacing(2)\n  },\n  button: {\n    marginTop: theme.spacing(2)\n  }\n}));\nfunction LoginRegister() {\n  _s();\n  const classes = useStyles();\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [isFirstUser, setIsFirstUser] = useState(true);\n  useEffect(() => {\n    const checkFirstUser = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/check-admin');\n        const data = await response.json();\n        setIsFirstUser(data.isFirstUser);\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n    checkFirstUser();\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const url = isFirstUser ? 'http://localhost:5000/register' : 'http://localhost:5000/login';\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        password\n      })\n    });\n    const data = await response.json();\n    setMessage(data.message);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.card,\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"h2\",\n          gutterBottom: true,\n          children: isFirstUser ? 'Register as Admin' : 'Login'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.form,\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Name\",\n            variant: \"outlined\",\n            value: name,\n            onChange: e => setName(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Password\",\n            type: \"password\",\n            variant: \"outlined\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.button,\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            children: isFirstUser ? 'Register' : 'Login'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), message && /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"error\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginRegister, \"Lx/t+/W4QlxzzZlspi5t5k68Tg8=\", false, function () {\n  return [useStyles];\n});\n_c = LoginRegister;\nexport default LoginRegister;\nvar _c;\n$RefreshReg$(_c, \"LoginRegister\");","map":{"version":3,"names":["React","useState","useEffect","Container","TextField","Button","Card","CardContent","Typography","makeStyles","jsxDEV","_jsxDEV","useStyles","theme","root","display","justifyContent","alignItems","height","backgroundColor","card","maxWidth","padding","spacing","margin","form","flexDirection","gap","button","marginTop","LoginRegister","_s","classes","name","setName","password","setPassword","message","setMessage","isFirstUser","setIsFirstUser","checkFirstUser","response","fetch","data","json","error","console","handleSubmit","e","preventDefault","url","method","headers","body","JSON","stringify","className","children","variant","component","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","label","value","onChange","target","required","type","color","_c","$RefreshReg$"],"sources":["C:/Users/Davide Grieco/CranialDevice_web/frontend/src/pages/LoginRegister.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Container, TextField, Button, Card, CardContent, Typography } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '100vh',\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  card: {\r\n    maxWidth: 400,\r\n    padding: theme.spacing(2),\r\n    margin: theme.spacing(2),\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    gap: theme.spacing(2),\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction LoginRegister() {\r\n  const classes = useStyles();\r\n  const [name, setName] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [isFirstUser, setIsFirstUser] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const checkFirstUser = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/check-admin');\r\n        const data = await response.json();\r\n        setIsFirstUser(data.isFirstUser);\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n      }\r\n    };\r\n    checkFirstUser();\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const url = isFirstUser ? 'http://localhost:5000/register' : 'http://localhost:5000/login';\r\n    const response = await fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ name, password }),\r\n    });\r\n\r\n    const data = await response.json();\r\n    setMessage(data.message);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Card className={classes.card}>\r\n        <CardContent>\r\n          <Typography variant=\"h5\" component=\"h2\" gutterBottom>\r\n            {isFirstUser ? 'Register as Admin' : 'Login'}\r\n          </Typography>\r\n          <form className={classes.form} onSubmit={handleSubmit}>\r\n            <TextField\r\n              label=\"Name\"\r\n              variant=\"outlined\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n              required\r\n            />\r\n            <TextField\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              variant=\"outlined\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n            />\r\n            <Button className={classes.button} type=\"submit\" variant=\"contained\" color=\"primary\">\r\n              {isFirstUser ? 'Register' : 'Login'}\r\n            </Button>\r\n          </form>\r\n          {message && <Typography color=\"error\">{message}</Typography>}\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginRegister;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,SAAS,EAAEC,MAAM,EAAEC,IAAI,EAAEC,WAAW,EAAEC,UAAU,QAAQ,eAAe;AAC3F,SAASC,UAAU,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,SAAS,GAAGH,UAAU,CAAEI,KAAK,KAAM;EACvCC,IAAI,EAAE;IACJC,OAAO,EAAE,MAAM;IACfC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,MAAM,EAAE,OAAO;IACfC,eAAe,EAAE;EACnB,CAAC;EACDC,IAAI,EAAE;IACJC,QAAQ,EAAE,GAAG;IACbC,OAAO,EAAET,KAAK,CAACU,OAAO,CAAC,CAAC,CAAC;IACzBC,MAAM,EAAEX,KAAK,CAACU,OAAO,CAAC,CAAC;EACzB,CAAC;EACDE,IAAI,EAAE;IACJV,OAAO,EAAE,MAAM;IACfW,aAAa,EAAE,QAAQ;IACvBC,GAAG,EAAEd,KAAK,CAACU,OAAO,CAAC,CAAC;EACtB,CAAC;EACDK,MAAM,EAAE;IACNC,SAAS,EAAEhB,KAAK,CAACU,OAAO,CAAC,CAAC;EAC5B;AACF,CAAC,CAAC,CAAC;AAEH,SAASO,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAMC,OAAO,GAAGpB,SAAS,CAAC,CAAC;EAC3B,MAAM,CAACqB,IAAI,EAAEC,OAAO,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACkC,QAAQ,EAAEC,WAAW,CAAC,GAAGnC,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACoC,OAAO,EAAEC,UAAU,CAAC,GAAGrC,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACsC,WAAW,EAAEC,cAAc,CAAC,GAAGvC,QAAQ,CAAC,IAAI,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd,MAAMuC,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,CAAC;QACjE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCL,cAAc,CAACI,IAAI,CAACL,WAAW,CAAC;MAClC,CAAC,CAAC,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAChC;IACF,CAAC;IACDL,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,GAAG,GAAGZ,WAAW,GAAG,gCAAgC,GAAG,6BAA6B;IAC1F,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACQ,GAAG,EAAE;MAChCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEvB,IAAI;QAAEE;MAAS,CAAC;IACzC,CAAC,CAAC;IAEF,MAAMS,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClCP,UAAU,CAACM,IAAI,CAACP,OAAO,CAAC;EAC1B,CAAC;EAED,oBACE1B,OAAA;IAAK8C,SAAS,EAAEzB,OAAO,CAAClB,IAAK;IAAA4C,QAAA,eAC3B/C,OAAA,CAACL,IAAI;MAACmD,SAAS,EAAEzB,OAAO,CAACZ,IAAK;MAAAsC,QAAA,eAC5B/C,OAAA,CAACJ,WAAW;QAAAmD,QAAA,gBACV/C,OAAA,CAACH,UAAU;UAACmD,OAAO,EAAC,IAAI;UAACC,SAAS,EAAC,IAAI;UAACC,YAAY;UAAAH,QAAA,EACjDnB,WAAW,GAAG,mBAAmB,GAAG;QAAO;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC,CAAC,eACbtD,OAAA;UAAM8C,SAAS,EAAEzB,OAAO,CAACP,IAAK;UAACyC,QAAQ,EAAElB,YAAa;UAAAU,QAAA,gBACpD/C,OAAA,CAACP,SAAS;YACR+D,KAAK,EAAC,MAAM;YACZR,OAAO,EAAC,UAAU;YAClBS,KAAK,EAAEnC,IAAK;YACZoC,QAAQ,EAAGpB,CAAC,IAAKf,OAAO,CAACe,CAAC,CAACqB,MAAM,CAACF,KAAK,CAAE;YACzCG,QAAQ;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC,eACFtD,OAAA,CAACP,SAAS;YACR+D,KAAK,EAAC,UAAU;YAChBK,IAAI,EAAC,UAAU;YACfb,OAAO,EAAC,UAAU;YAClBS,KAAK,EAAEjC,QAAS;YAChBkC,QAAQ,EAAGpB,CAAC,IAAKb,WAAW,CAACa,CAAC,CAACqB,MAAM,CAACF,KAAK,CAAE;YAC7CG,QAAQ;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC,eACFtD,OAAA,CAACN,MAAM;YAACoD,SAAS,EAAEzB,OAAO,CAACJ,MAAO;YAAC4C,IAAI,EAAC,QAAQ;YAACb,OAAO,EAAC,WAAW;YAACc,KAAK,EAAC,SAAS;YAAAf,QAAA,EACjFnB,WAAW,GAAG,UAAU,GAAG;UAAO;YAAAuB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,EACN5B,OAAO,iBAAI1B,OAAA,CAACH,UAAU;UAACiE,KAAK,EAAC,OAAO;UAAAf,QAAA,EAAErB;QAAO;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAClC,EAAA,CAnEQD,aAAa;EAAA,QACJlB,SAAS;AAAA;AAAA8D,EAAA,GADlB5C,aAAa;AAqEtB,eAAeA,aAAa;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}