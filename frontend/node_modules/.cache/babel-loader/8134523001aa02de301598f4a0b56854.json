{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\morga\\\\Desktop\\\\CranialDevice_web\\\\CranialDevice_web\\\\frontend\\\\src\\\\pages\\\\symptoms\\\\SymptomList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Container, Typography, Table, TableBody, TableCell, TableHead, TableRow, Paper, IconButton, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Button, Box, TablePagination } from '@mui/material';\nimport { styled } from '@mui/system';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddIcon from '@mui/icons-material/Add';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { ClipLoader } from 'react-spinners';\nimport AddSymptomDialog from './AddSymptomDialog';\nimport EditSymptomDialog from './EditSymptomDialog';\nimport BackgroundWrapper from '../../components/BackgroundWrapper'; // Importa BackgroundWrapper\nimport './SymptomList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Root = styled('div')({\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  height: '62vm',\n  backgroundColor: '#ffffff',\n  opacity: 0.1\n});\nconst StyledTable = styled(Table)({\n  minWidth: 650,\n  '& .MuiTableCell-head': {\n    backgroundColor: '#f1f1f1',\n    fontWeight: 'bold'\n  },\n  '& .MuiTableCell-body': {\n    fontSize: 14\n  }\n});\nconst Header = styled('div')({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  width: '100%',\n  marginBottom: 16\n});\nconst AddButton = styled(Button)({\n  backgroundColor: '#4caf50',\n  color: '#fff',\n  '&:hover': {\n    backgroundColor: '#45a049'\n  }\n});\nfunction SymptomList() {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [symptoms, setSymptoms] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [addDialogOpen, setAddDialogOpen] = useState(false);\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n  const [selectedSymptom, setSelectedSymptom] = useState(null);\n  const [selectedSymptoms, setSelectedSymptoms] = useState([]);\n  useEffect(() => {\n    const fetchSymptoms = async () => {\n      if (!user) return;\n      try {\n        const response = await fetch('http://localhost:5000/api/symptoms', {\n          method: 'GET',\n          credentials: 'include'\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setSymptoms(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSymptoms();\n  }, [user]);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  const handleDelete = async ids => {\n    try {\n      const response = await fetch('http://localhost:5000/api/symptoms', {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          ids\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      setSymptoms(prevSymptoms => prevSymptoms.filter(symptom => !ids.includes(symptom.id)));\n      setDeleteDialogOpen(false);\n      setSelectedSymptoms([]);\n      setSelectedSymptom(null);\n    } catch (error) {\n      console.error('Error deleting symptom:', error.message);\n    }\n  };\n  const handleAddDialogOpen = () => {\n    setAddDialogOpen(true);\n  };\n  const handleAddDialogClose = () => {\n    setAddDialogOpen(false);\n  };\n  const handleSymptomAdded = () => {\n    setAddDialogOpen(false);\n    const fetchSymptoms = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/symptoms', {\n          method: 'GET',\n          credentials: 'include'\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setSymptoms(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSymptoms();\n  };\n  const handleEditDialogOpen = symptom => {\n    setSelectedSymptom(symptom);\n    setEditDialogOpen(true);\n  };\n  const handleEditDialogClose = () => {\n    setEditDialogOpen(false);\n    setSelectedSymptom(null);\n  };\n  const handleEditSubmit = async updatedSymptom => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/symptoms`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify(updatedSymptom)\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      setSymptoms(prevSymptoms => prevSymptoms.map(symptom => symptom.id === updatedSymptom.id ? {\n        ...symptom,\n        ...updatedSymptom\n      } : symptom));\n      setEditDialogOpen(false);\n      setSelectedSymptom(null);\n    } catch (error) {\n      console.error('Error updating symptom:', error.message);\n    }\n  };\n  const handleDeleteDialogOpen = symptom => {\n    setSelectedSymptom(symptom);\n    setDeleteDialogOpen(true);\n  };\n  const handleDeleteDialogClose = () => {\n    setDeleteDialogOpen(false);\n    setSelectedSymptom(null);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Root, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(ClipLoader, {\n          size: 50,\n          color: \"#123abc\",\n          loading: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          style: {\n            marginTop: '20px'\n          },\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Root, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"error\",\n          children: [\"Error: \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => window.location.reload(),\n          children: \"Retry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(BackgroundWrapper, {\n    children: /*#__PURE__*/_jsxDEV(Root, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          component: Paper,\n          className: \"table-container\",\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: () => navigate('/main'),\n              children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              component: \"h1\",\n              gutterBottom: true,\n              children: \"Lista Sintomi\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this), user && /*#__PURE__*/_jsxDEV(AddButton, {\n              variant: \"contained\",\n              color: \"primary\",\n              startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 30\n              }, this),\n              onClick: handleAddDialogOpen,\n              children: \"Aggiungi Sintomo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StyledTable, {\n            className: \"styled-table\",\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Nome\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Descrizione\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: symptoms.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(symptom => /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: symptom.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: symptom.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                    onClick: () => handleEditDialogOpen(symptom),\n                    children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 275,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 274,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                    onClick: () => handleDeleteDialogOpen(symptom),\n                    children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 278,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 21\n                }, this)]\n              }, symptom.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n            rowsPerPageOptions: [5, 10],\n            component: \"div\",\n            count: symptoms.length,\n            rowsPerPage: rowsPerPage,\n            page: page,\n            onPageChange: handleChangePage,\n            onRowsPerPageChange: handleChangeRowsPerPage,\n            className: \"pagination\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), user && /*#__PURE__*/_jsxDEV(AddSymptomDialog, {\n        open: addDialogOpen,\n        onClose: handleAddDialogClose,\n        onSymptomAdded: handleSymptomAdded\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }, this), user && selectedSymptom && /*#__PURE__*/_jsxDEV(EditSymptomDialog, {\n        open: editDialogOpen,\n        onClose: handleEditDialogClose,\n        onEditSubmit: handleEditSubmit,\n        symptom: selectedSymptom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: deleteDialogOpen,\n        onClose: handleDeleteDialogClose,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Conferma Eliminazione\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n            children: selectedSymptom ? `Sei sicuro di voler eliminare il sintomo ${selectedSymptom.name}?` : 'Sei sicuro di voler eliminare i sintomi selezionati?'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleDeleteDialogClose,\n            color: \"primary\",\n            children: \"Annulla\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleDelete(selectedSymptom ? [selectedSymptom.id] : selectedSymptoms),\n            color: \"primary\",\n            children: \"Elimina\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 5\n  }, this);\n}\n_s(SymptomList, \"kKc4S6xhwXf7dWvKqFVFyxgO+Y0=\", false, function () {\n  return [useAuth];\n});\n_c = SymptomList;\nexport default SymptomList;\nvar _c;\n$RefreshReg$(_c, \"SymptomList\");","map":{"version":3,"names":["React","useEffect","useState","Container","Typography","Table","TableBody","TableCell","TableHead","TableRow","Paper","IconButton","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Button","Box","TablePagination","styled","EditIcon","DeleteIcon","AddIcon","CloseIcon","useAuth","ClipLoader","AddSymptomDialog","EditSymptomDialog","BackgroundWrapper","jsxDEV","_jsxDEV","Root","display","justifyContent","alignItems","height","backgroundColor","opacity","StyledTable","minWidth","fontWeight","fontSize","Header","width","marginBottom","AddButton","color","SymptomList","_s","user","symptoms","setSymptoms","loading","setLoading","error","setError","page","setPage","rowsPerPage","setRowsPerPage","addDialogOpen","setAddDialogOpen","deleteDialogOpen","setDeleteDialogOpen","editDialogOpen","setEditDialogOpen","selectedSymptom","setSelectedSymptom","selectedSymptoms","setSelectedSymptoms","fetchSymptoms","response","fetch","method","credentials","ok","Error","data","json","message","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","handleDelete","ids","headers","body","JSON","stringify","prevSymptoms","filter","symptom","includes","id","console","handleAddDialogOpen","handleAddDialogClose","handleSymptomAdded","handleEditDialogOpen","handleEditDialogClose","handleEditSubmit","updatedSymptom","map","handleDeleteDialogOpen","handleDeleteDialogClose","children","flexDirection","size","fileName","_jsxFileName","lineNumber","columnNumber","variant","style","marginTop","onClick","window","location","reload","className","component","navigate","gutterBottom","startIcon","slice","name","description","rowsPerPageOptions","count","length","onPageChange","onRowsPerPageChange","open","onClose","onSymptomAdded","onEditSubmit","_c","$RefreshReg$"],"sources":["C:/Users/morga/Desktop/CranialDevice_web/CranialDevice_web/frontend/src/pages/symptoms/SymptomList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  Container,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Paper,\n  IconButton,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Button,\n  Box,\n  TablePagination,\n} from '@mui/material';\nimport { styled } from '@mui/system';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddIcon from '@mui/icons-material/Add';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { ClipLoader } from 'react-spinners';\nimport AddSymptomDialog from './AddSymptomDialog';\nimport EditSymptomDialog from './EditSymptomDialog';\nimport BackgroundWrapper from '../../components/BackgroundWrapper'; // Importa BackgroundWrapper\nimport './SymptomList.css';\n\nconst Root = styled('div')({\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  height: '62vm',\n  backgroundColor: '#ffffff',\n  opacity:0.1\n});\n\nconst StyledTable = styled(Table)({\n  minWidth: 650,\n  '& .MuiTableCell-head': {\n    backgroundColor: '#f1f1f1',\n    fontWeight: 'bold',\n  },\n  '& .MuiTableCell-body': {\n    fontSize: 14,\n  },\n});\n\nconst Header = styled('div')({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  width: '100%',\n  marginBottom: 16,\n});\n\nconst AddButton = styled(Button)({\n  backgroundColor: '#4caf50',\n  color: '#fff',\n  '&:hover': {\n    backgroundColor: '#45a049',\n  },\n});\n\nfunction SymptomList() {\n  const { user } = useAuth();\n  const [symptoms, setSymptoms] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [addDialogOpen, setAddDialogOpen] = useState(false);\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n  const [selectedSymptom, setSelectedSymptom] = useState(null);\n  const [selectedSymptoms, setSelectedSymptoms] = useState([]);\n\n  useEffect(() => {\n    const fetchSymptoms = async () => {\n      if (!user) return;\n\n      try {\n        const response = await fetch('http://localhost:5000/api/symptoms', {\n          method: 'GET',\n          credentials: 'include',\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setSymptoms(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSymptoms();\n  }, [user]);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleDelete = async (ids) => {\n    try {\n      const response = await fetch('http://localhost:5000/api/symptoms', {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        credentials: 'include',\n        body: JSON.stringify({ ids }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      setSymptoms((prevSymptoms) => prevSymptoms.filter((symptom) => !ids.includes(symptom.id)));\n      setDeleteDialogOpen(false);\n      setSelectedSymptoms([]);\n      setSelectedSymptom(null);\n    } catch (error) {\n      console.error('Error deleting symptom:', error.message);\n    }\n  };\n\n  const handleAddDialogOpen = () => {\n    setAddDialogOpen(true);\n  };\n\n  const handleAddDialogClose = () => {\n    setAddDialogOpen(false);\n  };\n\n  const handleSymptomAdded = () => {\n    setAddDialogOpen(false);\n    const fetchSymptoms = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/symptoms', {\n          method: 'GET',\n          credentials: 'include',\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setSymptoms(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSymptoms();\n  };\n\n  const handleEditDialogOpen = (symptom) => {\n    setSelectedSymptom(symptom);\n    setEditDialogOpen(true);\n  };\n\n  const handleEditDialogClose = () => {\n    setEditDialogOpen(false);\n    setSelectedSymptom(null);\n  };\n\n  const handleEditSubmit = async (updatedSymptom) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/symptoms`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        credentials: 'include',\n        body: JSON.stringify(updatedSymptom),\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      setSymptoms((prevSymptoms) =>\n        prevSymptoms.map((symptom) =>\n          symptom.id === updatedSymptom.id ? { ...symptom, ...updatedSymptom } : symptom\n        )\n      );\n      setEditDialogOpen(false);\n      setSelectedSymptom(null);\n    } catch (error) {\n      console.error('Error updating symptom:', error.message);\n    }\n  };\n\n  const handleDeleteDialogOpen = (symptom) => {\n    setSelectedSymptom(symptom);\n    setDeleteDialogOpen(true);\n  };\n\n  const handleDeleteDialogClose = () => {\n    setDeleteDialogOpen(false);\n    setSelectedSymptom(null);\n  };\n\n  if (loading) {\n    return (\n      <Root>\n        <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n          <ClipLoader size={50} color={\"#123abc\"} loading={loading} />\n          <Typography variant=\"h6\" style={{ marginTop: '20px' }}>Loading...</Typography>\n        </Box>\n      </Root>\n    );\n  }\n\n  if (error) {\n    return (\n      <Root>\n        <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n          <Typography variant=\"h6\" color=\"error\">Error: {error}</Typography>\n          <Button variant=\"contained\" color=\"primary\" onClick={() => window.location.reload()}>Retry</Button>\n        </Box>\n      </Root>\n    );\n  }\n\n  return (\n    <BackgroundWrapper>\n      <Root>\n        <div className=\"content\">\n          <Container component={Paper} className=\"table-container\">\n            <Header>\n              <IconButton onClick={() => navigate('/main')}>\n                <CloseIcon />\n              </IconButton>\n              <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n                Lista Sintomi\n              </Typography>\n              {user && (\n                <AddButton\n                  variant=\"contained\"\n                  color=\"primary\"\n                  startIcon={<AddIcon />}\n                  onClick={handleAddDialogOpen}\n                >\n                  Aggiungi Sintomo\n                </AddButton>\n              )}\n            </Header>\n            <StyledTable className=\"styled-table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell>Nome</TableCell>\n                  <TableCell>Descrizione</TableCell>\n                  <TableCell>Actions</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {symptoms.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((symptom) => (\n                  <TableRow key={symptom.id}>\n                    <TableCell>{symptom.name}</TableCell>\n                    <TableCell>{symptom.description}</TableCell>\n                    <TableCell>\n                      <IconButton onClick={() => handleEditDialogOpen(symptom)}>\n                        <EditIcon />\n                      </IconButton>\n                      <IconButton onClick={() => handleDeleteDialogOpen(symptom)}>\n                        <DeleteIcon />\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </StyledTable>\n            <TablePagination\n              rowsPerPageOptions={[5, 10]}\n              component=\"div\"\n              count={symptoms.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onPageChange={handleChangePage}\n              onRowsPerPageChange={handleChangeRowsPerPage}\n              className=\"pagination\"\n            />\n          </Container>\n        </div>\n        {user && (\n          <AddSymptomDialog open={addDialogOpen} onClose={handleAddDialogClose} onSymptomAdded={handleSymptomAdded} />\n        )}\n        {user && selectedSymptom && (\n          <EditSymptomDialog\n            open={editDialogOpen}\n            onClose={handleEditDialogClose}\n            onEditSubmit={handleEditSubmit}\n            symptom={selectedSymptom}\n          />\n        )}\n        <Dialog open={deleteDialogOpen} onClose={handleDeleteDialogClose}>\n          <DialogTitle>Conferma Eliminazione</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              {selectedSymptom\n                ? `Sei sicuro di voler eliminare il sintomo ${selectedSymptom.name}?`\n                : 'Sei sicuro di voler eliminare i sintomi selezionati?'}\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleDeleteDialogClose} color=\"primary\">\n              Annulla\n            </Button>\n            <Button onClick={() => handleDelete(selectedSymptom ? [selectedSymptom.id] : selectedSymptoms)} color=\"primary\">\n              Elimina\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Root>\n    </BackgroundWrapper>\n  );\n}\n\nexport default SymptomList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}