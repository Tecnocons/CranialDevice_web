{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Davide Grieco\\\\Desktop\\\\CranialDevice_web\\\\frontend\\\\src\\\\pages\\\\symptoms\\\\SymptomList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Container, Typography, Table, TableBody, TableCell, TableHead, TableRow, Paper, IconButton, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Button, Box, TablePagination } from '@mui/material';\nimport { styled } from '@mui/system';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddIcon from '@mui/icons-material/Add';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { ClipLoader } from 'react-spinners';\nimport AddSymptomDialog from './AddSymptomDialog';\nimport EditSymptomDialog from './EditSymptomDialog';\nimport BackgroundWrapper from '../../components/BackgroundWrapper'; // Importa BackgroundWrapper\nimport './SymptomList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Root = styled('div')({\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  height: '62vm',\n  backgroundColor: '#ffffff',\n  opacity: 0.9,\n  marginTop: '2%'\n});\nconst StyledTable = styled(Table)({\n  minWidth: 650,\n  '& .MuiTableCell-head': {\n    backgroundColor: '#f1f1f1',\n    fontWeight: 'bold'\n  },\n  '& .MuiTableCell-body': {\n    fontSize: 14\n  }\n});\nconst Header = styled('div')({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  width: '100%',\n  marginBottom: 16\n});\nconst AddButton = styled(Button)({\n  backgroundColor: '#4caf50',\n  color: '#fff',\n  '&:hover': {\n    backgroundColor: '#45a049'\n  }\n});\nfunction SymptomList() {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [symptoms, setSymptoms] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [addDialogOpen, setAddDialogOpen] = useState(false);\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n  const [selectedSymptom, setSelectedSymptom] = useState(null);\n  const [selectedSymptoms, setSelectedSymptoms] = useState([]);\n  useEffect(() => {\n    const fetchSymptoms = async () => {\n      if (!user) return;\n      try {\n        const response = await fetch('http://localhost:5000/api/symptoms', {\n          method: 'GET',\n          credentials: 'include'\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setSymptoms(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSymptoms();\n  }, [user]);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  const handleDelete = async ids => {\n    try {\n      const response = await fetch('http://localhost:5000/api/symptoms', {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          ids\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      setSymptoms(prevSymptoms => prevSymptoms.filter(symptom => !ids.includes(symptom.id)));\n      setDeleteDialogOpen(false);\n      setSelectedSymptoms([]);\n      setSelectedSymptom(null);\n    } catch (error) {\n      console.error('Error deleting symptom:', error.message);\n    }\n  };\n  const handleAddDialogOpen = () => {\n    setAddDialogOpen(true);\n  };\n  const handleAddDialogClose = () => {\n    setAddDialogOpen(false);\n  };\n  const handleSymptomAdded = () => {\n    setAddDialogOpen(false);\n    const fetchSymptoms = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/symptoms', {\n          method: 'GET',\n          credentials: 'include'\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setSymptoms(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSymptoms();\n  };\n  const handleEditDialogOpen = symptom => {\n    setSelectedSymptom(symptom);\n    setEditDialogOpen(true);\n  };\n  const handleEditDialogClose = () => {\n    setEditDialogOpen(false);\n    setSelectedSymptom(null);\n  };\n  const handleEditSubmit = async updatedSymptom => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/symptoms`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify(updatedSymptom)\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      setSymptoms(prevSymptoms => prevSymptoms.map(symptom => symptom.id === updatedSymptom.id ? {\n        ...symptom,\n        ...updatedSymptom\n      } : symptom));\n      setEditDialogOpen(false);\n      setSelectedSymptom(null);\n    } catch (error) {\n      console.error('Error updating symptom:', error.message);\n    }\n  };\n  const handleDeleteDialogOpen = symptom => {\n    setSelectedSymptom(symptom);\n    setDeleteDialogOpen(true);\n  };\n  const handleDeleteDialogClose = () => {\n    setDeleteDialogOpen(false);\n    setSelectedSymptom(null);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Root, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(ClipLoader, {\n          size: 50,\n          color: \"#123abc\",\n          loading: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          style: {\n            marginTop: '20px'\n          },\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Root, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"error\",\n          children: [\"Error: \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => window.location.reload(),\n          children: \"Retry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(BackgroundWrapper, {\n    children: /*#__PURE__*/_jsxDEV(Root, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          component: Paper,\n          className: \"table-container\",\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: () => navigate('/main'),\n              children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              component: \"h1\",\n              gutterBottom: true,\n              children: \"Lista Sintomi\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this), user && user.isAdmin && /*#__PURE__*/_jsxDEV(AddButton, {\n              variant: \"contained\",\n              color: \"primary\",\n              startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 30\n              }, this),\n              onClick: handleAddDialogOpen,\n              children: \"Aggiungi Sintomo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StyledTable, {\n            className: \"styled-table\",\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Nome\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Descrizione\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 19\n                }, this), user && user.isAdmin && /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 44\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: symptoms.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(symptom => /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: symptom.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: symptom.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 21\n                }, this), user && user.isAdmin && /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                    onClick: () => handleEditDialogOpen(symptom),\n                    children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 277,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 276,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                    onClick: () => handleDeleteDialogOpen(symptom),\n                    children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 280,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 23\n                }, this)]\n              }, symptom.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n            rowsPerPageOptions: [5, 10],\n            component: \"div\",\n            count: symptoms.length,\n            rowsPerPage: rowsPerPage,\n            page: page,\n            onPageChange: handleChangePage,\n            onRowsPerPageChange: handleChangeRowsPerPage,\n            className: \"pagination\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), user && user.isAdmin && /*#__PURE__*/_jsxDEV(AddSymptomDialog, {\n        open: addDialogOpen,\n        onClose: handleAddDialogClose,\n        onSymptomAdded: handleSymptomAdded\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }, this), user && user.isAdmin && selectedSymptom && /*#__PURE__*/_jsxDEV(EditSymptomDialog, {\n        open: editDialogOpen,\n        onClose: handleEditDialogClose,\n        onEditSubmit: handleEditSubmit,\n        symptom: selectedSymptom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: deleteDialogOpen,\n        onClose: handleDeleteDialogClose,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Conferma Eliminazione\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n            children: selectedSymptom ? `Sei sicuro di voler eliminare il sintomo ${selectedSymptom.name}?` : 'Sei sicuro di voler eliminare i sintomi selezionati?'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleDeleteDialogClose,\n            color: \"primary\",\n            children: \"Annulla\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleDelete(selectedSymptom ? [selectedSymptom.id] : selectedSymptoms),\n            color: \"primary\",\n            children: \"Elimina\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 239,\n    columnNumber: 5\n  }, this);\n}\n_s(SymptomList, \"kKc4S6xhwXf7dWvKqFVFyxgO+Y0=\", false, function () {\n  return [useAuth];\n});\n_c = SymptomList;\nexport default SymptomList;\nvar _c;\n$RefreshReg$(_c, \"SymptomList\");","map":{"version":3,"names":["React","useEffect","useState","Container","Typography","Table","TableBody","TableCell","TableHead","TableRow","Paper","IconButton","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Button","Box","TablePagination","styled","EditIcon","DeleteIcon","AddIcon","CloseIcon","useAuth","ClipLoader","AddSymptomDialog","EditSymptomDialog","BackgroundWrapper","jsxDEV","_jsxDEV","Root","display","justifyContent","alignItems","height","backgroundColor","opacity","marginTop","StyledTable","minWidth","fontWeight","fontSize","Header","width","marginBottom","AddButton","color","SymptomList","_s","user","symptoms","setSymptoms","loading","setLoading","error","setError","page","setPage","rowsPerPage","setRowsPerPage","addDialogOpen","setAddDialogOpen","deleteDialogOpen","setDeleteDialogOpen","editDialogOpen","setEditDialogOpen","selectedSymptom","setSelectedSymptom","selectedSymptoms","setSelectedSymptoms","fetchSymptoms","response","fetch","method","credentials","ok","Error","data","json","message","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","handleDelete","ids","headers","body","JSON","stringify","prevSymptoms","filter","symptom","includes","id","console","handleAddDialogOpen","handleAddDialogClose","handleSymptomAdded","handleEditDialogOpen","handleEditDialogClose","handleEditSubmit","updatedSymptom","map","handleDeleteDialogOpen","handleDeleteDialogClose","children","flexDirection","size","fileName","_jsxFileName","lineNumber","columnNumber","variant","style","onClick","window","location","reload","className","component","navigate","gutterBottom","isAdmin","startIcon","slice","name","description","rowsPerPageOptions","count","length","onPageChange","onRowsPerPageChange","open","onClose","onSymptomAdded","onEditSubmit","_c","$RefreshReg$"],"sources":["C:/Users/Davide Grieco/Desktop/CranialDevice_web/frontend/src/pages/symptoms/SymptomList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  IconButton,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Button,\r\n  Box,\r\n  TablePagination,\r\n} from '@mui/material';\r\nimport { styled } from '@mui/system';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { ClipLoader } from 'react-spinners';\r\nimport AddSymptomDialog from './AddSymptomDialog';\r\nimport EditSymptomDialog from './EditSymptomDialog';\r\nimport BackgroundWrapper from '../../components/BackgroundWrapper'; // Importa BackgroundWrapper\r\nimport './SymptomList.css';\r\n\r\nconst Root = styled('div')({\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center',\r\n  height: '62vm',\r\n  backgroundColor: '#ffffff',\r\n  opacity:0.9,\r\n  marginTop: '2%',\r\n});\r\n\r\nconst StyledTable = styled(Table)({\r\n  minWidth: 650,\r\n  '& .MuiTableCell-head': {\r\n    backgroundColor: '#f1f1f1',\r\n    fontWeight: 'bold',\r\n  },\r\n  '& .MuiTableCell-body': {\r\n    fontSize: 14,\r\n  },\r\n});\r\n\r\nconst Header = styled('div')({\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  alignItems: 'center',\r\n  width: '100%',\r\n  marginBottom: 16,\r\n});\r\n\r\nconst AddButton = styled(Button)({\r\n  backgroundColor: '#4caf50',\r\n  color: '#fff',\r\n  '&:hover': {\r\n    backgroundColor: '#45a049',\r\n  },\r\n});\r\n\r\nfunction SymptomList() {\r\n  const { user } = useAuth();\r\n  const [symptoms, setSymptoms] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const [addDialogOpen, setAddDialogOpen] = useState(false);\r\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\r\n  const [selectedSymptom, setSelectedSymptom] = useState(null);\r\n  const [selectedSymptoms, setSelectedSymptoms] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchSymptoms = async () => {\r\n      if (!user) return;\r\n\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/symptoms', {\r\n          method: 'GET',\r\n          credentials: 'include',\r\n        });\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        const data = await response.json();\r\n        setSymptoms(data);\r\n      } catch (error) {\r\n        setError(error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchSymptoms();\r\n  }, [user]);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleDelete = async (ids) => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/symptoms', {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ ids }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n\r\n      setSymptoms((prevSymptoms) => prevSymptoms.filter((symptom) => !ids.includes(symptom.id)));\r\n      setDeleteDialogOpen(false);\r\n      setSelectedSymptoms([]);\r\n      setSelectedSymptom(null);\r\n    } catch (error) {\r\n      console.error('Error deleting symptom:', error.message);\r\n    }\r\n  };\r\n\r\n  const handleAddDialogOpen = () => {\r\n    setAddDialogOpen(true);\r\n  };\r\n\r\n  const handleAddDialogClose = () => {\r\n    setAddDialogOpen(false);\r\n  };\r\n\r\n  const handleSymptomAdded = () => {\r\n    setAddDialogOpen(false);\r\n    const fetchSymptoms = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/symptoms', {\r\n          method: 'GET',\r\n          credentials: 'include',\r\n        });\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        const data = await response.json();\r\n        setSymptoms(data);\r\n      } catch (error) {\r\n        setError(error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchSymptoms();\r\n  };\r\n\r\n  const handleEditDialogOpen = (symptom) => {\r\n    setSelectedSymptom(symptom);\r\n    setEditDialogOpen(true);\r\n  };\r\n\r\n  const handleEditDialogClose = () => {\r\n    setEditDialogOpen(false);\r\n    setSelectedSymptom(null);\r\n  };\r\n\r\n  const handleEditSubmit = async (updatedSymptom) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/symptoms`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify(updatedSymptom),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n\r\n      setSymptoms((prevSymptoms) =>\r\n        prevSymptoms.map((symptom) =>\r\n          symptom.id === updatedSymptom.id ? { ...symptom, ...updatedSymptom } : symptom\r\n        )\r\n      );\r\n      setEditDialogOpen(false);\r\n      setSelectedSymptom(null);\r\n    } catch (error) {\r\n      console.error('Error updating symptom:', error.message);\r\n    }\r\n  };\r\n\r\n  const handleDeleteDialogOpen = (symptom) => {\r\n    setSelectedSymptom(symptom);\r\n    setDeleteDialogOpen(true);\r\n  };\r\n\r\n  const handleDeleteDialogClose = () => {\r\n    setDeleteDialogOpen(false);\r\n    setSelectedSymptom(null);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Root>\r\n        <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n          <ClipLoader size={50} color={\"#123abc\"} loading={loading} />\r\n          <Typography variant=\"h6\" style={{ marginTop: '20px' }}>Loading...</Typography>\r\n        </Box>\r\n      </Root>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Root>\r\n        <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n          <Typography variant=\"h6\" color=\"error\">Error: {error}</Typography>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={() => window.location.reload()}>Retry</Button>\r\n        </Box>\r\n      </Root>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <BackgroundWrapper>\r\n      <Root>\r\n        <div className=\"content\">\r\n          <Container component={Paper} className=\"table-container\">\r\n            <Header>\r\n              <IconButton onClick={() => navigate('/main')}>\r\n                <CloseIcon />\r\n              </IconButton>\r\n              <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n                Lista Sintomi\r\n              </Typography>\r\n              {user && user.isAdmin && (\r\n                <AddButton\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  startIcon={<AddIcon />}\r\n                  onClick={handleAddDialogOpen}\r\n                >\r\n                  Aggiungi Sintomo\r\n                </AddButton>\r\n              )}\r\n            </Header>\r\n            <StyledTable className=\"styled-table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Nome</TableCell>\r\n                  <TableCell>Descrizione</TableCell>\r\n                  {user && user.isAdmin && <TableCell>Actions</TableCell>}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {symptoms.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((symptom) => (\r\n                  <TableRow key={symptom.id}>\r\n                    <TableCell>{symptom.name}</TableCell>\r\n                    <TableCell>{symptom.description}</TableCell>\r\n                    {user && user.isAdmin && (\r\n                      <TableCell>\r\n                        <IconButton onClick={() => handleEditDialogOpen(symptom)}>\r\n                          <EditIcon />\r\n                        </IconButton>\r\n                        <IconButton onClick={() => handleDeleteDialogOpen(symptom)}>\r\n                          <DeleteIcon />\r\n                        </IconButton>\r\n                      </TableCell>\r\n                    )}\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </StyledTable>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10]}\r\n              component=\"div\"\r\n              count={symptoms.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              onPageChange={handleChangePage}\r\n              onRowsPerPageChange={handleChangeRowsPerPage}\r\n              className=\"pagination\"\r\n            />\r\n          </Container>\r\n        </div>\r\n        {user && user.isAdmin && (\r\n          <AddSymptomDialog open={addDialogOpen} onClose={handleAddDialogClose} onSymptomAdded={handleSymptomAdded} />\r\n        )}\r\n        {user && user.isAdmin && selectedSymptom && (\r\n          <EditSymptomDialog\r\n            open={editDialogOpen}\r\n            onClose={handleEditDialogClose}\r\n            onEditSubmit={handleEditSubmit}\r\n            symptom={selectedSymptom}\r\n          />\r\n        )}\r\n        <Dialog open={deleteDialogOpen} onClose={handleDeleteDialogClose}>\r\n          <DialogTitle>Conferma Eliminazione</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              {selectedSymptom\r\n                ? `Sei sicuro di voler eliminare il sintomo ${selectedSymptom.name}?`\r\n                : 'Sei sicuro di voler eliminare i sintomi selezionati?'}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleDeleteDialogClose} color=\"primary\">\r\n              Annulla\r\n            </Button>\r\n            <Button onClick={() => handleDelete(selectedSymptom ? [selectedSymptom.id] : selectedSymptoms)} color=\"primary\">\r\n              Elimina\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Root>\r\n    </BackgroundWrapper>\r\n  );\r\n}\r\n\r\nexport default SymptomList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}