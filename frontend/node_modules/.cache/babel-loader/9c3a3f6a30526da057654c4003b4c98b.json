{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\morga\\\\Desktop\\\\CranialDevice_web\\\\CranialDevice_web\\\\frontend\\\\src\\\\pages\\\\patients\\\\PatientList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Container, Typography, Table, TableBody, TableCell, TableHead, TableRow, Paper, IconButton, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Button, Box, Link, TablePagination } from '@mui/material';\nimport { styled } from '@mui/system';\nimport { useNavigate } from 'react-router-dom';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddIcon from '@mui/icons-material/Add';\nimport CloseIcon from '@mui/icons-material/Close'; // Importa CloseIcon da Material-UI\nimport { useAuth } from '../../contexts/AuthContext';\nimport { ClipLoader } from 'react-spinners';\nimport AddPatientDialog from './AddPatientDialog';\nimport EditPatientDialog from './EditPatientDialog';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Root = styled('div')({\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  height: '100vh',\n  backgroundColor: '#f5f5f5'\n});\nconst StyledTable = styled(Table)({\n  minWidth: 650,\n  '& .MuiTableCell-head': {\n    backgroundColor: '#f1f1f1',\n    fontWeight: 'bold'\n  },\n  '& .MuiTableCell-body': {\n    fontSize: 14\n  }\n});\nconst Header = styled('div')({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  width: '100%',\n  marginBottom: 16\n});\nconst AddButton = styled(Button)({\n  backgroundColor: '#4caf50',\n  color: '#fff',\n  '&:hover': {\n    backgroundColor: '#45a049'\n  }\n});\nfunction PatientList() {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const navigate = useNavigate();\n  const [patients, setPatients] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [addDialogOpen, setAddDialogOpen] = useState(false);\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n  const [selectedPatient, setSelectedPatient] = useState(null);\n  const [selectedPatients, setSelectedPatients] = useState([]);\n  useEffect(() => {\n    const fetchPatients = async () => {\n      if (!user) return;\n      try {\n        const endpoint = user.isAdmin ? '/api/patients' : `/api/patients/assigned?doctor_name=${user.name}`;\n        const response = await fetch(`http://localhost:5000${endpoint}`, {\n          method: 'GET',\n          credentials: 'include'\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setPatients(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPatients();\n  }, [user]);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  const handleDelete = async uuids => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/patients/bulk_delete`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          uuids\n        })\n      });\n      if (!response.ok) {\n        const errorMessage = await response.json();\n        throw new Error(errorMessage.message);\n      }\n      setPatients(prevPatients => prevPatients.filter(patient => !uuids.includes(patient.uuid)));\n      setDeleteDialogOpen(false);\n      setSelectedPatients([]);\n      setSelectedPatient(null);\n    } catch (error) {\n      console.error('Error deleting patient:', error.message);\n    }\n  };\n  const handleAddDialogOpen = () => {\n    setAddDialogOpen(true);\n  };\n  const handleAddDialogClose = () => {\n    setAddDialogOpen(false);\n  };\n  const handlePatientAdded = () => {\n    setAddDialogOpen(false);\n    const fetchPatients = async () => {\n      try {\n        const endpoint = user.isAdmin ? '/api/patients' : `/api/patients/assigned?doctor_name=${user.name}`;\n        const response = await fetch(`http://localhost:5000${endpoint}`, {\n          method: 'GET',\n          credentials: 'include'\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setPatients(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPatients();\n  };\n  const handleEditDialogOpen = patient => {\n    setSelectedPatient(patient);\n    setEditDialogOpen(true);\n  };\n  const handleEditDialogClose = () => {\n    setEditDialogOpen(false);\n    setSelectedPatient(null);\n  };\n  const handleEditSubmit = async updatedPatient => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/patients`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify(updatedPatient)\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      setPatients(prevPatients => prevPatients.map(patient => patient.uuid === updatedPatient.uuid ? {\n        ...patient,\n        ...updatedPatient\n      } : patient));\n      setEditDialogOpen(false);\n      setSelectedPatient(null);\n    } catch (error) {\n      console.error('Error updating patient:', error.message);\n    }\n  };\n  const handleDeleteDialogOpen = patient => {\n    setSelectedPatient(patient);\n    setDeleteDialogOpen(true);\n  };\n  const handleDeleteDialogClose = () => {\n    setDeleteDialogOpen(false);\n    setSelectedPatient(null);\n  };\n  const handleSelectPatient = uuid => {\n    if (selectedPatients.includes(uuid)) {\n      setSelectedPatients(selectedPatients.filter(id => id !== uuid));\n    } else {\n      setSelectedPatients([...selectedPatients, uuid]);\n    }\n  };\n  const isSelected = uuid => selectedPatients.includes(uuid);\n  const handleSelectAllPatients = event => {\n    if (event.target.checked) {\n      const newSelecteds = patients.map(patient => patient.uuid);\n      setSelectedPatients(newSelecteds);\n    } else {\n      setSelectedPatients([]);\n    }\n  };\n  const isAllSelected = selectedPatients.length === patients.length;\n  const handleMultipleDelete = () => {\n    setDeleteDialogOpen(true);\n    setSelectedPatient(null);\n  };\n  const handlePatientInfoOpen = patient => {\n    navigate(`/patients/${patient.uuid}`);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Root, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(ClipLoader, {\n          size: 50,\n          color: \"#123abc\",\n          loading: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          style: {\n            marginTop: '20px'\n          },\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Root, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"error\",\n          children: [\"Error: \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => window.location.reload(),\n          children: \"Retry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Root, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        component: Paper,\n        className: \"table-container\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => navigate('/main'),\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            component: \"h1\",\n            gutterBottom: true,\n            children: \"Lista Pazienti\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this), user && /*#__PURE__*/_jsxDEV(AddButton, {\n            variant: \"contained\",\n            color: \"primary\",\n            startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 28\n            }, this),\n            onClick: handleAddDialogOpen,\n            children: \"Aggiungi Paziente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StyledTable, {\n          className: \"styled-table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Nominativo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Et\\xE0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Altezza\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Peso\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Dottore\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: patients.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(patient => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  component: \"button\",\n                  onClick: () => handlePatientInfoOpen(patient),\n                  children: patient.nominativo\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: patient.eta\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: patient.altezza\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: patient.peso\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: patient.doctor_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => handleEditDialogOpen(patient),\n                  children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => handleDeleteDialogOpen(patient),\n                  children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 19\n              }, this)]\n            }, patient.uuid, true, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n          rowsPerPageOptions: [10, 25, 50],\n          component: \"div\",\n          count: patients.length,\n          rowsPerPage: rowsPerPage,\n          page: page,\n          onPageChange: handleChangePage,\n          onRowsPerPageChange: handleChangeRowsPerPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddPatientDialog, {\n      open: addDialogOpen,\n      onClose: handleAddDialogClose,\n      onPatientAdded: handlePatientAdded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }, this), selectedPatient && /*#__PURE__*/_jsxDEV(EditPatientDialog, {\n      open: editDialogOpen,\n      onClose: handleEditDialogClose,\n      onEditSubmit: handleEditSubmit,\n      patient: selectedPatient\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: deleteDialogOpen,\n      onClose: handleDeleteDialogClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Conferma Eliminazione\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: selectedPatient ? `Sei sicuro di voler eliminare il paziente ${selectedPatient.nominativo}?` : 'Sei sicuro di voler eliminare i pazienti selezionati?'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleDeleteDialogClose,\n          color: \"primary\",\n          children: \"Annulla\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleDelete(selectedPatient ? [selectedPatient.uuid] : selectedPatients),\n          color: \"primary\",\n          children: \"Elimina\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 271,\n    columnNumber: 5\n  }, this);\n}\n_s(PatientList, \"rUoOf85oa0KY3rC7xQfhhtoBOo0=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = PatientList;\nexport default PatientList;\nvar _c;\n$RefreshReg$(_c, \"PatientList\");","map":{"version":3,"names":["React","useEffect","useState","Container","Typography","Table","TableBody","TableCell","TableHead","TableRow","Paper","IconButton","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Button","Box","Link","TablePagination","styled","useNavigate","EditIcon","DeleteIcon","AddIcon","CloseIcon","useAuth","ClipLoader","AddPatientDialog","EditPatientDialog","jsxDEV","_jsxDEV","Root","display","justifyContent","alignItems","height","backgroundColor","StyledTable","minWidth","fontWeight","fontSize","Header","width","marginBottom","AddButton","color","PatientList","_s","user","navigate","patients","setPatients","loading","setLoading","error","setError","page","setPage","rowsPerPage","setRowsPerPage","addDialogOpen","setAddDialogOpen","deleteDialogOpen","setDeleteDialogOpen","editDialogOpen","setEditDialogOpen","selectedPatient","setSelectedPatient","selectedPatients","setSelectedPatients","fetchPatients","endpoint","isAdmin","name","response","fetch","method","credentials","ok","Error","data","json","message","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","handleDelete","uuids","headers","body","JSON","stringify","errorMessage","prevPatients","filter","patient","includes","uuid","console","handleAddDialogOpen","handleAddDialogClose","handlePatientAdded","handleEditDialogOpen","handleEditDialogClose","handleEditSubmit","updatedPatient","map","handleDeleteDialogOpen","handleDeleteDialogClose","handleSelectPatient","id","isSelected","handleSelectAllPatients","checked","newSelecteds","isAllSelected","length","handleMultipleDelete","handlePatientInfoOpen","children","flexDirection","size","fileName","_jsxFileName","lineNumber","columnNumber","variant","style","marginTop","onClick","window","location","reload","className","component","gutterBottom","startIcon","slice","nominativo","eta","altezza","peso","doctor_name","rowsPerPageOptions","count","onPageChange","onRowsPerPageChange","open","onClose","onPatientAdded","onEditSubmit","_c","$RefreshReg$"],"sources":["C:/Users/morga/Desktop/CranialDevice_web/CranialDevice_web/frontend/src/pages/patients/PatientList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  Container,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Paper,\n  IconButton,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Button,\n  Box,\n  Link,\n  TablePagination,\n} from '@mui/material';\nimport { styled } from '@mui/system';\nimport { useNavigate } from 'react-router-dom';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddIcon from '@mui/icons-material/Add';\nimport CloseIcon from '@mui/icons-material/Close'; // Importa CloseIcon da Material-UI\nimport { useAuth } from '../../contexts/AuthContext';\nimport { ClipLoader } from 'react-spinners';\nimport AddPatientDialog from './AddPatientDialog';\nimport EditPatientDialog from './EditPatientDialog';\n\nconst Root = styled('div')({\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  height: '100vh',\n  backgroundColor: '#f5f5f5',\n});\n\nconst StyledTable = styled(Table)({\n  minWidth: 650,\n  '& .MuiTableCell-head': {\n    backgroundColor: '#f1f1f1',\n    fontWeight: 'bold',\n  },\n  '& .MuiTableCell-body': {\n    fontSize: 14,\n  },\n});\n\nconst Header = styled('div')({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  width: '100%',\n  marginBottom: 16,\n});\n\nconst AddButton = styled(Button)({\n  backgroundColor: '#4caf50',\n  color: '#fff',\n  '&:hover': {\n    backgroundColor: '#45a049',\n  },\n});\n\nfunction PatientList() {\n  const { user } = useAuth();\n  const navigate = useNavigate();\n  const [patients, setPatients] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [addDialogOpen, setAddDialogOpen] = useState(false);\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n  const [selectedPatient, setSelectedPatient] = useState(null);\n  const [selectedPatients, setSelectedPatients] = useState([]);\n\n  useEffect(() => {\n    const fetchPatients = async () => {\n      if (!user) return;\n\n      try {\n        const endpoint = user.isAdmin ? '/api/patients' : `/api/patients/assigned?doctor_name=${user.name}`;\n        const response = await fetch(`http://localhost:5000${endpoint}`, {\n          method: 'GET',\n          credentials: 'include',\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setPatients(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPatients();\n  }, [user]);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleDelete = async (uuids) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/patients/bulk_delete`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        credentials: 'include',\n        body: JSON.stringify({ uuids }),\n      });\n\n      if (!response.ok) {\n        const errorMessage = await response.json();\n        throw new Error(errorMessage.message);\n      }\n\n      setPatients((prevPatients) => prevPatients.filter((patient) => !uuids.includes(patient.uuid)));\n      setDeleteDialogOpen(false);\n      setSelectedPatients([]);\n      setSelectedPatient(null);\n    } catch (error) {\n      console.error('Error deleting patient:', error.message);\n    }\n  };\n\n  const handleAddDialogOpen = () => {\n    setAddDialogOpen(true);\n  };\n\n  const handleAddDialogClose = () => {\n    setAddDialogOpen(false);\n  };\n\n  const handlePatientAdded = () => {\n    setAddDialogOpen(false);\n    const fetchPatients = async () => {\n      try {\n        const endpoint = user.isAdmin ? '/api/patients' : `/api/patients/assigned?doctor_name=${user.name}`;\n        const response = await fetch(`http://localhost:5000${endpoint}`, {\n          method: 'GET',\n          credentials: 'include',\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setPatients(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPatients();\n  };\n\n  const handleEditDialogOpen = (patient) => {\n    setSelectedPatient(patient);\n    setEditDialogOpen(true);\n  };\n\n  const handleEditDialogClose = () => {\n    setEditDialogOpen(false);\n    setSelectedPatient(null);\n  };\n\n  const handleEditSubmit = async (updatedPatient) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/patients`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        credentials: 'include',\n        body: JSON.stringify(updatedPatient),\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      setPatients((prevPatients) =>\n        prevPatients.map((patient) =>\n          patient.uuid === updatedPatient.uuid ? { ...patient, ...updatedPatient } : patient\n        )\n      );\n      setEditDialogOpen(false);\n      setSelectedPatient(null);\n    } catch (error) {\n      console.error('Error updating patient:', error.message);\n    }\n  };\n\n  const handleDeleteDialogOpen = (patient) => {\n    setSelectedPatient(patient);\n    setDeleteDialogOpen(true);\n  };\n\n  const handleDeleteDialogClose = () => {\n    setDeleteDialogOpen(false);\n    setSelectedPatient(null);\n  };\n\n  const handleSelectPatient = (uuid) => {\n    if (selectedPatients.includes(uuid)) {\n      setSelectedPatients(selectedPatients.filter((id) => id !== uuid));\n    } else {\n      setSelectedPatients([...selectedPatients, uuid]);\n    }\n  };\n\n  const isSelected = (uuid) => selectedPatients.includes(uuid);\n\n  const handleSelectAllPatients = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = patients.map((patient) => patient.uuid);\n      setSelectedPatients(newSelecteds);\n    } else {\n      setSelectedPatients([]);\n    }\n  };\n\n  const isAllSelected = selectedPatients.length === patients.length;\n\n  const handleMultipleDelete = () => {\n    setDeleteDialogOpen(true);\n    setSelectedPatient(null);\n  };\n\n  const handlePatientInfoOpen = (patient) => {\n    navigate(`/patients/${patient.uuid}`);\n  };\n\n  if (loading) {\n    return (\n      <Root>\n        <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n          <ClipLoader size={50} color={\"#123abc\"} loading={loading} />\n          <Typography variant=\"h6\" style={{ marginTop: '20px' }}>Loading...</Typography>\n        </Box>\n      </Root>\n    );\n  }\n\n  if (error) {\n    return (\n      <Root>\n        <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n          <Typography variant=\"h6\" color=\"error\">Error: {error}</Typography>\n          <Button variant=\"contained\" color=\"primary\" onClick={() => window.location.reload()}>Retry</Button>\n        </Box>\n      </Root>\n    );\n  }\n\n  return (\n    <Root>\n      <div className=\"content\">\n        <Container component={Paper} className=\"table-container\">\n          <Header>\n            <IconButton onClick={() => navigate('/main')}>\n              <CloseIcon />\n            </IconButton>\n            <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n              Lista Pazienti\n            </Typography>\n            {user && (\n              <AddButton\n                variant=\"contained\"\n                color=\"primary\"\n                startIcon={<AddIcon />}\n                onClick={handleAddDialogOpen}\n              >\n                Aggiungi Paziente\n              </AddButton>\n            )}\n          </Header>\n          <StyledTable className=\"styled-table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Nominativo</TableCell>\n                <TableCell>Età</TableCell>\n                <TableCell>Altezza</TableCell>\n                <TableCell>Peso</TableCell>\n                <TableCell>Dottore</TableCell>\n                <TableCell>Actions</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {patients.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((patient) => (\n                <TableRow key={patient.uuid}>\n                  <TableCell>\n                    <Link component=\"button\" onClick={() => handlePatientInfoOpen(patient)}>\n                      {patient.nominativo}\n                    </Link>\n                  </TableCell>\n                  <TableCell>{patient.eta}</TableCell>\n                  <TableCell>{patient.altezza}</TableCell>\n                  <TableCell>{patient.peso}</TableCell>\n                  <TableCell>{patient.doctor_name}</TableCell>\n                  <TableCell>\n                    <IconButton onClick={() => handleEditDialogOpen(patient)}>\n                      <EditIcon />\n                    </IconButton>\n                    <IconButton onClick={() => handleDeleteDialogOpen(patient)}>\n                      <DeleteIcon />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </StyledTable>\n          <TablePagination\n            rowsPerPageOptions={[10, 25, 50]}\n            component=\"div\"\n            count={patients.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onPageChange={handleChangePage}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n          />\n        </Container>\n      </div>\n      <AddPatientDialog open={addDialogOpen} onClose={handleAddDialogClose} onPatientAdded={handlePatientAdded} />\n      {selectedPatient && (\n        <EditPatientDialog\n          open={editDialogOpen}\n          onClose={handleEditDialogClose}\n          onEditSubmit={handleEditSubmit}\n          patient={selectedPatient}\n        />\n      )}\n      <Dialog open={deleteDialogOpen} onClose={handleDeleteDialogClose}>\n        <DialogTitle>Conferma Eliminazione</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            {selectedPatient\n              ? `Sei sicuro di voler eliminare il paziente ${selectedPatient.nominativo}?`\n              : 'Sei sicuro di voler eliminare i pazienti selezionati?'}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleDeleteDialogClose} color=\"primary\">\n            Annulla\n          </Button>\n          <Button onClick={() => handleDelete(selectedPatient ? [selectedPatient.uuid] : selectedPatients)} color=\"primary\">\n            Elimina\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Root>\n  );\n}\n\nexport default PatientList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}