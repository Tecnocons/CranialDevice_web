{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Davide Grieco\\\\Desktop\\\\CranialDevice_web\\\\frontend\\\\src\\\\pages\\\\patients\\\\PatientProfile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { Container, Grid, Paper, Typography, IconButton, Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport SaveAltIcon from '@mui/icons-material/SaveAlt';\nimport EditIcon from '@mui/icons-material/Edit';\nimport jsPDF from 'jspdf';\nimport AssignPathologiesDialog from './AssignPathologiesDialog';\nimport './PatientProfile.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PatientProfile = () => {\n  _s();\n  const {\n    uuid\n  } = useParams(); // Ottieni l'UUID dai parametri della rotta\n  const navigate = useNavigate();\n  const [patient, setPatient] = useState(null);\n  const [pathologies, setPathologies] = useState([]);\n  const [assignDialogOpen, setAssignDialogOpen] = useState(false);\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n  const [editedPatient, setEditedPatient] = useState({});\n  const fetchPatient = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/patients/${uuid}`, {\n        method: 'GET',\n        credentials: 'include'\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setPatient(data);\n      setEditedPatient(data); // Initialize editedPatient with current patient data\n    } catch (error) {\n      console.error('Error fetching patient:', error);\n    }\n  };\n  const fetchPathologies = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/patient_pathology/${uuid}`, {\n        method: 'GET',\n        credentials: 'include'\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setPathologies(data);\n    } catch (error) {\n      console.error('Error fetching pathologies:', error);\n    }\n  };\n  useEffect(() => {\n    fetchPatient();\n    fetchPathologies();\n  }, [uuid]);\n  if (!patient) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }, this);\n  }\n  const measurements = [{\n    date: '2024-06-20',\n    value: '120/80'\n  }, {\n    date: '2024-06-21',\n    value: '125/85'\n  }];\n  const treatments = [{\n    date: '2024-06-20',\n    description: 'Antibiotics'\n  }, {\n    date: '2024-06-21',\n    description: 'Physical Therapy'\n  }];\n  const generatePDF = () => {\n    const doc = new jsPDF();\n    doc.setFontSize(18);\n    doc.text(`Cartella Clinica di ${patient.nominativo}`, 20, 20);\n    doc.setFontSize(14);\n    doc.text('Informazioni del Paziente', 20, 30);\n    doc.setFontSize(12);\n    doc.text(`Nome: ${patient.nominativo}`, 20, 40);\n    doc.text(`EtÃ : ${patient.eta}`, 20, 50);\n    doc.text(`Altezza: ${patient.altezza}`, 20, 60);\n    doc.text(`Peso: ${patient.peso}`, 20, 70);\n    doc.text(`Sesso: ${patient.sesso}`, 20, 80);\n    doc.setFontSize(14);\n    doc.text('Misurazioni', 20, 90);\n    doc.setFontSize(12);\n    measurements.forEach((measurement, index) => {\n      doc.text(`${measurement.date}: ${measurement.value}`, 20, 100 + index * 10);\n    });\n    doc.setFontSize(14);\n    doc.text('Trattamenti', 20, 110 + measurements.length * 10);\n    doc.setFontSize(12);\n    treatments.forEach((treatment, index) => {\n      doc.text(`${treatment.date}: ${treatment.description}`, 20, 120 + measurements.length * 10 + index * 10);\n    });\n    doc.setFontSize(14);\n    doc.text('Patologie', 20, 130 + measurements.length * 10 + treatments.length * 10);\n    doc.setFontSize(12);\n    pathologies.forEach((pathology, index) => {\n      doc.text(pathology.name, 20, 140 + measurements.length * 10 + treatments.length * 10 + index * 10);\n    });\n    doc.save(`Cartella_Clinica_${patient.nominativo}.pdf`);\n  };\n  const getIcon = () => {\n    switch (patient.sesso) {\n      case 'maschio':\n        return 'ðŸ‘¤';\n      // Placeholder icon for male\n      case 'femmina':\n        return 'ðŸ‘©';\n      // Placeholder icon for female\n      default:\n        return 'ðŸ‘¤';\n      // Placeholder icon for other/unspecified\n    }\n  };\n  const handleAssignDialogOpen = () => {\n    setAssignDialogOpen(true);\n  };\n  const handleAssignDialogClose = () => {\n    setAssignDialogOpen(false);\n    fetchPathologies(); // Refresh pathologies after assignment\n  };\n  const handleEditDialogOpen = () => {\n    setEditDialogOpen(true);\n  };\n  const handleEditDialogClose = () => {\n    setEditDialogOpen(false);\n  };\n  const handleEditSubmit = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/patients/${uuid}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify(editedPatient)\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      await fetchPatient(); // Refresh patient data\n      handleEditDialogClose();\n    } catch (error) {\n      console.error('Error updating patient:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"patient-info-container\",\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: () => navigate(-1),\n      className: \"back-button\",\n      children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        className: \"patient-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"patient-icon\",\n          children: getIcon()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"patient-details\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            children: patient.nominativo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: [\"Et\\xE0: \", patient.eta]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: [\"Altezza: \", patient.altezza]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: [\"Peso: \", patient.peso]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: [\"Sesso: \", patient.sesso]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: handleEditDialogOpen,\n            className: \"edit-button\",\n            children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: generatePDF,\n          className: \"pdf-button\",\n          children: /*#__PURE__*/_jsxDEV(SaveAltIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: \"info-block\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            className: \"box-title\",\n            children: \"Misurazioni\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-content\",\n            children: measurements.map((measurement, index) => /*#__PURE__*/_jsxDEV(Typography, {\n              children: `${measurement.date}: ${measurement.value}`\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: \"info-block\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            className: \"box-title\",\n            children: \"Trattamenti\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-content\",\n            children: treatments.map((treatment, index) => /*#__PURE__*/_jsxDEV(Typography, {\n              children: `${treatment.date}: ${treatment.description}`\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: \"info-block\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            className: \"box-title\",\n            children: \"Patologie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-content\",\n            children: pathologies.map((pathology, index) => /*#__PURE__*/_jsxDEV(Typography, {\n              children: pathology.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleAssignDialogOpen,\n            children: \"Assegna Patologie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AssignPathologiesDialog, {\n      open: assignDialogOpen,\n      onClose: handleAssignDialogClose,\n      patient: patient,\n      onAssign: fetchPathologies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: editDialogOpen,\n      onClose: handleEditDialogClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Modifica Informazioni del Paziente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"dense\",\n          label: \"Nome\",\n          fullWidth: true,\n          value: editedPatient.nominativo,\n          onChange: e => setEditedPatient({\n            ...editedPatient,\n            nominativo: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"dense\",\n          label: \"Et\\xE0\",\n          fullWidth: true,\n          value: editedPatient.eta,\n          onChange: e => setEditedPatient({\n            ...editedPatient,\n            eta: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"dense\",\n          label: \"Altezza\",\n          fullWidth: true,\n          value: editedPatient.altezza,\n          onChange: e => setEditedPatient({\n            ...editedPatient,\n            altezza: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"dense\",\n          label: \"Peso\",\n          fullWidth: true,\n          value: editedPatient.peso,\n          onChange: e => setEditedPatient({\n            ...editedPatient,\n            peso: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"dense\",\n          label: \"Sesso\",\n          fullWidth: true,\n          value: editedPatient.sesso,\n          onChange: e => setEditedPatient({\n            ...editedPatient,\n            sesso: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleEditDialogClose,\n          color: \"primary\",\n          children: \"Annulla\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleEditSubmit,\n          color: \"primary\",\n          children: \"Salva\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n_s(PatientProfile, \"FT6A+1dUOTItkzTABKW2ZuJH4qI=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = PatientProfile;\nexport default PatientProfile;\nvar _c;\n$RefreshReg$(_c, \"PatientProfile\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","Container","Grid","Paper","Typography","IconButton","Button","Dialog","DialogActions","DialogContent","DialogTitle","TextField","ArrowBackIcon","SaveAltIcon","EditIcon","jsPDF","AssignPathologiesDialog","jsxDEV","_jsxDEV","PatientProfile","_s","uuid","navigate","patient","setPatient","pathologies","setPathologies","assignDialogOpen","setAssignDialogOpen","editDialogOpen","setEditDialogOpen","editedPatient","setEditedPatient","fetchPatient","response","fetch","method","credentials","ok","Error","data","json","error","console","fetchPathologies","children","fileName","_jsxFileName","lineNumber","columnNumber","measurements","date","value","treatments","description","generatePDF","doc","setFontSize","text","nominativo","eta","altezza","peso","sesso","forEach","measurement","index","length","treatment","pathology","name","save","getIcon","handleAssignDialogOpen","handleAssignDialogClose","handleEditDialogOpen","handleEditDialogClose","handleEditSubmit","headers","body","JSON","stringify","className","onClick","container","spacing","item","xs","variant","md","map","color","open","onClose","onAssign","margin","label","fullWidth","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/Davide Grieco/Desktop/CranialDevice_web/frontend/src/pages/patients/PatientProfile.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { Container, Grid, Paper, Typography, IconButton, Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField } from '@mui/material';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\nimport SaveAltIcon from '@mui/icons-material/SaveAlt';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport jsPDF from 'jspdf';\r\nimport AssignPathologiesDialog from './AssignPathologiesDialog';\r\nimport './PatientProfile.css';\r\n\r\nconst PatientProfile = () => {\r\n  const { uuid } = useParams(); // Ottieni l'UUID dai parametri della rotta\r\n  const navigate = useNavigate();\r\n  const [patient, setPatient] = useState(null);\r\n  const [pathologies, setPathologies] = useState([]);\r\n  const [assignDialogOpen, setAssignDialogOpen] = useState(false);\r\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\r\n  const [editedPatient, setEditedPatient] = useState({});\r\n\r\n  const fetchPatient = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/patients/${uuid}`, {\r\n        method: 'GET',\r\n        credentials: 'include',\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n      const data = await response.json();\r\n      setPatient(data);\r\n      setEditedPatient(data); // Initialize editedPatient with current patient data\r\n    } catch (error) {\r\n      console.error('Error fetching patient:', error);\r\n    }\r\n  };\r\n\r\n  const fetchPathologies = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/patient_pathology/${uuid}`, {\r\n        method: 'GET',\r\n        credentials: 'include',\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n      const data = await response.json();\r\n      setPathologies(data);\r\n    } catch (error) {\r\n      console.error('Error fetching pathologies:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPatient();\r\n    fetchPathologies();\r\n  }, [uuid]);\r\n\r\n  if (!patient) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  const measurements = [\r\n    { date: '2024-06-20', value: '120/80' },\r\n    { date: '2024-06-21', value: '125/85' },\r\n  ];\r\n\r\n  const treatments = [\r\n    { date: '2024-06-20', description: 'Antibiotics' },\r\n    { date: '2024-06-21', description: 'Physical Therapy' },\r\n  ];\r\n\r\n  const generatePDF = () => {\r\n    const doc = new jsPDF();\r\n    doc.setFontSize(18);\r\n    doc.text(`Cartella Clinica di ${patient.nominativo}`, 20, 20);\r\n\r\n    doc.setFontSize(14);\r\n    doc.text('Informazioni del Paziente', 20, 30);\r\n    doc.setFontSize(12);\r\n    doc.text(`Nome: ${patient.nominativo}`, 20, 40);\r\n    doc.text(`EtÃ : ${patient.eta}`, 20, 50);\r\n    doc.text(`Altezza: ${patient.altezza}`, 20, 60);\r\n    doc.text(`Peso: ${patient.peso}`, 20, 70);\r\n    doc.text(`Sesso: ${patient.sesso}`, 20, 80);\r\n\r\n    doc.setFontSize(14);\r\n    doc.text('Misurazioni', 20, 90);\r\n    doc.setFontSize(12);\r\n    measurements.forEach((measurement, index) => {\r\n      doc.text(`${measurement.date}: ${measurement.value}`, 20, 100 + index * 10);\r\n    });\r\n\r\n    doc.setFontSize(14);\r\n    doc.text('Trattamenti', 20, 110 + measurements.length * 10);\r\n    doc.setFontSize(12);\r\n    treatments.forEach((treatment, index) => {\r\n      doc.text(`${treatment.date}: ${treatment.description}`, 20, 120 + measurements.length * 10 + index * 10);\r\n    });\r\n\r\n    doc.setFontSize(14);\r\n    doc.text('Patologie', 20, 130 + measurements.length * 10 + treatments.length * 10);\r\n    doc.setFontSize(12);\r\n    pathologies.forEach((pathology, index) => {\r\n      doc.text(pathology.name, 20, 140 + measurements.length * 10 + treatments.length * 10 + index * 10);\r\n    });\r\n\r\n    doc.save(`Cartella_Clinica_${patient.nominativo}.pdf`);\r\n  };\r\n\r\n  const getIcon = () => {\r\n    switch (patient.sesso) {\r\n      case 'maschio':\r\n        return 'ðŸ‘¤'; // Placeholder icon for male\r\n      case 'femmina':\r\n        return 'ðŸ‘©'; // Placeholder icon for female\r\n      default:\r\n        return 'ðŸ‘¤'; // Placeholder icon for other/unspecified\r\n    }\r\n  };\r\n\r\n  const handleAssignDialogOpen = () => {\r\n    setAssignDialogOpen(true);\r\n  };\r\n\r\n  const handleAssignDialogClose = () => {\r\n    setAssignDialogOpen(false);\r\n    fetchPathologies(); // Refresh pathologies after assignment\r\n  };\r\n\r\n  const handleEditDialogOpen = () => {\r\n    setEditDialogOpen(true);\r\n  };\r\n\r\n  const handleEditDialogClose = () => {\r\n    setEditDialogOpen(false);\r\n  };\r\n\r\n  const handleEditSubmit = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/patients/${uuid}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify(editedPatient),\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n      await fetchPatient(); // Refresh patient data\r\n      handleEditDialogClose();\r\n    } catch (error) {\r\n      console.error('Error updating patient:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className=\"patient-info-container\">\r\n      <IconButton onClick={() => navigate(-1)} className=\"back-button\">\r\n        <ArrowBackIcon />\r\n      </IconButton>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} className=\"patient-header\">\r\n          <div className=\"patient-icon\">{getIcon()}</div>\r\n          <div className=\"patient-details\">\r\n            <Typography variant=\"h4\">{patient.nominativo}</Typography>\r\n            <Typography variant=\"body1\">EtÃ : {patient.eta}</Typography>\r\n            <Typography variant=\"body1\">Altezza: {patient.altezza}</Typography>\r\n            <Typography variant=\"body1\">Peso: {patient.peso}</Typography>\r\n            <Typography variant=\"body1\">Sesso: {patient.sesso}</Typography>\r\n            <IconButton onClick={handleEditDialogOpen} className=\"edit-button\">\r\n              <EditIcon />\r\n            </IconButton>\r\n          </div>\r\n          <IconButton onClick={generatePDF} className=\"pdf-button\">\r\n            <SaveAltIcon />\r\n          </IconButton>\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <Paper className=\"info-block\">\r\n            <Typography variant=\"h6\" className=\"box-title\">Misurazioni</Typography>\r\n            <div className=\"info-content\">\r\n              {measurements.map((measurement, index) => (\r\n                <Typography key={index}>{`${measurement.date}: ${measurement.value}`}</Typography>\r\n              ))}\r\n            </div>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <Paper className=\"info-block\">\r\n            <Typography variant=\"h6\" className=\"box-title\">Trattamenti</Typography>\r\n            <div className=\"info-content\">\r\n              {treatments.map((treatment, index) => (\r\n                <Typography key={index}>{`${treatment.date}: ${treatment.description}`}</Typography>\r\n              ))}\r\n            </div>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <Paper className=\"info-block\">\r\n            <Typography variant=\"h6\" className=\"box-title\">Patologie</Typography>\r\n            <div className=\"info-content\">\r\n              {pathologies.map((pathology, index) => (\r\n                <Typography key={index}>{pathology.name}</Typography>\r\n              ))}\r\n            </div>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleAssignDialogOpen}>\r\n              Assegna Patologie\r\n            </Button>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n      <AssignPathologiesDialog\r\n        open={assignDialogOpen}\r\n        onClose={handleAssignDialogClose}\r\n        patient={patient}\r\n        onAssign={fetchPathologies}\r\n      />\r\n      <Dialog open={editDialogOpen} onClose={handleEditDialogClose}>\r\n        <DialogTitle>Modifica Informazioni del Paziente</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            margin=\"dense\"\r\n            label=\"Nome\"\r\n            fullWidth\r\n            value={editedPatient.nominativo}\r\n            onChange={(e) => setEditedPatient({ ...editedPatient, nominativo: e.target.value })}\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            label=\"EtÃ \"\r\n            fullWidth\r\n            value={editedPatient.eta}\r\n            onChange={(e) => setEditedPatient({ ...editedPatient, eta: e.target.value })}\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            label=\"Altezza\"\r\n            fullWidth\r\n            value={editedPatient.altezza}\r\n            onChange={(e) => setEditedPatient({ ...editedPatient, altezza: e.target.value })}\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            label=\"Peso\"\r\n            fullWidth\r\n            value={editedPatient.peso}\r\n            onChange={(e) => setEditedPatient({ ...editedPatient, peso: e.target.value })}\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            label=\"Sesso\"\r\n            fullWidth\r\n            value={editedPatient.sesso}\r\n            onChange={(e) => setEditedPatient({ ...editedPatient, sesso: e.target.value })}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleEditDialogClose} color=\"primary\">\r\n            Annulla\r\n          </Button>\r\n          <Button onClick={handleEditSubmit} color=\"primary\">\r\n            Salva\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PatientProfile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}