{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\morga\\\\Desktop\\\\CranialDevice_web\\\\CranialDevice_web\\\\frontend\\\\src\\\\pages\\\\pathologies\\\\EditPathologyDialog.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Button, TextField } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditPathologyDialog = ({\n  open,\n  onClose,\n  onEditSubmit,\n  pathology\n}) => {\n  _s();\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  useEffect(() => {\n    if (pathology) {\n      setName(pathology.name);\n      setDescription(pathology.description);\n    }\n  }, [pathology]);\n  const handleEdit = () => {\n    onEditSubmit({\n      ...pathology,\n      name,\n      description\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: onClose,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Modifica Patologia\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n        children: \"Modifica i seguenti campi per aggiornare la patologia.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        autoFocus: true,\n        margin: \"dense\",\n        name: \"name\",\n        label: \"Nome\",\n        type: \"text\",\n        fullWidth: true,\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"dense\",\n        name: \"description\",\n        label: \"Descrizione\",\n        type: \"text\",\n        fullWidth: true,\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClose,\n        color: \"primary\",\n        children: \"Annulla\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleEdit,\n        color: \"primary\",\n        children: \"Salva\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(EditPathologyDialog, \"8DlSI880sm0bBDXV0NTL10X28kU=\");\n_c = EditPathologyDialog;\nexport default EditPathologyDialog;\nvar _c;\n$RefreshReg$(_c, \"EditPathologyDialog\");","map":{"version":3,"names":["React","useState","useEffect","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Button","TextField","jsxDEV","_jsxDEV","EditPathologyDialog","open","onClose","onEditSubmit","pathology","_s","name","setName","description","setDescription","handleEdit","children","fileName","_jsxFileName","lineNumber","columnNumber","autoFocus","margin","label","type","fullWidth","value","onChange","e","target","onClick","color","_c","$RefreshReg$"],"sources":["C:/Users/morga/Desktop/CranialDevice_web/CranialDevice_web/frontend/src/pages/pathologies/EditPathologyDialog.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Button,\n  TextField,\n} from '@mui/material';\n\nconst EditPathologyDialog = ({ open, onClose, onEditSubmit, pathology }) => {\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n\n  useEffect(() => {\n    if (pathology) {\n      setName(pathology.name);\n      setDescription(pathology.description);\n    }\n  }, [pathology]);\n\n  const handleEdit = () => {\n    onEditSubmit({ ...pathology, name, description });\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose}>\n      <DialogTitle>Modifica Patologia</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Modifica i seguenti campi per aggiornare la patologia.\n        </DialogContentText>\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          name=\"name\"\n          label=\"Nome\"\n          type=\"text\"\n          fullWidth\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n        <TextField\n          margin=\"dense\"\n          name=\"description\"\n          label=\"Descrizione\"\n          type=\"text\"\n          fullWidth\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={onClose} color=\"primary\">\n          Annulla\n        </Button>\n        <Button onClick={handleEdit} color=\"primary\">\n          Salva\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default EditPathologyDialog;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}