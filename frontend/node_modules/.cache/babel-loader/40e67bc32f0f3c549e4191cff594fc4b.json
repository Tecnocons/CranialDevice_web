{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\morga\\\\Desktop\\\\CranialDevice_web\\\\CranialDevice_web\\\\frontend\\\\src\\\\pages\\\\patients\\\\PatientProfile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { Container, Grid, Paper, Typography, IconButton, Button } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport SaveAltIcon from '@mui/icons-material/SaveAlt';\nimport EditIcon from '@mui/icons-material/Edit';\nimport jsPDF from 'jspdf';\nimport AssignPathologiesDialog from './AssignPathologiesDialog';\nimport AssignSymptomsDialog from './AssignSymptomsDialog';\nimport AssignTraumaticEventsDialog from './AssignTraumaticEventsDialog';\nimport AssignSurgeriesDialog from './AssignSurgeriesDialog';\nimport AssignTreatmentsDialog from './AssignTreatmentsDialog';\nimport EditPatientDialog from './EditPatientDialog';\nimport StartMeasurement from './StartMeasurement'; // Import the new component\nimport './PatientProfile.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PatientProfile = () => {\n  _s();\n  const {\n    uuid\n  } = useParams();\n  const navigate = useNavigate();\n  const [patient, setPatient] = useState(null);\n  const [pathologies, setPathologies] = useState([]);\n  const [symptoms, setSymptoms] = useState([]);\n  const [traumaticEvents, setTraumaticEvents] = useState([]);\n  const [surgeries, setSurgeries] = useState([]);\n  const [treatments, setTreatments] = useState([]);\n  const [assignPathologiesDialogOpen, setAssignPathologiesDialogOpen] = useState(false);\n  const [assignSymptomsDialogOpen, setAssignSymptomsDialogOpen] = useState(false);\n  const [assignTraumaticEventsDialogOpen, setAssignTraumaticEventsDialogOpen] = useState(false);\n  const [assignSurgeriesDialogOpen, setAssignSurgeriesDialogOpen] = useState(false);\n  const [assignTreatmentsDialogOpen, setAssignTreatmentsDialogOpen] = useState(false);\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n  const fetchPatient = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/patients/${uuid}`, {\n        method: 'GET',\n        credentials: 'include'\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setPatient(data);\n    } catch (error) {\n      console.error('Error fetching patient:', error);\n    }\n  };\n  const fetchPathologies = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/patient_pathology/${uuid}`, {\n        method: 'GET',\n        credentials: 'include'\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setPathologies(data);\n    } catch (error) {\n      console.error('Error fetching pathologies:', error);\n    }\n  };\n  const fetchSymptoms = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/patient_symptom/${uuid}`, {\n        method: 'GET',\n        credentials: 'include'\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setSymptoms(data);\n    } catch (error) {\n      console.error('Error fetching symptoms:', error);\n    }\n  };\n  const fetchTraumaticEvents = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/patient_traumatic_event/${uuid}`, {\n        method: 'GET',\n        credentials: 'include'\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setTraumaticEvents(data);\n    } catch (error) {\n      console.error('Error fetching traumatic events:', error);\n    }\n  };\n  const fetchSurgeries = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/patient_surgery/${uuid}`, {\n        method: 'GET',\n        credentials: 'include'\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setSurgeries(data);\n    } catch (error) {\n      console.error('Error fetching surgeries:', error);\n    }\n  };\n  const fetchTreatments = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/patient_treatment/${uuid}`, {\n        method: 'GET',\n        credentials: 'include'\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setTreatments(data);\n    } catch (error) {\n      console.error('Error fetching treatments:', error);\n    }\n  };\n  useEffect(() => {\n    fetchPatient();\n    fetchPathologies();\n    fetchSymptoms();\n    fetchTraumaticEvents();\n    fetchSurgeries();\n    fetchTreatments();\n  }, [uuid]);\n  if (!patient) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 12\n    }, this);\n  }\n  const measurements = [{\n    date: '2024-06-20',\n    value: '120/80'\n  }, {\n    date: '2024-06-21',\n    value: '125/85'\n  }];\n  const generatePDF = () => {\n    const doc = new jsPDF();\n    doc.setFontSize(18);\n    doc.text(`Cartella Clinica di ${patient.nominativo}`, 20, 20);\n    doc.setFontSize(14);\n    doc.text('Informazioni del Paziente', 20, 30);\n    doc.setFontSize(12);\n    doc.text(`Nome: ${patient.nominativo}`, 20, 40);\n    doc.text(`EtÃ : ${patient.eta}`, 20, 50);\n    doc.text(`Altezza: ${patient.altezza}`, 20, 60);\n    doc.text(`Peso: ${patient.peso}`, 20, 70);\n    doc.text(`Sesso: ${patient.sesso}`, 20, 80);\n    doc.setFontSize(14);\n    doc.text('Misurazioni', 20, 90);\n    doc.setFontSize(12);\n    measurements.forEach((measurement, index) => {\n      doc.text(`${measurement.date}: ${measurement.value}`, 20, 100 + index * 10);\n    });\n    doc.setFontSize(14);\n    doc.text('Patologie', 20, 110 + measurements.length * 10);\n    doc.setFontSize(12);\n    pathologies.forEach((pathology, index) => {\n      doc.text(pathology.name, 20, 120 + measurements.length * 10 + index * 10);\n    });\n    doc.setFontSize(14);\n    doc.text('Sintomi', 20, 130 + measurements.length * 10 + pathologies.length * 10);\n    doc.setFontSize(12);\n    symptoms.forEach((symptom, index) => {\n      doc.text(symptom.name, 20, 140 + measurements.length * 10 + pathologies.length * 10 + index * 10);\n    });\n    doc.setFontSize(14);\n    doc.text('Eventi Traumatici', 20, 150 + measurements.length * 10 + pathologies.length * 10 + symptoms.length * 10);\n    doc.setFontSize(12);\n    traumaticEvents.forEach((event, index) => {\n      doc.text(event.name, 20, 160 + measurements.length * 10 + pathologies.length * 10 + symptoms.length * 10 + index * 10);\n    });\n    doc.setFontSize(14);\n    doc.text('Interventi', 20, 170 + measurements.length * 10 + pathologies.length * 10 + symptoms.length * 10 + traumaticEvents.length * 10);\n    doc.setFontSize(12);\n    surgeries.forEach((surgery, index) => {\n      doc.text(surgery.name, 20, 180 + measurements.length * 10 + pathologies.length * 10 + symptoms.length * 10 + traumaticEvents.length * 10 + index * 10);\n    });\n    doc.setFontSize(14);\n    doc.text('Trattamenti', 20, 190 + measurements.length * 10 + pathologies.length * 10 + symptoms.length * 10 + traumaticEvents.length * 10 + surgeries.length * 10);\n    doc.setFontSize(12);\n    treatments.forEach((treatment, index) => {\n      doc.text(treatment.name, 20, 200 + measurements.length * 10 + pathologies.length * 10 + symptoms.length * 10 + traumaticEvents.length * 10 + surgeries.length * 10 + index * 10);\n    });\n    doc.save(`Cartella_Clinica_${patient.nominativo}.pdf`);\n  };\n  const getIcon = () => {\n    switch (patient.sesso) {\n      case 'maschio':\n        return 'ðŸ‘¤';\n      // Placeholder icon for male\n      case 'femmina':\n        return 'ðŸ‘©';\n      // Placeholder icon for female\n      default:\n        return 'ðŸ‘¤';\n      // Placeholder icon for other/unspecified\n    }\n  };\n  const handleAssignPathologiesDialogOpen = () => {\n    setAssignPathologiesDialogOpen(true);\n  };\n  const handleAssignPathologiesDialogClose = () => {\n    setAssignPathologiesDialogOpen(false);\n    fetchPathologies(); // Refresh pathologies after assignment\n  };\n  const handleAssignSymptomsDialogOpen = () => {\n    setAssignSymptomsDialogOpen(true);\n  };\n  const handleAssignSymptomsDialogClose = () => {\n    setAssignSymptomsDialogOpen(false);\n    fetchSymptoms(); // Refresh symptoms after assignment\n  };\n  const handleAssignTraumaticEventsDialogOpen = () => {\n    setAssignTraumaticEventsDialogOpen(true);\n  };\n  const handleAssignTraumaticEventsDialogClose = () => {\n    setAssignTraumaticEventsDialogOpen(false);\n    fetchTraumaticEvents(); // Refresh traumatic events after assignment\n  };\n  const handleAssignSurgeriesDialogOpen = () => {\n    setAssignSurgeriesDialogOpen(true);\n  };\n  const handleAssignSurgeriesDialogClose = () => {\n    setAssignSurgeriesDialogOpen(false);\n    fetchSurgeries(); // Refresh surgeries after assignment\n  };\n  const handleAssignTreatmentsDialogOpen = () => {\n    setAssignTreatmentsDialogOpen(true);\n  };\n  const handleAssignTreatmentsDialogClose = () => {\n    setAssignTreatmentsDialogOpen(false);\n    fetchTreatments(); // Refresh treatments after assignment\n  };\n  const handleEditDialogOpen = () => {\n    setEditDialogOpen(true);\n  };\n  const handleEditDialogClose = () => {\n    setEditDialogOpen(false);\n    fetchPatient(); // Refresh patient data\n  };\n  const handleEditSubmit = async updatedPatient => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/patients`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify(updatedPatient)\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      setPatient(updatedPatient);\n      setEditDialogOpen(false);\n    } catch (error) {\n      console.error('Error updating patient:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"patient-info-container\",\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: () => navigate(-1),\n      className: \"back-button\",\n      children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        className: \"patient-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"patient-icon\",\n          children: getIcon()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"patient-details\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            children: patient.nominativo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: [\"Et\\xE0: \", patient.eta]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: [\"Altezza: \", patient.altezza]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: [\"Peso: \", patient.peso]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: [\"Sesso: \", patient.sesso]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: handleEditDialogOpen,\n            className: \"edit-button\",\n            children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StartMeasurement, {\n            deviceId: patient.device_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: generatePDF,\n          className: \"pdf-button\",\n          children: /*#__PURE__*/_jsxDEV(SaveAltIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: \"info-block\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            className: \"box-title\",\n            children: \"Misurazioni\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-content\",\n            children: measurements.map((measurement, index) => /*#__PURE__*/_jsxDEV(Typography, {\n              children: `${measurement.date}: ${measurement.value}`\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: \"info-block\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            className: \"box-title\",\n            children: \"Patologie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-content\",\n            children: pathologies.map((pathology, index) => /*#__PURE__*/_jsxDEV(Typography, {\n              children: pathology.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleAssignPathologiesDialogOpen,\n            children: \"Assegna Patologie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: \"info-block\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            className: \"box-title\",\n            children: \"Sintomi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-content\",\n            children: symptoms.map((symptom, index) => /*#__PURE__*/_jsxDEV(Typography, {\n              children: symptom.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleAssignSymptomsDialogOpen,\n            children: \"Assegna Sintomi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: \"info-block\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            className: \"box-title\",\n            children: \"Eventi Traumatici\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-content\",\n            children: traumaticEvents.map((event, index) => /*#__PURE__*/_jsxDEV(Typography, {\n              children: event.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleAssignTraumaticEventsDialogOpen,\n            children: \"Assegna Eventi Traumatici\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: \"info-block\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            className: \"box-title\",\n            children: \"Interventi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-content\",\n            children: surgeries.map((surgery, index) => /*#__PURE__*/_jsxDEV(Typography, {\n              children: surgery.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleAssignSurgeriesDialogOpen,\n            children: \"Assegna Interventi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: \"info-block\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            className: \"box-title\",\n            children: \"Trattamenti\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-content\",\n            children: treatments.map((treatment, index) => /*#__PURE__*/_jsxDEV(Typography, {\n              children: treatment.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleAssignTreatmentsDialogOpen,\n            children: \"Assegna Trattamenti\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AssignPathologiesDialog, {\n      open: assignPathologiesDialogOpen,\n      onClose: handleAssignPathologiesDialogClose,\n      patient: patient,\n      onAssign: fetchPathologies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AssignSymptomsDialog, {\n      open: assignSymptomsDialogOpen,\n      onClose: handleAssignSymptomsDialogClose,\n      patient: patient,\n      onAssign: fetchSymptoms\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AssignTraumaticEventsDialog, {\n      open: assignTraumaticEventsDialogOpen,\n      onClose: handleAssignTraumaticEventsDialogClose,\n      patient: patient,\n      onAssign: fetchTraumaticEvents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AssignSurgeriesDialog, {\n      open: assignSurgeriesDialogOpen,\n      onClose: handleAssignSurgeriesDialogClose,\n      patient: patient,\n      onAssign: fetchSurgeries\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AssignTreatmentsDialog, {\n      open: assignTreatmentsDialogOpen,\n      onClose: handleAssignTreatmentsDialogClose,\n      patient: patient,\n      onAssign: fetchTreatments\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditPatientDialog, {\n      open: editDialogOpen,\n      onClose: handleEditDialogClose,\n      onEditSubmit: handleEditSubmit,\n      patient: patient\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 294,\n    columnNumber: 5\n  }, this);\n};\n_s(PatientProfile, \"SEGNuteIhbRqFe+4jYhC3cIgvlw=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = PatientProfile;\nexport default PatientProfile;\nvar _c;\n$RefreshReg$(_c, \"PatientProfile\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","Container","Grid","Paper","Typography","IconButton","Button","ArrowBackIcon","SaveAltIcon","EditIcon","jsPDF","AssignPathologiesDialog","AssignSymptomsDialog","AssignTraumaticEventsDialog","AssignSurgeriesDialog","AssignTreatmentsDialog","EditPatientDialog","StartMeasurement","jsxDEV","_jsxDEV","PatientProfile","_s","uuid","navigate","patient","setPatient","pathologies","setPathologies","symptoms","setSymptoms","traumaticEvents","setTraumaticEvents","surgeries","setSurgeries","treatments","setTreatments","assignPathologiesDialogOpen","setAssignPathologiesDialogOpen","assignSymptomsDialogOpen","setAssignSymptomsDialogOpen","assignTraumaticEventsDialogOpen","setAssignTraumaticEventsDialogOpen","assignSurgeriesDialogOpen","setAssignSurgeriesDialogOpen","assignTreatmentsDialogOpen","setAssignTreatmentsDialogOpen","editDialogOpen","setEditDialogOpen","fetchPatient","response","fetch","method","credentials","ok","Error","data","json","error","console","fetchPathologies","fetchSymptoms","fetchTraumaticEvents","fetchSurgeries","fetchTreatments","children","fileName","_jsxFileName","lineNumber","columnNumber","measurements","date","value","generatePDF","doc","setFontSize","text","nominativo","eta","altezza","peso","sesso","forEach","measurement","index","length","pathology","name","symptom","event","surgery","treatment","save","getIcon","handleAssignPathologiesDialogOpen","handleAssignPathologiesDialogClose","handleAssignSymptomsDialogOpen","handleAssignSymptomsDialogClose","handleAssignTraumaticEventsDialogOpen","handleAssignTraumaticEventsDialogClose","handleAssignSurgeriesDialogOpen","handleAssignSurgeriesDialogClose","handleAssignTreatmentsDialogOpen","handleAssignTreatmentsDialogClose","handleEditDialogOpen","handleEditDialogClose","handleEditSubmit","updatedPatient","headers","body","JSON","stringify","message","className","onClick","container","spacing","item","xs","variant","deviceId","device_id","md","map","color","open","onClose","onAssign","onEditSubmit","_c","$RefreshReg$"],"sources":["C:/Users/morga/Desktop/CranialDevice_web/CranialDevice_web/frontend/src/pages/patients/PatientProfile.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { Container, Grid, Paper, Typography, IconButton, Button } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport SaveAltIcon from '@mui/icons-material/SaveAlt';\nimport EditIcon from '@mui/icons-material/Edit';\nimport jsPDF from 'jspdf';\nimport AssignPathologiesDialog from './AssignPathologiesDialog';\nimport AssignSymptomsDialog from './AssignSymptomsDialog';\nimport AssignTraumaticEventsDialog from './AssignTraumaticEventsDialog';\nimport AssignSurgeriesDialog from './AssignSurgeriesDialog';\nimport AssignTreatmentsDialog from './AssignTreatmentsDialog';\nimport EditPatientDialog from './EditPatientDialog';\nimport StartMeasurement from './StartMeasurement'; // Import the new component\nimport './PatientProfile.css';\n\nconst PatientProfile = () => {\n  const { uuid } = useParams();\n  const navigate = useNavigate();\n  const [patient, setPatient] = useState(null);\n  const [pathologies, setPathologies] = useState([]);\n  const [symptoms, setSymptoms] = useState([]);\n  const [traumaticEvents, setTraumaticEvents] = useState([]);\n  const [surgeries, setSurgeries] = useState([]);\n  const [treatments, setTreatments] = useState([]);\n  const [assignPathologiesDialogOpen, setAssignPathologiesDialogOpen] = useState(false);\n  const [assignSymptomsDialogOpen, setAssignSymptomsDialogOpen] = useState(false);\n  const [assignTraumaticEventsDialogOpen, setAssignTraumaticEventsDialogOpen] = useState(false);\n  const [assignSurgeriesDialogOpen, setAssignSurgeriesDialogOpen] = useState(false);\n  const [assignTreatmentsDialogOpen, setAssignTreatmentsDialogOpen] = useState(false);\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n\n  const fetchPatient = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/patients/${uuid}`, {\n        method: 'GET',\n        credentials: 'include',\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setPatient(data);\n    } catch (error) {\n      console.error('Error fetching patient:', error);\n    }\n  };\n\n  const fetchPathologies = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/patient_pathology/${uuid}`, {\n        method: 'GET',\n        credentials: 'include',\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setPathologies(data);\n    } catch (error) {\n      console.error('Error fetching pathologies:', error);\n    }\n  };\n\n  const fetchSymptoms = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/patient_symptom/${uuid}`, {\n        method: 'GET',\n        credentials: 'include',\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setSymptoms(data);\n    } catch (error) {\n      console.error('Error fetching symptoms:', error);\n    }\n  };\n\n  const fetchTraumaticEvents = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/patient_traumatic_event/${uuid}`, {\n        method: 'GET',\n        credentials: 'include',\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setTraumaticEvents(data);\n    } catch (error) {\n      console.error('Error fetching traumatic events:', error);\n    }\n  };\n\n  const fetchSurgeries = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/patient_surgery/${uuid}`, {\n        method: 'GET',\n        credentials: 'include',\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setSurgeries(data);\n    } catch (error) {\n      console.error('Error fetching surgeries:', error);\n    }\n  };\n\n  const fetchTreatments = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/patient_treatment/${uuid}`, {\n        method: 'GET',\n        credentials: 'include',\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setTreatments(data);\n    } catch (error) {\n      console.error('Error fetching treatments:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchPatient();\n    fetchPathologies();\n    fetchSymptoms();\n    fetchTraumaticEvents();\n    fetchSurgeries();\n    fetchTreatments();\n  }, [uuid]);\n\n  if (!patient) {\n    return <div>Loading...</div>;\n  }\n\n  const measurements = [\n    { date: '2024-06-20', value: '120/80' },\n    { date: '2024-06-21', value: '125/85' },\n  ];\n\n  const generatePDF = () => {\n    const doc = new jsPDF();\n    doc.setFontSize(18);\n    doc.text(`Cartella Clinica di ${patient.nominativo}`, 20, 20);\n\n    doc.setFontSize(14);\n    doc.text('Informazioni del Paziente', 20, 30);\n    doc.setFontSize(12);\n    doc.text(`Nome: ${patient.nominativo}`, 20, 40);\n    doc.text(`EtÃ : ${patient.eta}`, 20, 50);\n    doc.text(`Altezza: ${patient.altezza}`, 20, 60);\n    doc.text(`Peso: ${patient.peso}`, 20, 70);\n    doc.text(`Sesso: ${patient.sesso}`, 20, 80);\n\n    doc.setFontSize(14);\n    doc.text('Misurazioni', 20, 90);\n    doc.setFontSize(12);\n    measurements.forEach((measurement, index) => {\n      doc.text(`${measurement.date}: ${measurement.value}`, 20, 100 + index * 10);\n    });\n\n    doc.setFontSize(14);\n    doc.text('Patologie', 20, 110 + measurements.length * 10);\n    doc.setFontSize(12);\n    pathologies.forEach((pathology, index) => {\n      doc.text(pathology.name, 20, 120 + measurements.length * 10 + index * 10);\n    });\n\n    doc.setFontSize(14);\n    doc.text('Sintomi', 20, 130 + measurements.length * 10 + pathologies.length * 10);\n    doc.setFontSize(12);\n    symptoms.forEach((symptom, index) => {\n      doc.text(symptom.name, 20, 140 + measurements.length * 10 + pathologies.length * 10 + index * 10);\n    });\n\n    doc.setFontSize(14);\n    doc.text('Eventi Traumatici', 20, 150 + measurements.length * 10 + pathologies.length * 10 + symptoms.length * 10);\n    doc.setFontSize(12);\n    traumaticEvents.forEach((event, index) => {\n      doc.text(event.name, 20, 160 + measurements.length * 10 + pathologies.length * 10 + symptoms.length * 10 + index * 10);\n    });\n\n    doc.setFontSize(14);\n    doc.text('Interventi', 20, 170 + measurements.length * 10 + pathologies.length * 10 + symptoms.length * 10 + traumaticEvents.length * 10);\n    doc.setFontSize(12);\n    surgeries.forEach((surgery, index) => {\n      doc.text(surgery.name, 20, 180 + measurements.length * 10 + pathologies.length * 10 + symptoms.length * 10 + traumaticEvents.length * 10 + index * 10);\n    });\n\n    doc.setFontSize(14);\n    doc.text('Trattamenti', 20, 190 + measurements.length * 10 + pathologies.length * 10 + symptoms.length * 10 + traumaticEvents.length * 10 + surgeries.length * 10);\n    doc.setFontSize(12);\n    treatments.forEach((treatment, index) => {\n      doc.text(treatment.name, 20, 200 + measurements.length * 10 + pathologies.length * 10 + symptoms.length * 10 + traumaticEvents.length * 10 + surgeries.length * 10 + index * 10);\n    });\n\n    doc.save(`Cartella_Clinica_${patient.nominativo}.pdf`);\n  };\n\n  const getIcon = () => {\n    switch (patient.sesso) {\n      case 'maschio':\n        return 'ðŸ‘¤'; // Placeholder icon for male\n      case 'femmina':\n        return 'ðŸ‘©'; // Placeholder icon for female\n      default:\n        return 'ðŸ‘¤'; // Placeholder icon for other/unspecified\n    }\n  };\n\n  const handleAssignPathologiesDialogOpen = () => {\n    setAssignPathologiesDialogOpen(true);\n  };\n\n  const handleAssignPathologiesDialogClose = () => {\n    setAssignPathologiesDialogOpen(false);\n    fetchPathologies(); // Refresh pathologies after assignment\n  };\n\n  const handleAssignSymptomsDialogOpen = () => {\n    setAssignSymptomsDialogOpen(true);\n  };\n\n  const handleAssignSymptomsDialogClose = () => {\n    setAssignSymptomsDialogOpen(false);\n    fetchSymptoms(); // Refresh symptoms after assignment\n  };\n\n  const handleAssignTraumaticEventsDialogOpen = () => {\n    setAssignTraumaticEventsDialogOpen(true);\n  };\n\n  const handleAssignTraumaticEventsDialogClose = () => {\n    setAssignTraumaticEventsDialogOpen(false);\n    fetchTraumaticEvents(); // Refresh traumatic events after assignment\n  };\n\n  const handleAssignSurgeriesDialogOpen = () => {\n    setAssignSurgeriesDialogOpen(true);\n  };\n\n  const handleAssignSurgeriesDialogClose = () => {\n    setAssignSurgeriesDialogOpen(false);\n    fetchSurgeries(); // Refresh surgeries after assignment\n  };\n\n  const handleAssignTreatmentsDialogOpen = () => {\n    setAssignTreatmentsDialogOpen(true);\n  };\n\n  const handleAssignTreatmentsDialogClose = () => {\n    setAssignTreatmentsDialogOpen(false);\n    fetchTreatments(); // Refresh treatments after assignment\n  };\n\n  const handleEditDialogOpen = () => {\n    setEditDialogOpen(true);\n  };\n\n  const handleEditDialogClose = () => {\n    setEditDialogOpen(false);\n    fetchPatient(); // Refresh patient data\n  };\n\n  const handleEditSubmit = async (updatedPatient) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/patients`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        credentials: 'include',\n        body: JSON.stringify(updatedPatient),\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      setPatient(updatedPatient);\n      setEditDialogOpen(false);\n    } catch (error) {\n      console.error('Error updating patient:', error.message);\n    }\n  };\n\n  return (\n    <Container className=\"patient-info-container\">\n      <IconButton onClick={() => navigate(-1)} className=\"back-button\">\n        <ArrowBackIcon />\n      </IconButton>\n      <Grid container spacing={3}>\n        <Grid item xs={12} className=\"patient-header\">\n          <div className=\"patient-icon\">{getIcon()}</div>\n          <div className=\"patient-details\">\n            <Typography variant=\"h4\">{patient.nominativo}</Typography>\n            <Typography variant=\"body1\">EtÃ : {patient.eta}</Typography>\n            <Typography variant=\"body1\">Altezza: {patient.altezza}</Typography>\n            <Typography variant=\"body1\">Peso: {patient.peso}</Typography>\n            <Typography variant=\"body1\">Sesso: {patient.sesso}</Typography>\n            <IconButton onClick={handleEditDialogOpen} className=\"edit-button\">\n              <EditIcon />\n            </IconButton>\n            <StartMeasurement deviceId={patient.device_id} /> {/* Add the StartMeasurement component */}\n          </div>\n          <IconButton onClick={generatePDF} className=\"pdf-button\">\n            <SaveAltIcon />\n          </IconButton>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Paper className=\"info-block\">\n            <Typography variant=\"h6\" className=\"box-title\">Misurazioni</Typography>\n            <div className=\"info-content\">\n              {measurements.map((measurement, index) => (\n                <Typography key={index}>{`${measurement.date}: ${measurement.value}`}</Typography>\n              ))}\n            </div>\n          </Paper>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Paper className=\"info-block\">\n            <Typography variant=\"h6\" className=\"box-title\">Patologie</Typography>\n            <div className=\"info-content\">\n              {pathologies.map((pathology, index) => (\n                <Typography key={index}>{pathology.name}</Typography>\n              ))}\n            </div>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleAssignPathologiesDialogOpen}>\n              Assegna Patologie\n            </Button>\n          </Paper>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Paper className=\"info-block\">\n            <Typography variant=\"h6\" className=\"box-title\">Sintomi</Typography>\n            <div className=\"info-content\">\n              {symptoms.map((symptom, index) => (\n                <Typography key={index}>{symptom.name}</Typography>\n              ))}\n            </div>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleAssignSymptomsDialogOpen}>\n              Assegna Sintomi\n            </Button>\n          </Paper>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Paper className=\"info-block\">\n            <Typography variant=\"h6\" className=\"box-title\">Eventi Traumatici</Typography>\n            <div className=\"info-content\">\n              {traumaticEvents.map((event, index) => (\n                <Typography key={index}>{event.name}</Typography>\n              ))}\n            </div>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleAssignTraumaticEventsDialogOpen}>\n              Assegna Eventi Traumatici\n            </Button>\n          </Paper>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Paper className=\"info-block\">\n            <Typography variant=\"h6\" className=\"box-title\">Interventi</Typography>\n            <div className=\"info-content\">\n              {surgeries.map((surgery, index) => (\n                <Typography key={index}>{surgery.name}</Typography>\n              ))}\n            </div>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleAssignSurgeriesDialogOpen}>\n              Assegna Interventi\n            </Button>\n          </Paper>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Paper className=\"info-block\">\n            <Typography variant=\"h6\" className=\"box-title\">Trattamenti</Typography>\n            <div className=\"info-content\">\n              {treatments.map((treatment, index) => (\n                <Typography key={index}>{treatment.name}</Typography>\n              ))}\n            </div>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleAssignTreatmentsDialogOpen}>\n              Assegna Trattamenti\n            </Button>\n          </Paper>\n        </Grid>\n      </Grid>\n      <AssignPathologiesDialog\n        open={assignPathologiesDialogOpen}\n        onClose={handleAssignPathologiesDialogClose}\n        patient={patient}\n        onAssign={fetchPathologies}\n      />\n      <AssignSymptomsDialog\n        open={assignSymptomsDialogOpen}\n        onClose={handleAssignSymptomsDialogClose}\n        patient={patient}\n        onAssign={fetchSymptoms}\n      />\n      <AssignTraumaticEventsDialog\n        open={assignTraumaticEventsDialogOpen}\n        onClose={handleAssignTraumaticEventsDialogClose}\n        patient={patient}\n        onAssign={fetchTraumaticEvents}\n      />\n      <AssignSurgeriesDialog\n        open={assignSurgeriesDialogOpen}\n        onClose={handleAssignSurgeriesDialogClose}\n        patient={patient}\n        onAssign={fetchSurgeries}\n      />\n      <AssignTreatmentsDialog\n        open={assignTreatmentsDialogOpen}\n        onClose={handleAssignTreatmentsDialogClose}\n        patient={patient}\n        onAssign={fetchTreatments}\n      />\n      <EditPatientDialog\n        open={editDialogOpen}\n        onClose={handleEditDialogClose}\n        onEditSubmit={handleEditSubmit}\n        patient={patient}\n      />\n    </Container>\n  );\n};\n\nexport default PatientProfile;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}