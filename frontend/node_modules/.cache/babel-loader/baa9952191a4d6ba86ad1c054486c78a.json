{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Davide Grieco\\\\Desktop\\\\CranialDevice_web\\\\frontend\\\\src\\\\pages\\\\patients\\\\PatientList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Container, Typography, Table, TableBody, TableCell, TableHead, TableRow, Paper, Button, TablePagination, IconButton, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Checkbox } from '@mui/material';\nimport { Delete as DeleteIcon, Edit as EditIcon } from '@mui/icons-material';\nimport { useAuth } from '../../contexts/AuthContext';\nimport AddPatientDialog from './AddPatientDialog';\nimport EditPatientDialog from './EditPatientDialog';\nimport './PatientList.css';\nimport HamburgerMenu from '../../components/HamburgerMenu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PatientList() {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [patients, setPatients] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [addDialogOpen, setAddDialogOpen] = useState(false);\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n  const [selectedPatient, setSelectedPatient] = useState(null);\n  const [selectedPatients, setSelectedPatients] = useState([]);\n  useEffect(() => {\n    const fetchPatients = async () => {\n      if (!user) return;\n      try {\n        const endpoint = user.isAdmin ? '/api/patients' : `/api/patients/assigned?doctor_name=${user.name}`;\n        const response = await fetch(`http://localhost:5000${endpoint}`, {\n          method: 'GET',\n          credentials: 'include'\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setPatients(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPatients();\n  }, [user]);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  const handleDelete = async uuids => {\n    try {\n      console.log(`Deleting patients with UUIDs: ${uuids}`); // Log UUIDs being sent for deletion\n\n      const response = await fetch(`http://localhost:5000/api/patients/bulk_delete`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          uuids\n        }) // Assicurati che i dati siano inviati come JSON\n      });\n      if (!response.ok) {\n        const errorMessage = await response.json();\n        throw new Error(errorMessage.message);\n      }\n\n      // Aggiorna la lista dei pazienti dopo la cancellazione\n      setPatients(prevPatients => prevPatients.filter(patient => !uuids.includes(patient.uuid)));\n      setDeleteDialogOpen(false);\n      setSelectedPatients([]);\n      setSelectedPatient(null);\n    } catch (error) {\n      console.error('Error deleting patient:', error.message);\n    }\n  };\n  const handleAddDialogOpen = () => {\n    setAddDialogOpen(true);\n  };\n  const handleAddDialogClose = () => {\n    setAddDialogOpen(false);\n  };\n  const handlePatientAdded = () => {\n    setAddDialogOpen(false);\n    // Ricarica i pazienti dopo aver aggiunto un nuovo paziente\n    const fetchPatients = async () => {\n      try {\n        const endpoint = user.isAdmin ? '/api/patients' : `/api/patients/assigned?doctor_name=${user.name}`;\n        const response = await fetch(`http://localhost:5000${endpoint}`, {\n          method: 'GET',\n          credentials: 'include'\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setPatients(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPatients();\n  };\n  const handleEditDialogOpen = patient => {\n    setSelectedPatient(patient);\n    setEditDialogOpen(true);\n  };\n  const handleEditDialogClose = () => {\n    setEditDialogOpen(false);\n    setSelectedPatient(null);\n  };\n  const handleEditSubmit = async updatedPatient => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/patients`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify(updatedPatient)\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      // Aggiorna la lista dei pazienti dopo la modifica\n      setPatients(prevPatients => prevPatients.map(patient => patient.uuid === updatedPatient.uuid ? {\n        ...patient,\n        ...updatedPatient\n      } : patient));\n      setEditDialogOpen(false);\n      setSelectedPatient(null);\n    } catch (error) {\n      console.error('Error updating patient:', error.message);\n    }\n  };\n  const handleDeleteDialogOpen = patient => {\n    setSelectedPatient(patient);\n    setDeleteDialogOpen(true);\n  };\n  const handleDeleteDialogClose = () => {\n    setDeleteDialogOpen(false);\n    setSelectedPatient(null);\n  };\n  const handleSelectPatient = uuid => {\n    if (selectedPatients.includes(uuid)) {\n      setSelectedPatients(selectedPatients.filter(id => id !== uuid));\n    } else {\n      setSelectedPatients([...selectedPatients, uuid]);\n    }\n  };\n  const isSelected = uuid => selectedPatients.includes(uuid);\n  const handleSelectAllPatients = event => {\n    if (event.target.checked) {\n      const newSelecteds = patients.map(patient => patient.uuid);\n      setSelectedPatients(newSelecteds);\n    } else {\n      setSelectedPatients([]);\n    }\n  };\n  const isAllSelected = selectedPatients.length === patients.length;\n  const handleMultipleDelete = () => {\n    setDeleteDialogOpen(true);\n    setSelectedPatient(null);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"root\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"root\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"root\",\n    children: [/*#__PURE__*/_jsxDEV(HamburgerMenu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        component: Paper,\n        className: \"table-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-header-container\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            gutterBottom: true,\n            children: \"Lista Pazienti\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), user && !user.isAdmin && /*#__PURE__*/_jsxDEV(Button, {\n            className: \"add-patient-btn\",\n            onClick: handleAddDialogOpen,\n            children: \"Aggiungi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this), user && !user.isAdmin && selectedPatients.length > 0 && /*#__PURE__*/_jsxDEV(Button, {\n            color: \"secondary\",\n            onClick: handleMultipleDelete,\n            children: \"Elimina Selezionati\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          className: \"styled-table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [user && !user.isAdmin && /*#__PURE__*/_jsxDEV(TableCell, {\n                padding: \"checkbox\",\n                children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  indeterminate: selectedPatients.length > 0 && selectedPatients.length < patients.length,\n                  checked: isAllSelected,\n                  onChange: handleSelectAllPatients\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                className: \"table-header\",\n                children: \"Nominativo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                className: \"table-header\",\n                children: \"Et\\xE0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                className: \"table-header\",\n                children: \"Altezza\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                className: \"table-header\",\n                children: \"Peso\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 17\n              }, this), user && user.isAdmin && /*#__PURE__*/_jsxDEV(TableCell, {\n                className: \"table-header\",\n                children: \"Dottore\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 42\n              }, this), user && !user.isAdmin && /*#__PURE__*/_jsxDEV(TableCell, {\n                className: \"table-header\",\n                children: \"Azioni\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 43\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: patients.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(patient => /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              role: \"checkbox\",\n              \"aria-checked\": isSelected(patient.uuid),\n              selected: isSelected(patient.uuid),\n              children: [user && !user.isAdmin && /*#__PURE__*/_jsxDEV(TableCell, {\n                padding: \"checkbox\",\n                children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  checked: isSelected(patient.uuid),\n                  onChange: () => handleSelectPatient(patient.uuid)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: patient.nominativo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: patient.eta\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: patient.altezza\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: patient.peso\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 19\n              }, this), user && user.isAdmin && /*#__PURE__*/_jsxDEV(TableCell, {\n                children: patient.doctor_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 44\n              }, this), user && !user.isAdmin && /*#__PURE__*/_jsxDEV(TableCell, {\n                children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => handleEditDialogOpen(patient),\n                  color: \"primary\",\n                  disabled: selectedPatients.length > 0,\n                  children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => handleDeleteDialogOpen(patient),\n                  color: \"secondary\",\n                  children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 21\n              }, this)]\n            }, patient.uuid, true, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n          rowsPerPageOptions: [10, 25, 50],\n          component: \"div\",\n          count: patients.length,\n          rowsPerPage: rowsPerPage,\n          page: page,\n          onPageChange: handleChangePage,\n          onRowsPerPageChange: handleChangeRowsPerPage,\n          className: \"pagination\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), user && /*#__PURE__*/_jsxDEV(AddPatientDialog, {\n      open: addDialogOpen,\n      onClose: handleAddDialogClose,\n      onPatientAdded: handlePatientAdded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 9\n    }, this), user && selectedPatient && /*#__PURE__*/_jsxDEV(EditPatientDialog, {\n      open: editDialogOpen,\n      onClose: handleEditDialogClose,\n      onEditSubmit: handleEditSubmit,\n      patient: selectedPatient\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: deleteDialogOpen,\n      onClose: handleDeleteDialogClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Conferma Eliminazione\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: selectedPatient ? `Sei sicuro di voler eliminare il paziente ${selectedPatient.nominativo}?` : 'Sei sicuro di voler eliminare i pazienti selezionati?'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleDeleteDialogClose,\n          color: \"primary\",\n          children: \"Annulla\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleDelete(selectedPatient ? [selectedPatient.uuid] : selectedPatients),\n          color: \"primary\",\n          autoFocus: true,\n          children: \"Elimina\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 5\n  }, this);\n}\n_s(PatientList, \"xX3BMbladRKnWJe7NTda2rW80hc=\", false, function () {\n  return [useAuth];\n});\n_c = PatientList;\nexport default PatientList;\nvar _c;\n$RefreshReg$(_c, \"PatientList\");","map":{"version":3,"names":["React","useEffect","useState","Container","Typography","Table","TableBody","TableCell","TableHead","TableRow","Paper","Button","TablePagination","IconButton","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Checkbox","Delete","DeleteIcon","Edit","EditIcon","useAuth","AddPatientDialog","EditPatientDialog","HamburgerMenu","jsxDEV","_jsxDEV","PatientList","_s","user","patients","setPatients","loading","setLoading","error","setError","page","setPage","rowsPerPage","setRowsPerPage","addDialogOpen","setAddDialogOpen","deleteDialogOpen","setDeleteDialogOpen","editDialogOpen","setEditDialogOpen","selectedPatient","setSelectedPatient","selectedPatients","setSelectedPatients","fetchPatients","endpoint","isAdmin","name","response","fetch","method","credentials","ok","Error","data","json","message","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","handleDelete","uuids","console","log","headers","body","JSON","stringify","errorMessage","prevPatients","filter","patient","includes","uuid","handleAddDialogOpen","handleAddDialogClose","handlePatientAdded","handleEditDialogOpen","handleEditDialogClose","handleEditSubmit","updatedPatient","map","handleDeleteDialogOpen","handleDeleteDialogClose","handleSelectPatient","id","isSelected","handleSelectAllPatients","checked","newSelecteds","isAllSelected","length","handleMultipleDelete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","component","variant","gutterBottom","onClick","color","padding","indeterminate","onChange","slice","hover","role","selected","nominativo","eta","altezza","peso","doctor_name","disabled","rowsPerPageOptions","count","onPageChange","onRowsPerPageChange","open","onClose","onPatientAdded","onEditSubmit","autoFocus","_c","$RefreshReg$"],"sources":["C:/Users/Davide Grieco/Desktop/CranialDevice_web/frontend/src/pages/patients/PatientList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Button,\r\n  TablePagination,\r\n  IconButton,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Checkbox,\r\n} from '@mui/material';\r\nimport { Delete as DeleteIcon, Edit as EditIcon } from '@mui/icons-material';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport AddPatientDialog from './AddPatientDialog';\r\nimport EditPatientDialog from './EditPatientDialog';\r\nimport './PatientList.css';\r\nimport HamburgerMenu from '../../components/HamburgerMenu';\r\n\r\nfunction PatientList() {\r\n  const { user } = useAuth();\r\n  const [patients, setPatients] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [addDialogOpen, setAddDialogOpen] = useState(false);\r\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\r\n  const [selectedPatient, setSelectedPatient] = useState(null);\r\n  const [selectedPatients, setSelectedPatients] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchPatients = async () => {\r\n      if (!user) return;\r\n\r\n      try {\r\n        const endpoint = user.isAdmin ? '/api/patients' : `/api/patients/assigned?doctor_name=${user.name}`;\r\n        const response = await fetch(`http://localhost:5000${endpoint}`, {\r\n          method: 'GET',\r\n          credentials: 'include',\r\n        });\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        const data = await response.json();\r\n        setPatients(data);\r\n      } catch (error) {\r\n        setError(error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchPatients();\r\n  }, [user]);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleDelete = async (uuids) => {\r\n    try {\r\n      console.log(`Deleting patients with UUIDs: ${uuids}`); // Log UUIDs being sent for deletion\r\n\r\n      const response = await fetch(`http://localhost:5000/api/patients/bulk_delete`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ uuids }),  // Assicurati che i dati siano inviati come JSON\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorMessage = await response.json();\r\n        throw new Error(errorMessage.message);\r\n      }\r\n\r\n      // Aggiorna la lista dei pazienti dopo la cancellazione\r\n      setPatients((prevPatients) => prevPatients.filter((patient) => !uuids.includes(patient.uuid)));\r\n      setDeleteDialogOpen(false);\r\n      setSelectedPatients([]);\r\n      setSelectedPatient(null);\r\n    } catch (error) {\r\n      console.error('Error deleting patient:', error.message);\r\n    }\r\n  };\r\n\r\n  const handleAddDialogOpen = () => {\r\n    setAddDialogOpen(true);\r\n  };\r\n\r\n  const handleAddDialogClose = () => {\r\n    setAddDialogOpen(false);\r\n  };\r\n\r\n  const handlePatientAdded = () => {\r\n    setAddDialogOpen(false);\r\n    // Ricarica i pazienti dopo aver aggiunto un nuovo paziente\r\n    const fetchPatients = async () => {\r\n      try {\r\n        const endpoint = user.isAdmin ? '/api/patients' : `/api/patients/assigned?doctor_name=${user.name}`;\r\n        const response = await fetch(`http://localhost:5000${endpoint}`, {\r\n          method: 'GET',\r\n          credentials: 'include',\r\n        });\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        const data = await response.json();\r\n        setPatients(data);\r\n      } catch (error) {\r\n        setError(error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchPatients();\r\n  };\r\n\r\n  const handleEditDialogOpen = (patient) => {\r\n    setSelectedPatient(patient);\r\n    setEditDialogOpen(true);\r\n  };\r\n\r\n  const handleEditDialogClose = () => {\r\n    setEditDialogOpen(false);\r\n    setSelectedPatient(null);\r\n  };\r\n\r\n  const handleEditSubmit = async (updatedPatient) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/patients`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify(updatedPatient),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n\r\n      // Aggiorna la lista dei pazienti dopo la modifica\r\n      setPatients((prevPatients) =>\r\n        prevPatients.map((patient) =>\r\n          patient.uuid === updatedPatient.uuid ? { ...patient, ...updatedPatient } : patient\r\n        )\r\n      );\r\n      setEditDialogOpen(false);\r\n      setSelectedPatient(null);\r\n    } catch (error) {\r\n      console.error('Error updating patient:', error.message);\r\n    }\r\n  };\r\n\r\n  const handleDeleteDialogOpen = (patient) => {\r\n    setSelectedPatient(patient);\r\n    setDeleteDialogOpen(true);\r\n  };\r\n\r\n  const handleDeleteDialogClose = () => {\r\n    setDeleteDialogOpen(false);\r\n    setSelectedPatient(null);\r\n  };\r\n\r\n  const handleSelectPatient = (uuid) => {\r\n    if (selectedPatients.includes(uuid)) {\r\n      setSelectedPatients(selectedPatients.filter((id) => id !== uuid));\r\n    } else {\r\n      setSelectedPatients([...selectedPatients, uuid]);\r\n    }\r\n  };\r\n\r\n  const isSelected = (uuid) => selectedPatients.includes(uuid);\r\n\r\n  const handleSelectAllPatients = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = patients.map((patient) => patient.uuid);\r\n      setSelectedPatients(newSelecteds);\r\n    } else {\r\n      setSelectedPatients([]);\r\n    }\r\n  };\r\n\r\n  const isAllSelected = selectedPatients.length === patients.length;\r\n\r\n  const handleMultipleDelete = () => {\r\n    setDeleteDialogOpen(true);\r\n    setSelectedPatient(null);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"root\">\r\n        <Typography>Loading...</Typography>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"root\">\r\n        <Typography>Error: {error}</Typography>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"root\">\r\n      <HamburgerMenu />\r\n      <div className=\"content\">\r\n        <Container component={Paper} className=\"table-container\">\r\n          <div className=\"table-header-container\">\r\n            <Typography variant=\"h4\" gutterBottom>\r\n              Lista Pazienti\r\n            </Typography>\r\n            {user && !user.isAdmin && (\r\n              <Button className=\"add-patient-btn\" onClick={handleAddDialogOpen}>\r\n                Aggiungi\r\n              </Button>\r\n            )}\r\n            {user && !user.isAdmin && selectedPatients.length > 0 && (\r\n              <Button color=\"secondary\" onClick={handleMultipleDelete}>\r\n                Elimina Selezionati\r\n              </Button>\r\n            )}\r\n          </div>\r\n          <Table className=\"styled-table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {user && !user.isAdmin && (\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      indeterminate={selectedPatients.length > 0 && selectedPatients.length < patients.length}\r\n                      checked={isAllSelected}\r\n                      onChange={handleSelectAllPatients}\r\n                    />\r\n                  </TableCell>\r\n                )}\r\n                <TableCell className=\"table-header\">Nominativo</TableCell>\r\n                <TableCell className=\"table-header\">Età</TableCell>\r\n                <TableCell className=\"table-header\">Altezza</TableCell>\r\n                <TableCell className=\"table-header\">Peso</TableCell>\r\n                {user && user.isAdmin && <TableCell className=\"table-header\">Dottore</TableCell>}\r\n                {user && !user.isAdmin && <TableCell className=\"table-header\">Azioni</TableCell>}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {patients.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((patient) => (\r\n                <TableRow\r\n                  key={patient.uuid}\r\n                  hover\r\n                  role=\"checkbox\"\r\n                  aria-checked={isSelected(patient.uuid)}\r\n                  selected={isSelected(patient.uuid)}\r\n                >\r\n                  {user && !user.isAdmin && (\r\n                    <TableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        checked={isSelected(patient.uuid)}\r\n                        onChange={() => handleSelectPatient(patient.uuid)}\r\n                      />\r\n                    </TableCell>\r\n                  )}\r\n                  <TableCell>{patient.nominativo}</TableCell>\r\n                  <TableCell>{patient.eta}</TableCell>\r\n                  <TableCell>{patient.altezza}</TableCell>\r\n                  <TableCell>{patient.peso}</TableCell>\r\n                  {user && user.isAdmin && <TableCell>{patient.doctor_name}</TableCell>}\r\n                  {user && !user.isAdmin && (\r\n                    <TableCell>\r\n                      <IconButton onClick={() => handleEditDialogOpen(patient)} color=\"primary\" disabled={selectedPatients.length > 0}>\r\n                        <EditIcon />\r\n                      </IconButton>\r\n                      <IconButton onClick={() => handleDeleteDialogOpen(patient)} color=\"secondary\">\r\n                        <DeleteIcon />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  )}\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n          <TablePagination\r\n            rowsPerPageOptions={[10, 25, 50]}\r\n            component=\"div\"\r\n            count={patients.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n            className=\"pagination\"\r\n          />\r\n        </Container>\r\n      </div>\r\n      {user && (\r\n        <AddPatientDialog open={addDialogOpen} onClose={handleAddDialogClose} onPatientAdded={handlePatientAdded} />\r\n      )}\r\n      {user && selectedPatient && (\r\n        <EditPatientDialog\r\n          open={editDialogOpen}\r\n          onClose={handleEditDialogClose}\r\n          onEditSubmit={handleEditSubmit}\r\n          patient={selectedPatient}\r\n        />\r\n      )}\r\n      <Dialog open={deleteDialogOpen} onClose={handleDeleteDialogClose}>\r\n        <DialogTitle>Conferma Eliminazione</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {selectedPatient\r\n              ? `Sei sicuro di voler eliminare il paziente ${selectedPatient.nominativo}?`\r\n              : 'Sei sicuro di voler eliminare i pazienti selezionati?'}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDeleteDialogClose} color=\"primary\">\r\n            Annulla\r\n          </Button>\r\n          <Button\r\n            onClick={() => handleDelete(selectedPatient ? [selectedPatient.uuid] : selectedPatients)}\r\n            color=\"primary\"\r\n            autoFocus\r\n          >\r\n            Elimina\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}