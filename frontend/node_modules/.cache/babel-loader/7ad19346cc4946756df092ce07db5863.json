{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Davide Grieco\\\\Desktop\\\\CranialDevice_web\\\\frontend\\\\src\\\\pages\\\\patients\\\\PatientList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Container, Typography, Table, TableBody, TableCell, TableHead, TableRow, Paper, Button, TablePagination, IconButton, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, TextField } from '@mui/material';\nimport { Delete as DeleteIcon, Edit as EditIcon } from '@mui/icons-material';\nimport { useAuth } from '../../contexts/AuthContext';\nimport AddPatientDialog from '../../components/AddPatientDialog';\nimport './PatientList.css';\nimport HamburgerMenu from '../../components/HamburgerMenu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PatientList() {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [patients, setPatients] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [addDialogOpen, setAddDialogOpen] = useState(false);\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n  const [selectedPatient, setSelectedPatient] = useState(null);\n  const [editedPatient, setEditedPatient] = useState({\n    nominativo: '',\n    eta: '',\n    altezza: '',\n    peso: ''\n  });\n  useEffect(() => {\n    const fetchPatients = async () => {\n      if (!user) return;\n      try {\n        const endpoint = user.isAdmin ? '/api/patients' : `/api/patients/assigned?doctor_name=${user.name}`;\n        const response = await fetch(`http://localhost:5000${endpoint}`, {\n          method: 'GET',\n          credentials: 'include'\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setPatients(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPatients();\n  }, [user]);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  const handleDelete = async uuid => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/patients/${uuid}`, {\n        method: 'DELETE',\n        credentials: 'include'\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      // Aggiorna la lista dei pazienti dopo la cancellazione\n      setPatients(prevPatients => prevPatients.filter(patient => patient.uuid !== uuid));\n      setDeleteDialogOpen(false);\n      setSelectedPatient(null);\n    } catch (error) {\n      console.error('Error deleting patient:', error.message);\n    }\n  };\n  const handleAddDialogOpen = () => {\n    setAddDialogOpen(true);\n  };\n  const handleAddDialogClose = () => {\n    setAddDialogOpen(false);\n  };\n  const handlePatientAdded = () => {\n    setAddDialogOpen(false);\n    // Ricarica i pazienti dopo aver aggiunto un nuovo paziente\n    const fetchPatients = async () => {\n      try {\n        const endpoint = user.isAdmin ? '/api/patients' : `/api/patients/assigned?doctor_name=${user.name}`;\n        const response = await fetch(`http://localhost:5000${endpoint}`, {\n          method: 'GET',\n          credentials: 'include'\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setPatients(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPatients();\n  };\n  const handleEditDialogOpen = patient => {\n    setSelectedPatient(patient);\n    setEditedPatient({\n      nominativo: patient.nominativo,\n      eta: patient.eta,\n      altezza: patient.altezza,\n      peso: patient.peso\n    });\n    setEditDialogOpen(true);\n  };\n  const handleEditDialogClose = () => {\n    setEditDialogOpen(false);\n    setSelectedPatient(null);\n  };\n  const handleEditChange = e => {\n    setEditedPatient({\n      ...editedPatient,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleEditSubmit = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/patients`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          ...editedPatient,\n          uuid: selectedPatient.uuid\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      // Aggiorna la lista dei pazienti dopo la modifica\n      setPatients(prevPatients => prevPatients.map(patient => patient.uuid === selectedPatient.uuid ? {\n        ...patient,\n        ...editedPatient\n      } : patient));\n      setEditDialogOpen(false);\n      setSelectedPatient(null);\n    } catch (error) {\n      console.error('Error updating patient:', error.message);\n    }\n  };\n  const handleDeleteDialogOpen = patient => {\n    setSelectedPatient(patient);\n    setDeleteDialogOpen(true);\n  };\n  const handleDeleteDialogClose = () => {\n    setDeleteDialogOpen(false);\n    setSelectedPatient(null);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"root\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"root\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"root\",\n    children: [/*#__PURE__*/_jsxDEV(HamburgerMenu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        component: Paper,\n        className: \"table-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-header-container\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            gutterBottom: true,\n            children: \"Lista Pazienti\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), user && !user.isAdmin && /*#__PURE__*/_jsxDEV(Button, {\n            className: \"add-patient-btn\",\n            onClick: handleAddDialogOpen,\n            children: \"Aggiungi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          className: \"styled-table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                className: \"table-header\",\n                children: \"Nominativo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                className: \"table-header\",\n                children: \"Et\\xE0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                className: \"table-header\",\n                children: \"Altezza\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                className: \"table-header\",\n                children: \"Peso\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 17\n              }, this), user && user.isAdmin && /*#__PURE__*/_jsxDEV(TableCell, {\n                className: \"table-header\",\n                children: \"Dottore\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 42\n              }, this), user && !user.isAdmin && /*#__PURE__*/_jsxDEV(TableCell, {\n                className: \"table-header\",\n                children: \"Azioni\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 43\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: patients.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(patient => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: patient.nominativo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: patient.eta\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: patient.altezza\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: patient.peso\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 19\n              }, this), user && user.isAdmin && /*#__PURE__*/_jsxDEV(TableCell, {\n                children: patient.doctor_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 44\n              }, this), user && !user.isAdmin && /*#__PURE__*/_jsxDEV(TableCell, {\n                children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => handleEditDialogOpen(patient),\n                  color: \"primary\",\n                  children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => handleDeleteDialogOpen(patient),\n                  color: \"secondary\",\n                  children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 21\n              }, this)]\n            }, patient.uuid, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n          rowsPerPageOptions: [10, 25, 50],\n          component: \"div\",\n          count: patients.length,\n          rowsPerPage: rowsPerPage,\n          page: page,\n          onPageChange: handleChangePage,\n          onRowsPerPageChange: handleChangeRowsPerPage,\n          className: \"pagination\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), user && /*#__PURE__*/_jsxDEV(AddPatientDialog, {\n      open: addDialogOpen,\n      onClose: handleAddDialogClose,\n      onPatientAdded: handlePatientAdded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: editDialogOpen,\n      onClose: handleEditDialogClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Modifica Paziente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: [\"Modifica le informazioni del paziente \", selectedPatient === null || selectedPatient === void 0 ? void 0 : selectedPatient.nominativo, \".\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"dense\",\n          name: \"nominativo\",\n          label: \"Nominativo\",\n          type: \"text\",\n          fullWidth: true,\n          value: editedPatient.nominativo,\n          onChange: handleEditChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"dense\",\n          name: \"eta\",\n          label: \"Et\\xE0\",\n          type: \"number\",\n          fullWidth: true,\n          value: editedPatient.eta,\n          onChange: handleEditChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"dense\",\n          name: \"altezza\",\n          label: \"Altezza\",\n          type: \"number\",\n          fullWidth: true,\n          value: editedPatient.altezza,\n          onChange: handleEditChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"dense\",\n          name: \"peso\",\n          label: \"Peso\",\n          type: \"number\",\n          fullWidth: true,\n          value: editedPatient.peso,\n          onChange: handleEditChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleEditDialogClose,\n          color: \"primary\",\n          children: \"Annulla\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleEditSubmit,\n          color: \"primary\",\n          children: \"Salva\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: deleteDialogOpen,\n      onClose: handleDeleteDialogClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Conferma Eliminazione\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: [\"Sei sicuro di voler eliminare il paziente \", selectedPatient === null || selectedPatient === void 0 ? void 0 : selectedPatient.nominativo, \"?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleDeleteDialogClose,\n          color: \"primary\",\n          children: \"Annulla\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleDelete(selectedPatient.uuid),\n          color: \"primary\",\n          autoFocus: true,\n          children: \"Elimina\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 5\n  }, this);\n}\n_s(PatientList, \"KFlT9zzJHEtEs93z7QQ1k7yhuDE=\", false, function () {\n  return [useAuth];\n});\n_c = PatientList;\nexport default PatientList;\nvar _c;\n$RefreshReg$(_c, \"PatientList\");","map":{"version":3,"names":["React","useEffect","useState","Container","Typography","Table","TableBody","TableCell","TableHead","TableRow","Paper","Button","TablePagination","IconButton","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","TextField","Delete","DeleteIcon","Edit","EditIcon","useAuth","AddPatientDialog","HamburgerMenu","jsxDEV","_jsxDEV","PatientList","_s","user","patients","setPatients","loading","setLoading","error","setError","page","setPage","rowsPerPage","setRowsPerPage","addDialogOpen","setAddDialogOpen","deleteDialogOpen","setDeleteDialogOpen","editDialogOpen","setEditDialogOpen","selectedPatient","setSelectedPatient","editedPatient","setEditedPatient","nominativo","eta","altezza","peso","fetchPatients","endpoint","isAdmin","name","response","fetch","method","credentials","ok","Error","data","json","message","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","handleDelete","uuid","prevPatients","filter","patient","console","handleAddDialogOpen","handleAddDialogClose","handlePatientAdded","handleEditDialogOpen","handleEditDialogClose","handleEditChange","e","handleEditSubmit","headers","body","JSON","stringify","map","handleDeleteDialogOpen","handleDeleteDialogClose","className","children","fileName","_jsxFileName","lineNumber","columnNumber","component","variant","gutterBottom","onClick","slice","doctor_name","color","rowsPerPageOptions","count","length","onPageChange","onRowsPerPageChange","open","onClose","onPatientAdded","margin","label","type","fullWidth","onChange","autoFocus","_c","$RefreshReg$"],"sources":["C:/Users/Davide Grieco/Desktop/CranialDevice_web/frontend/src/pages/patients/PatientList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Button,\r\n  TablePagination,\r\n  IconButton,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  TextField,\r\n} from '@mui/material';\r\nimport { Delete as DeleteIcon, Edit as EditIcon } from '@mui/icons-material';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport AddPatientDialog from '../../components/AddPatientDialog';\r\nimport './PatientList.css';\r\nimport HamburgerMenu from '../../components/HamburgerMenu';\r\n\r\nfunction PatientList() {\r\n  const { user } = useAuth();\r\n  const [patients, setPatients] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [addDialogOpen, setAddDialogOpen] = useState(false);\r\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\r\n  const [selectedPatient, setSelectedPatient] = useState(null);\r\n  const [editedPatient, setEditedPatient] = useState({\r\n    nominativo: '',\r\n    eta: '',\r\n    altezza: '',\r\n    peso: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchPatients = async () => {\r\n      if (!user) return;\r\n\r\n      try {\r\n        const endpoint = user.isAdmin ? '/api/patients' : `/api/patients/assigned?doctor_name=${user.name}`;\r\n        const response = await fetch(`http://localhost:5000${endpoint}`, {\r\n          method: 'GET',\r\n          credentials: 'include',\r\n        });\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        const data = await response.json();\r\n        setPatients(data);\r\n      } catch (error) {\r\n        setError(error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchPatients();\r\n  }, [user]);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleDelete = async (uuid) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/patients/${uuid}`, {\r\n        method: 'DELETE',\r\n        credentials: 'include',\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n\r\n      // Aggiorna la lista dei pazienti dopo la cancellazione\r\n      setPatients((prevPatients) => prevPatients.filter((patient) => patient.uuid !== uuid));\r\n      setDeleteDialogOpen(false);\r\n      setSelectedPatient(null);\r\n    } catch (error) {\r\n      console.error('Error deleting patient:', error.message);\r\n    }\r\n  };\r\n\r\n  const handleAddDialogOpen = () => {\r\n    setAddDialogOpen(true);\r\n  };\r\n\r\n  const handleAddDialogClose = () => {\r\n    setAddDialogOpen(false);\r\n  };\r\n\r\n  const handlePatientAdded = () => {\r\n    setAddDialogOpen(false);\r\n    // Ricarica i pazienti dopo aver aggiunto un nuovo paziente\r\n    const fetchPatients = async () => {\r\n      try {\r\n        const endpoint = user.isAdmin ? '/api/patients' : `/api/patients/assigned?doctor_name=${user.name}`;\r\n        const response = await fetch(`http://localhost:5000${endpoint}`, {\r\n          method: 'GET',\r\n          credentials: 'include',\r\n        });\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        const data = await response.json();\r\n        setPatients(data);\r\n      } catch (error) {\r\n        setError(error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchPatients();\r\n  };\r\n\r\n  const handleEditDialogOpen = (patient) => {\r\n    setSelectedPatient(patient);\r\n    setEditedPatient({\r\n      nominativo: patient.nominativo,\r\n      eta: patient.eta,\r\n      altezza: patient.altezza,\r\n      peso: patient.peso,\r\n    });\r\n    setEditDialogOpen(true);\r\n  };\r\n\r\n  const handleEditDialogClose = () => {\r\n    setEditDialogOpen(false);\r\n    setSelectedPatient(null);\r\n  };\r\n\r\n  const handleEditChange = (e) => {\r\n    setEditedPatient({ ...editedPatient, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleEditSubmit = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/patients`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ ...editedPatient, uuid: selectedPatient.uuid }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n\r\n      // Aggiorna la lista dei pazienti dopo la modifica\r\n      setPatients((prevPatients) =>\r\n        prevPatients.map((patient) =>\r\n          patient.uuid === selectedPatient.uuid ? { ...patient, ...editedPatient } : patient\r\n        )\r\n      );\r\n      setEditDialogOpen(false);\r\n      setSelectedPatient(null);\r\n    } catch (error) {\r\n      console.error('Error updating patient:', error.message);\r\n    }\r\n  };\r\n\r\n  const handleDeleteDialogOpen = (patient) => {\r\n    setSelectedPatient(patient);\r\n    setDeleteDialogOpen(true);\r\n  };\r\n\r\n  const handleDeleteDialogClose = () => {\r\n    setDeleteDialogOpen(false);\r\n    setSelectedPatient(null);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"root\">\r\n        <Typography>Loading...</Typography>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"root\">\r\n        <Typography>Error: {error}</Typography>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"root\">\r\n      <HamburgerMenu />\r\n      <div className=\"content\">\r\n        <Container component={Paper} className=\"table-container\">\r\n          <div className=\"table-header-container\">\r\n            <Typography variant=\"h4\" gutterBottom>\r\n              Lista Pazienti\r\n            </Typography>\r\n            {user && !user.isAdmin && (\r\n              <Button className=\"add-patient-btn\" onClick={handleAddDialogOpen}>\r\n                Aggiungi\r\n              </Button>\r\n            )}\r\n          </div>\r\n          <Table className=\"styled-table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell className=\"table-header\">Nominativo</TableCell>\r\n                <TableCell className=\"table-header\">Età</TableCell>\r\n                <TableCell className=\"table-header\">Altezza</TableCell>\r\n                <TableCell className=\"table-header\">Peso</TableCell>\r\n                {user && user.isAdmin && <TableCell className=\"table-header\">Dottore</TableCell>}\r\n                {user && !user.isAdmin && <TableCell className=\"table-header\">Azioni</TableCell>}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {patients.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((patient) => (\r\n                <TableRow key={patient.uuid}>\r\n                  <TableCell>{patient.nominativo}</TableCell>\r\n                  <TableCell>{patient.eta}</TableCell>\r\n                  <TableCell>{patient.altezza}</TableCell>\r\n                  <TableCell>{patient.peso}</TableCell>\r\n                  {user && user.isAdmin && <TableCell>{patient.doctor_name}</TableCell>}\r\n                  {user && !user.isAdmin && (\r\n                    <TableCell>\r\n                      <IconButton onClick={() => handleEditDialogOpen(patient)} color=\"primary\">\r\n                        <EditIcon />\r\n                      </IconButton>\r\n                      <IconButton onClick={() => handleDeleteDialogOpen(patient)} color=\"secondary\">\r\n                        <DeleteIcon />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  )}\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n          <TablePagination\r\n            rowsPerPageOptions={[10, 25, 50]}\r\n            component=\"div\"\r\n            count={patients.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n            className=\"pagination\"\r\n          />\r\n        </Container>\r\n      </div>\r\n      {user && (\r\n        <AddPatientDialog open={addDialogOpen} onClose={handleAddDialogClose} onPatientAdded={handlePatientAdded} />\r\n      )}\r\n      <Dialog open={editDialogOpen} onClose={handleEditDialogClose}>\r\n        <DialogTitle>Modifica Paziente</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Modifica le informazioni del paziente {selectedPatient?.nominativo}.\r\n          </DialogContentText>\r\n          <TextField\r\n            margin=\"dense\"\r\n            name=\"nominativo\"\r\n            label=\"Nominativo\"\r\n            type=\"text\"\r\n            fullWidth\r\n            value={editedPatient.nominativo}\r\n            onChange={handleEditChange}\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            name=\"eta\"\r\n            label=\"Età\"\r\n            type=\"number\"\r\n            fullWidth\r\n            value={editedPatient.eta}\r\n            onChange={handleEditChange}\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            name=\"altezza\"\r\n            label=\"Altezza\"\r\n            type=\"number\"\r\n            fullWidth\r\n            value={editedPatient.altezza}\r\n            onChange={handleEditChange}\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            name=\"peso\"\r\n            label=\"Peso\"\r\n            type=\"number\"\r\n            fullWidth\r\n            value={editedPatient.peso}\r\n            onChange={handleEditChange}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleEditDialogClose} color=\"primary\">\r\n            Annulla\r\n          </Button>\r\n          <Button onClick={handleEditSubmit} color=\"primary\">\r\n            Salva\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Dialog open={deleteDialogOpen} onClose={handleDeleteDialogClose}>\r\n        <DialogTitle>Conferma Eliminazione</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Sei sicuro di voler eliminare il paziente {selectedPatient?.nominativo}?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDeleteDialogClose} color=\"primary\">\r\n            Annulla\r\n          </Button>\r\n          <Button\r\n            onClick={() => handleDelete(selectedPatient.uuid)}\r\n            color=\"primary\"\r\n            autoFocus\r\n          >\r\n            Elimina\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SACEC,SAAS,EACTC,UAAU,EACVC,KAAK,EACLC,SAAS,EACTC,SAAS,EACTC,SAAS,EACTC,QAAQ,EACRC,KAAK,EACLC,MAAM,EACNC,eAAe,EACfC,UAAU,EACVC,MAAM,EACNC,aAAa,EACbC,aAAa,EACbC,iBAAiB,EACjBC,WAAW,EACXC,SAAS,QACJ,eAAe;AACtB,SAASC,MAAM,IAAIC,UAAU,EAAEC,IAAI,IAAIC,QAAQ,QAAQ,qBAAqB;AAC5E,SAASC,OAAO,QAAQ,4BAA4B;AACpD,OAAOC,gBAAgB,MAAM,mCAAmC;AAChE,OAAO,mBAAmB;AAC1B,OAAOC,aAAa,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAK,CAAC,GAAGP,OAAO,CAAC,CAAC;EAC1B,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACgC,OAAO,EAAEC,UAAU,CAAC,GAAGjC,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACkC,KAAK,EAAEC,QAAQ,CAAC,GAAGnC,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACoC,IAAI,EAAEC,OAAO,CAAC,GAAGrC,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACsC,WAAW,EAAEC,cAAc,CAAC,GAAGvC,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACwC,aAAa,EAAEC,gBAAgB,CAAC,GAAGzC,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAAC0C,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG3C,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAAC4C,cAAc,EAAEC,iBAAiB,CAAC,GAAG7C,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAAC8C,eAAe,EAAEC,kBAAkB,CAAC,GAAG/C,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACgD,aAAa,EAAEC,gBAAgB,CAAC,GAAGjD,QAAQ,CAAC;IACjDkD,UAAU,EAAE,EAAE;IACdC,GAAG,EAAE,EAAE;IACPC,OAAO,EAAE,EAAE;IACXC,IAAI,EAAE;EACR,CAAC,CAAC;EAEFtD,SAAS,CAAC,MAAM;IACd,MAAMuD,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI,CAACzB,IAAI,EAAE;MAEX,IAAI;QACF,MAAM0B,QAAQ,GAAG1B,IAAI,CAAC2B,OAAO,GAAG,eAAe,GAAG,sCAAsC3B,IAAI,CAAC4B,IAAI,EAAE;QACnG,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAwBJ,QAAQ,EAAE,EAAE;UAC/DK,MAAM,EAAE,KAAK;UACbC,WAAW,EAAE;QACf,CAAC,CAAC;QACF,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QACA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;QAClClC,WAAW,CAACiC,IAAI,CAAC;MACnB,CAAC,CAAC,OAAO9B,KAAK,EAAE;QACdC,QAAQ,CAACD,KAAK,CAACgC,OAAO,CAAC;MACzB,CAAC,SAAS;QACRjC,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IACDqB,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACzB,IAAI,CAAC,CAAC;EAEV,MAAMsC,gBAAgB,GAAGA,CAACC,KAAK,EAAEC,OAAO,KAAK;IAC3ChC,OAAO,CAACgC,OAAO,CAAC;EAClB,CAAC;EAED,MAAMC,uBAAuB,GAAIF,KAAK,IAAK;IACzC7B,cAAc,CAACgC,QAAQ,CAACH,KAAK,CAACI,MAAM,CAACC,KAAK,EAAE,EAAE,CAAC,CAAC;IAChDpC,OAAO,CAAC,CAAC,CAAC;EACZ,CAAC;EAED,MAAMqC,YAAY,GAAG,MAAOC,IAAI,IAAK;IACnC,IAAI;MACF,MAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsCgB,IAAI,EAAE,EAAE;QACzEf,MAAM,EAAE,QAAQ;QAChBC,WAAW,EAAE;MACf,CAAC,CAAC;MAEF,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;;MAEA;MACAhC,WAAW,CAAE6C,YAAY,IAAKA,YAAY,CAACC,MAAM,CAAEC,OAAO,IAAKA,OAAO,CAACH,IAAI,KAAKA,IAAI,CAAC,CAAC;MACtFhC,mBAAmB,CAAC,KAAK,CAAC;MAC1BI,kBAAkB,CAAC,IAAI,CAAC;IAC1B,CAAC,CAAC,OAAOb,KAAK,EAAE;MACd6C,OAAO,CAAC7C,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAACgC,OAAO,CAAC;IACzD;EACF,CAAC;EAED,MAAMc,mBAAmB,GAAGA,CAAA,KAAM;IAChCvC,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,MAAMwC,oBAAoB,GAAGA,CAAA,KAAM;IACjCxC,gBAAgB,CAAC,KAAK,CAAC;EACzB,CAAC;EAED,MAAMyC,kBAAkB,GAAGA,CAAA,KAAM;IAC/BzC,gBAAgB,CAAC,KAAK,CAAC;IACvB;IACA,MAAMa,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG1B,IAAI,CAAC2B,OAAO,GAAG,eAAe,GAAG,sCAAsC3B,IAAI,CAAC4B,IAAI,EAAE;QACnG,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAwBJ,QAAQ,EAAE,EAAE;UAC/DK,MAAM,EAAE,KAAK;UACbC,WAAW,EAAE;QACf,CAAC,CAAC;QACF,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QACA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;QAClClC,WAAW,CAACiC,IAAI,CAAC;MACnB,CAAC,CAAC,OAAO9B,KAAK,EAAE;QACdC,QAAQ,CAACD,KAAK,CAACgC,OAAO,CAAC;MACzB,CAAC,SAAS;QACRjC,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IACDqB,aAAa,CAAC,CAAC;EACjB,CAAC;EAED,MAAM6B,oBAAoB,GAAIL,OAAO,IAAK;IACxC/B,kBAAkB,CAAC+B,OAAO,CAAC;IAC3B7B,gBAAgB,CAAC;MACfC,UAAU,EAAE4B,OAAO,CAAC5B,UAAU;MAC9BC,GAAG,EAAE2B,OAAO,CAAC3B,GAAG;MAChBC,OAAO,EAAE0B,OAAO,CAAC1B,OAAO;MACxBC,IAAI,EAAEyB,OAAO,CAACzB;IAChB,CAAC,CAAC;IACFR,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,MAAMuC,qBAAqB,GAAGA,CAAA,KAAM;IAClCvC,iBAAiB,CAAC,KAAK,CAAC;IACxBE,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,MAAMsC,gBAAgB,GAAIC,CAAC,IAAK;IAC9BrC,gBAAgB,CAAC;MAAE,GAAGD,aAAa;MAAE,CAACsC,CAAC,CAACd,MAAM,CAACf,IAAI,GAAG6B,CAAC,CAACd,MAAM,CAACC;IAAM,CAAC,CAAC;EACzE,CAAC;EAED,MAAMc,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAM7B,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;QACjEC,MAAM,EAAE,KAAK;QACb4B,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACD3B,WAAW,EAAE,SAAS;QACtB4B,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAE,GAAG3C,aAAa;UAAE2B,IAAI,EAAE7B,eAAe,CAAC6B;QAAK,CAAC;MACvE,CAAC,CAAC;MAEF,IAAI,CAACjB,QAAQ,CAACI,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;;MAEA;MACAhC,WAAW,CAAE6C,YAAY,IACvBA,YAAY,CAACgB,GAAG,CAAEd,OAAO,IACvBA,OAAO,CAACH,IAAI,KAAK7B,eAAe,CAAC6B,IAAI,GAAG;QAAE,GAAGG,OAAO;QAAE,GAAG9B;MAAc,CAAC,GAAG8B,OAC7E,CACF,CAAC;MACDjC,iBAAiB,CAAC,KAAK,CAAC;MACxBE,kBAAkB,CAAC,IAAI,CAAC;IAC1B,CAAC,CAAC,OAAOb,KAAK,EAAE;MACd6C,OAAO,CAAC7C,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAACgC,OAAO,CAAC;IACzD;EACF,CAAC;EAED,MAAM2B,sBAAsB,GAAIf,OAAO,IAAK;IAC1C/B,kBAAkB,CAAC+B,OAAO,CAAC;IAC3BnC,mBAAmB,CAAC,IAAI,CAAC;EAC3B,CAAC;EAED,MAAMmD,uBAAuB,GAAGA,CAAA,KAAM;IACpCnD,mBAAmB,CAAC,KAAK,CAAC;IAC1BI,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,IAAIf,OAAO,EAAE;IACX,oBACEN,OAAA;MAAKqE,SAAS,EAAC,MAAM;MAAAC,QAAA,eACnBtE,OAAA,CAACxB,UAAU;QAAA8F,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC;EAEV;EAEA,IAAIlE,KAAK,EAAE;IACT,oBACER,OAAA;MAAKqE,SAAS,EAAC,MAAM;MAAAC,QAAA,eACnBtE,OAAA,CAACxB,UAAU;QAAA8F,QAAA,GAAC,SAAO,EAAC9D,KAAK;MAAA;QAAA+D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC;EAEV;EAEA,oBACE1E,OAAA;IAAKqE,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBtE,OAAA,CAACF,aAAa;MAAAyE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjB1E,OAAA;MAAKqE,SAAS,EAAC,SAAS;MAAAC,QAAA,eACtBtE,OAAA,CAACzB,SAAS;QAACoG,SAAS,EAAE7F,KAAM;QAACuF,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBACtDtE,OAAA;UAAKqE,SAAS,EAAC,wBAAwB;UAAAC,QAAA,gBACrCtE,OAAA,CAACxB,UAAU;YAACoG,OAAO,EAAC,IAAI;YAACC,YAAY;YAAAP,QAAA,EAAC;UAEtC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,EACZvE,IAAI,IAAI,CAACA,IAAI,CAAC2B,OAAO,iBACpB9B,OAAA,CAACjB,MAAM;YAACsF,SAAS,EAAC,iBAAiB;YAACS,OAAO,EAAExB,mBAAoB;YAAAgB,QAAA,EAAC;UAElE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CACT;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eACN1E,OAAA,CAACvB,KAAK;UAAC4F,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC7BtE,OAAA,CAACpB,SAAS;YAAA0F,QAAA,eACRtE,OAAA,CAACnB,QAAQ;cAAAyF,QAAA,gBACPtE,OAAA,CAACrB,SAAS;gBAAC0F,SAAS,EAAC,cAAc;gBAAAC,QAAA,EAAC;cAAU;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAW,CAAC,eAC1D1E,OAAA,CAACrB,SAAS;gBAAC0F,SAAS,EAAC,cAAc;gBAAAC,QAAA,EAAC;cAAG;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAW,CAAC,eACnD1E,OAAA,CAACrB,SAAS;gBAAC0F,SAAS,EAAC,cAAc;gBAAAC,QAAA,EAAC;cAAO;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAW,CAAC,eACvD1E,OAAA,CAACrB,SAAS;gBAAC0F,SAAS,EAAC,cAAc;gBAAAC,QAAA,EAAC;cAAI;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAW,CAAC,EACnDvE,IAAI,IAAIA,IAAI,CAAC2B,OAAO,iBAAI9B,OAAA,CAACrB,SAAS;gBAAC0F,SAAS,EAAC,cAAc;gBAAAC,QAAA,EAAC;cAAO;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAW,CAAC,EAC/EvE,IAAI,IAAI,CAACA,IAAI,CAAC2B,OAAO,iBAAI9B,OAAA,CAACrB,SAAS;gBAAC0F,SAAS,EAAC,cAAc;gBAAAC,QAAA,EAAC;cAAM;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAW,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACZ1E,OAAA,CAACtB,SAAS;YAAA4F,QAAA,EACPlE,QAAQ,CAAC2E,KAAK,CAACrE,IAAI,GAAGE,WAAW,EAAEF,IAAI,GAAGE,WAAW,GAAGA,WAAW,CAAC,CAACsD,GAAG,CAAEd,OAAO,iBAChFpD,OAAA,CAACnB,QAAQ;cAAAyF,QAAA,gBACPtE,OAAA,CAACrB,SAAS;gBAAA2F,QAAA,EAAElB,OAAO,CAAC5B;cAAU;gBAAA+C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eAC3C1E,OAAA,CAACrB,SAAS;gBAAA2F,QAAA,EAAElB,OAAO,CAAC3B;cAAG;gBAAA8C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACpC1E,OAAA,CAACrB,SAAS;gBAAA2F,QAAA,EAAElB,OAAO,CAAC1B;cAAO;gBAAA6C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACxC1E,OAAA,CAACrB,SAAS;gBAAA2F,QAAA,EAAElB,OAAO,CAACzB;cAAI;gBAAA4C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,EACpCvE,IAAI,IAAIA,IAAI,CAAC2B,OAAO,iBAAI9B,OAAA,CAACrB,SAAS;gBAAA2F,QAAA,EAAElB,OAAO,CAAC4B;cAAW;gBAAAT,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,EACpEvE,IAAI,IAAI,CAACA,IAAI,CAAC2B,OAAO,iBACpB9B,OAAA,CAACrB,SAAS;gBAAA2F,QAAA,gBACRtE,OAAA,CAACf,UAAU;kBAAC6F,OAAO,EAAEA,CAAA,KAAMrB,oBAAoB,CAACL,OAAO,CAAE;kBAAC6B,KAAK,EAAC,SAAS;kBAAAX,QAAA,eACvEtE,OAAA,CAACL,QAAQ;oBAAA4E,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACF,CAAC,eACb1E,OAAA,CAACf,UAAU;kBAAC6F,OAAO,EAAEA,CAAA,KAAMX,sBAAsB,CAACf,OAAO,CAAE;kBAAC6B,KAAK,EAAC,WAAW;kBAAAX,QAAA,eAC3EtE,OAAA,CAACP,UAAU;oBAAA8E,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACJ,CACZ;YAAA,GAfYtB,OAAO,CAACH,IAAI;cAAAsB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAgBjB,CACX;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC,eACR1E,OAAA,CAAChB,eAAe;UACdkG,kBAAkB,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAE;UACjCP,SAAS,EAAC,KAAK;UACfQ,KAAK,EAAE/E,QAAQ,CAACgF,MAAO;UACvBxE,WAAW,EAAEA,WAAY;UACzBF,IAAI,EAAEA,IAAK;UACX2E,YAAY,EAAE5C,gBAAiB;UAC/B6C,mBAAmB,EAAE1C,uBAAwB;UAC7CyB,SAAS,EAAC;QAAY;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,EACLvE,IAAI,iBACHH,OAAA,CAACH,gBAAgB;MAAC0F,IAAI,EAAEzE,aAAc;MAAC0E,OAAO,EAAEjC,oBAAqB;MAACkC,cAAc,EAAEjC;IAAmB;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC5G,eACD1E,OAAA,CAACd,MAAM;MAACqG,IAAI,EAAErE,cAAe;MAACsE,OAAO,EAAE9B,qBAAsB;MAAAY,QAAA,gBAC3DtE,OAAA,CAACV,WAAW;QAAAgF,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eAC5C1E,OAAA,CAACZ,aAAa;QAAAkF,QAAA,gBACZtE,OAAA,CAACX,iBAAiB;UAAAiF,QAAA,GAAC,wCACqB,EAAClD,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEI,UAAU,EAAC,GACrE;QAAA;UAAA+C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAmB,CAAC,eACpB1E,OAAA,CAACT,SAAS;UACRmG,MAAM,EAAC,OAAO;UACd3D,IAAI,EAAC,YAAY;UACjB4D,KAAK,EAAC,YAAY;UAClBC,IAAI,EAAC,MAAM;UACXC,SAAS;UACT9C,KAAK,EAAEzB,aAAa,CAACE,UAAW;UAChCsE,QAAQ,EAAEnC;QAAiB;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC,eACF1E,OAAA,CAACT,SAAS;UACRmG,MAAM,EAAC,OAAO;UACd3D,IAAI,EAAC,KAAK;UACV4D,KAAK,EAAC,QAAK;UACXC,IAAI,EAAC,QAAQ;UACbC,SAAS;UACT9C,KAAK,EAAEzB,aAAa,CAACG,GAAI;UACzBqE,QAAQ,EAAEnC;QAAiB;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC,eACF1E,OAAA,CAACT,SAAS;UACRmG,MAAM,EAAC,OAAO;UACd3D,IAAI,EAAC,SAAS;UACd4D,KAAK,EAAC,SAAS;UACfC,IAAI,EAAC,QAAQ;UACbC,SAAS;UACT9C,KAAK,EAAEzB,aAAa,CAACI,OAAQ;UAC7BoE,QAAQ,EAAEnC;QAAiB;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC,eACF1E,OAAA,CAACT,SAAS;UACRmG,MAAM,EAAC,OAAO;UACd3D,IAAI,EAAC,MAAM;UACX4D,KAAK,EAAC,MAAM;UACZC,IAAI,EAAC,QAAQ;UACbC,SAAS;UACT9C,KAAK,EAAEzB,aAAa,CAACK,IAAK;UAC1BmE,QAAQ,EAAEnC;QAAiB;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACW,CAAC,eAChB1E,OAAA,CAACb,aAAa;QAAAmF,QAAA,gBACZtE,OAAA,CAACjB,MAAM;UAAC+F,OAAO,EAAEpB,qBAAsB;UAACuB,KAAK,EAAC,SAAS;UAAAX,QAAA,EAAC;QAExD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT1E,OAAA,CAACjB,MAAM;UAAC+F,OAAO,EAAEjB,gBAAiB;UAACoB,KAAK,EAAC,SAAS;UAAAX,QAAA,EAAC;QAEnD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eACT1E,OAAA,CAACd,MAAM;MAACqG,IAAI,EAAEvE,gBAAiB;MAACwE,OAAO,EAAEpB,uBAAwB;MAAAE,QAAA,gBAC/DtE,OAAA,CAACV,WAAW;QAAAgF,QAAA,EAAC;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eAChD1E,OAAA,CAACZ,aAAa;QAAAkF,QAAA,eACZtE,OAAA,CAACX,iBAAiB;UAAAiF,QAAA,GAAC,4CACyB,EAAClD,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEI,UAAU,EAAC,GACzE;QAAA;UAAA+C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAmB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC,eAChB1E,OAAA,CAACb,aAAa;QAAAmF,QAAA,gBACZtE,OAAA,CAACjB,MAAM;UAAC+F,OAAO,EAAEV,uBAAwB;UAACa,KAAK,EAAC,SAAS;UAAAX,QAAA,EAAC;QAE1D;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT1E,OAAA,CAACjB,MAAM;UACL+F,OAAO,EAAEA,CAAA,KAAM9B,YAAY,CAAC5B,eAAe,CAAC6B,IAAI,CAAE;UAClDgC,KAAK,EAAC,SAAS;UACfc,SAAS;UAAAzB,QAAA,EACV;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACxE,EAAA,CA1TQD,WAAW;EAAA,QACDL,OAAO;AAAA;AAAAoG,EAAA,GADjB/F,WAAW;AA4TpB,eAAeA,WAAW;AAAC,IAAA+F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}