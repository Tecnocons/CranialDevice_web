{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\morga\\\\Desktop\\\\CranialDevice_web\\\\CranialDevice_web\\\\frontend\\\\src\\\\pages\\\\login\\\\LoginRegister.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Container, TextField, Button, Card, CardContent, Typography, CircularProgress, InputAdornment } from '@mui/material';\nimport { styled } from '@mui/system';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport LockIcon from '@mui/icons-material/Lock';\nimport { useAuth } from '../../contexts/AuthContext';\nimport backgroundImage from '../../assets/background.png'; // Importa l'immagine\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst orangeColor = '#EB873F'; // Colore arancione estratto dall'immagine di sfondo\nconst darkOrangeColor = '#CF6F2E'; // Colore arancione piÃ¹ scuro per l'effetto hover del pulsante\n\n// Aggiungi questo stile globale per impedire lo scorrimento della pagina\nconst GlobalStyle = styled('div')`\n  body {\n    overflow: hidden;\n  }\n`;\n_c = GlobalStyle;\nconst Root = styled('div')({\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  height: '100vh',\n  width: '100vw',\n  backgroundImage: `url(${backgroundImage})`,\n  backgroundSize: 'cover',\n  backgroundPosition: 'center',\n  padding: '20px',\n  overflow: 'hidden',\n  boxSizing: 'border-box',\n  '@media (max-width: 600px)': {\n    padding: '10px'\n  }\n});\nconst StyledCard = styled(Card)({\n  maxWidth: 360,\n  width: '100%',\n  padding: 32,\n  margin: 16,\n  backgroundColor: 'rgba(255, 255, 255, 0.9)',\n  borderRadius: 16,\n  // Rounded corners\n  boxShadow: '0 8px 16px rgba(0,0,0,0.1)',\n  // Subtle shadow\n  '@media (max-width: 600px)': {\n    maxWidth: '100%',\n    padding: 16\n  }\n});\nconst Form = styled('form')({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: 16\n});\nconst StyledButton = styled(Button)({\n  marginTop: 16,\n  backgroundColor: orangeColor,\n  color: '#fff',\n  // White text color for contrast\n  borderRadius: 8,\n  // Rounded corners\n  padding: '12px 0',\n  fontSize: '16px',\n  fontWeight: 'bold',\n  '&:hover': {\n    backgroundColor: darkOrangeColor\n  },\n  transition: 'background-color 0.3s ease' // Smooth transition\n});\nconst StyledTextField = styled(TextField)({\n  '& .MuiOutlinedInput-root': {\n    borderRadius: 8,\n    // Rounded corners\n    '&:hover fieldset': {\n      borderColor: orangeColor,\n      borderWidth: 2\n    },\n    '&.Mui-focused fieldset': {\n      borderColor: darkOrangeColor,\n      borderWidth: 2\n    }\n  }\n});\nconst Title = styled(Typography)({\n  fontFamily: 'Roboto, sans-serif',\n  fontWeight: 700,\n  marginBottom: 24,\n  // Increased margin for better spacing\n  textAlign: 'center',\n  fontSize: '28px' // Increased font size\n});\nconst OrangeSection = styled('div')({\n  width: '40%',\n  height: '100%',\n  backgroundColor: '#EB873F',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  '@media (max-width: 600px)': {\n    width: '100%',\n    height: '50%'\n  }\n});\nfunction LoginRegister() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    setUser\n  } = useAuth();\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [isFirstUser, setIsFirstUser] = useState(null);\n  useEffect(() => {\n    const checkFirstUser = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/check-admin');\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setIsFirstUser(data.isFirstUser);\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n    checkFirstUser();\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const url = isFirstUser ? 'http://localhost:5000/api/register' : 'http://localhost:5000/api/login';\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        password\n      }),\n      credentials: 'include' // Includi le credenziali\n    });\n    const data = await response.json();\n    setMessage(data.message);\n    if (response.ok) {\n      setUser({\n        name: data.name,\n        isAdmin: data.isAdmin\n      });\n      navigate(`/main?admin=${data.isAdmin}`);\n    }\n  };\n  if (isFirstUser === null) {\n    return /*#__PURE__*/_jsxDEV(Root, {\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Root, {\n      children: /*#__PURE__*/_jsxDEV(OrangeSection, {\n        children: /*#__PURE__*/_jsxDEV(StyledCard, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Title, {\n              variant: \"h4\",\n              component: \"h2\",\n              gutterBottom: true,\n              children: \"Accedi / Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(StyledTextField, {\n                label: \"Name\",\n                variant: \"outlined\",\n                value: name,\n                onChange: e => setName(e.target.value),\n                required: true,\n                InputProps: {\n                  startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                    position: \"start\",\n                    children: /*#__PURE__*/_jsxDEV(AccountCircle, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 179,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 23\n                  }, this)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(StyledTextField, {\n                label: \"Password\",\n                type: \"password\",\n                variant: \"outlined\",\n                value: password,\n                onChange: e => setPassword(e.target.value),\n                required: true,\n                InputProps: {\n                  startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                    position: \"start\",\n                    children: /*#__PURE__*/_jsxDEV(LockIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 194,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 23\n                  }, this)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(StyledButton, {\n                type: \"submit\",\n                variant: \"contained\",\n                color: \"primary\",\n                children: isFirstUser ? 'Register' : 'Accedi'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this), message && /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"error\",\n              children: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(LoginRegister, \"eHYCKRYPd6kkbotCB88ccCJyqoc=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c2 = LoginRegister;\nexport default LoginRegister;\nvar _c, _c2;\n$RefreshReg$(_c, \"GlobalStyle\");\n$RefreshReg$(_c2, \"LoginRegister\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Container","TextField","Button","Card","CardContent","Typography","CircularProgress","InputAdornment","styled","AccountCircle","LockIcon","useAuth","backgroundImage","jsxDEV","_jsxDEV","Fragment","_Fragment","orangeColor","darkOrangeColor","GlobalStyle","_c","Root","display","justifyContent","alignItems","height","width","backgroundSize","backgroundPosition","padding","overflow","boxSizing","StyledCard","maxWidth","margin","backgroundColor","borderRadius","boxShadow","Form","flexDirection","gap","StyledButton","marginTop","color","fontSize","fontWeight","transition","StyledTextField","borderColor","borderWidth","Title","fontFamily","marginBottom","textAlign","OrangeSection","LoginRegister","_s","navigate","setUser","name","setName","password","setPassword","message","setMessage","isFirstUser","setIsFirstUser","checkFirstUser","response","fetch","ok","Error","data","json","error","console","handleSubmit","e","preventDefault","url","method","headers","body","JSON","stringify","credentials","isAdmin","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","component","gutterBottom","onSubmit","label","value","onChange","target","required","InputProps","startAdornment","position","type","_c2","$RefreshReg$"],"sources":["C:/Users/morga/Desktop/CranialDevice_web/CranialDevice_web/frontend/src/pages/login/LoginRegister.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Container, TextField, Button, Card, CardContent, Typography, CircularProgress, InputAdornment } from '@mui/material';\nimport { styled } from '@mui/system';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport LockIcon from '@mui/icons-material/Lock';\nimport { useAuth } from '../../contexts/AuthContext';\nimport backgroundImage from '../../assets/background.png';  // Importa l'immagine\n\nconst orangeColor = '#EB873F';  // Colore arancione estratto dall'immagine di sfondo\nconst darkOrangeColor = '#CF6F2E';  // Colore arancione piÃ¹ scuro per l'effetto hover del pulsante\n\n// Aggiungi questo stile globale per impedire lo scorrimento della pagina\nconst GlobalStyle = styled('div')`\n  body {\n    overflow: hidden;\n  }\n`;\n\nconst Root = styled('div')({\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  height: '100vh',\n  width: '100vw',\n  backgroundImage: `url(${backgroundImage})`,\n  backgroundSize: 'cover',\n  backgroundPosition: 'center',\n  padding: '20px',\n  overflow: 'hidden',\n  boxSizing: 'border-box',\n  '@media (max-width: 600px)': {\n    padding: '10px',\n  },\n});\n\nconst StyledCard = styled(Card)({\n  maxWidth: 360,\n  width: '100%',\n  padding: 32,\n  margin: 16,\n  backgroundColor: 'rgba(255, 255, 255, 0.9)',\n  borderRadius: 16,  // Rounded corners\n  boxShadow: '0 8px 16px rgba(0,0,0,0.1)',  // Subtle shadow\n  '@media (max-width: 600px)': {\n    maxWidth: '100%',\n    padding: 16,\n  },\n});\n\nconst Form = styled('form')({\n  display: 'flex',\n  flexDirection: 'column',\n  gap: 16,\n});\n\nconst StyledButton = styled(Button)({\n  marginTop: 16,\n  backgroundColor: orangeColor,\n  color: '#fff',  // White text color for contrast\n  borderRadius: 8,  // Rounded corners\n  padding: '12px 0',\n  fontSize: '16px',\n  fontWeight: 'bold',\n  '&:hover': {\n    backgroundColor: darkOrangeColor,\n  },\n  transition: 'background-color 0.3s ease',  // Smooth transition\n});\n\nconst StyledTextField = styled(TextField)({\n  '& .MuiOutlinedInput-root': {\n    borderRadius: 8,  // Rounded corners\n    '&:hover fieldset': {\n      borderColor: orangeColor,\n      borderWidth: 2,\n    },\n    '&.Mui-focused fieldset': {\n      borderColor: darkOrangeColor,\n      borderWidth: 2,\n    },\n  },\n});\n\nconst Title = styled(Typography)({\n  fontFamily: 'Roboto, sans-serif',\n  fontWeight: 700,\n  marginBottom: 24,  // Increased margin for better spacing\n  textAlign: 'center',\n  fontSize: '28px',  // Increased font size\n});\n\nconst OrangeSection = styled('div')({\n  width: '40%',\n  height: '100%',\n  backgroundColor: '#EB873F',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  '@media (max-width: 600px)': {\n    width: '100%',\n    height: '50%',\n  },\n});\n\nfunction LoginRegister() {\n  const navigate = useNavigate();\n  const { setUser } = useAuth();\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [isFirstUser, setIsFirstUser] = useState(null);\n\n  useEffect(() => {\n    const checkFirstUser = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/check-admin');\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setIsFirstUser(data.isFirstUser);\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n    checkFirstUser();\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const url = isFirstUser ? 'http://localhost:5000/api/register' : 'http://localhost:5000/api/login';\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ name, password }),\n      credentials: 'include'  // Includi le credenziali\n    });\n\n    const data = await response.json();\n    setMessage(data.message);\n\n    if (response.ok) {\n      setUser({ name: data.name, isAdmin: data.isAdmin });\n      navigate(`/main?admin=${data.isAdmin}`);\n    }\n  };\n\n  if (isFirstUser === null) {\n    return (\n      <Root>\n        <CircularProgress />\n      </Root>\n    );\n  }\n\n  return (\n    <>\n      <GlobalStyle />\n      <Root>\n        <OrangeSection>\n          <StyledCard>\n            <CardContent>\n              <Title variant=\"h4\" component=\"h2\" gutterBottom>\n                Accedi / Login\n              </Title>\n              <Form onSubmit={handleSubmit}>\n                <StyledTextField\n                  label=\"Name\"\n                  variant=\"outlined\"\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n                  required\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <AccountCircle />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n                <StyledTextField\n                  label=\"Password\"\n                  type=\"password\"\n                  variant=\"outlined\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  required\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <LockIcon />\n                      </InputAdornment>\n                    ),\n                  }}\n                />\n                <StyledButton type=\"submit\" variant=\"contained\" color=\"primary\">\n                  {isFirstUser ? 'Register' : 'Accedi'}\n                </StyledButton>\n              </Form>\n              {message && <Typography color=\"error\">{message}</Typography>}\n            </CardContent>\n          </StyledCard>\n        </OrangeSection>\n      </Root>\n    </>\n  );\n}\n\nexport default LoginRegister;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}