{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\morga\\\\Desktop\\\\CranialDevice_web\\\\CranialDevice_web\\\\frontend\\\\src\\\\pages\\\\patients\\\\PatientList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Container, Typography, Table, TableBody, TableCell, TableHead, TableRow, Paper, IconButton, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Button, Box, Link, TablePagination, TextField, Collapse, Grid } from '@mui/material';\nimport { styled } from '@mui/system';\nimport { useNavigate } from 'react-router-dom';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddIcon from '@mui/icons-material/Add';\nimport CloseIcon from '@mui/icons-material/Close';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ExpandLessIcon from '@mui/icons-material/ExpandLess';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { ClipLoader } from 'react-spinners';\nimport AddPatientDialog from './AddPatientDialog';\nimport EditPatientDialog from './EditPatientDialog';\nimport BackgroundWrapper from '../../components/BackgroundWrapper'; // Importa BackgroundWrapper\nimport './PatientList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Root = styled('div')({\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  height: '100vh',\n  backgroundColor: '#f5f5f5',\n  // Cambiato il background del Root\n  opacity: 0.9,\n  padding: '20px'\n});\nconst StyledTable = styled(Table)({\n  minWidth: 650,\n  backgroundColor: '#ffffff',\n  // Cambiato il background della tabella\n  '& .MuiTableCell-head': {\n    backgroundColor: '#e0e0e0',\n    fontWeight: 'bold',\n    fontSize: 21\n  },\n  '& .MuiTableCell-body': {\n    fontSize: 16\n  },\n  '& .MuiTableRow-root:last-child .MuiTableCell-root': {\n    borderBottom: '2px solid #155677'\n  }\n});\nconst Header = styled('div')({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  width: '100%',\n  marginBottom: 16\n});\nconst AddButton = styled(Button)({\n  backgroundColor: '#155677',\n  color: '#fff',\n  '&:hover': {\n    backgroundColor: '#0d3e4f'\n  }\n});\nconst FilterBox = styled(Box)({\n  width: '20%',\n  minHeight: '300px',\n  // Altezza minima\n  maxHeight: '300px',\n  // Altezza massima\n  padding: '10px',\n  borderRadius: '18px',\n  backgroundColor: '#f9f9f9',\n  // Cambiato il background del FilterBox\n  opacity: 0.95,\n  // Meno opaco\n  marginRight: '2%',\n  marginLeft: '1%',\n  boxShadow: '0 0 10px rgba(21, 86, 119, 0.5)' // Ridotta l'ombra\n});\nconst FilterHeader = styled('div')({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  marginBottom: '18px'\n});\nconst PatientListContainer = styled(Container)({\n  width: '65%',\n  display: 'flex',\n  flexDirection: 'column',\n  marginLeft: 'auto',\n  // Centra la tabella\n  marginRight: 'auto' // Centra la tabella\n});\nfunction PatientList() {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const navigate = useNavigate();\n  const [patients, setPatients] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [addDialogOpen, setAddDialogOpen] = useState(false);\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n  const [selectedPatient, setSelectedPatient] = useState(null);\n  const [selectedPatients, setSelectedPatients] = useState([]);\n  const [nameFilter, setNameFilter] = useState('');\n  const [ageRange, setAgeRange] = useState({\n    min: '',\n    max: ''\n  });\n  const [weightRange, setWeightRange] = useState({\n    min: '',\n    max: ''\n  });\n  const [heightRange, setHeightRange] = useState({\n    min: '',\n    max: ''\n  });\n  const [filtersOpen, setFiltersOpen] = useState(false);\n  useEffect(() => {\n    const fetchPatients = async () => {\n      if (!user) return;\n      try {\n        const endpoint = user.isAdmin ? '/api/patients' : `/api/patients/assigned?doctor_name=${user.name}`;\n        const response = await fetch(`http://localhost:5000${endpoint}`, {\n          method: 'GET',\n          credentials: 'include'\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setPatients(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPatients();\n  }, [user]);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  const handleDelete = async uuids => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/patients/bulk_delete`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          uuids\n        })\n      });\n      if (!response.ok) {\n        const errorMessage = await response.json();\n        throw new Error(errorMessage.message);\n      }\n      setPatients(prevPatients => prevPatients.filter(patient => !uuids.includes(patient.uuid)));\n      setDeleteDialogOpen(false);\n      setSelectedPatients([]);\n      setSelectedPatient(null);\n    } catch (error) {\n      console.error('Error deleting patient:', error.message);\n    }\n  };\n  const handleAddDialogOpen = () => {\n    setAddDialogOpen(true);\n  };\n  const handleAddDialogClose = () => {\n    setAddDialogOpen(false);\n  };\n  const handlePatientAdded = () => {\n    setAddDialogOpen(false);\n    const fetchPatients = async () => {\n      try {\n        const endpoint = user.isAdmin ? '/api/patients' : `/api/patients/assigned?doctor_name=${user.name}`;\n        const response = await fetch(`http://localhost:5000${endpoint}`, {\n          method: 'GET',\n          credentials: 'include'\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setPatients(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPatients();\n  };\n  const handleEditDialogOpen = patient => {\n    setSelectedPatient(patient);\n    setEditDialogOpen(true);\n  };\n  const handleEditDialogClose = () => {\n    setEditDialogOpen(false);\n    setSelectedPatient(null);\n  };\n  const handleEditSubmit = async updatedPatient => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/patients`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify(updatedPatient)\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      setPatients(prevPatients => prevPatients.map(patient => patient.uuid === updatedPatient.uuid ? {\n        ...patient,\n        ...updatedPatient\n      } : patient));\n      setEditDialogOpen(false);\n      setSelectedPatient(null);\n    } catch (error) {\n      console.error('Error updating patient:', error.message);\n    }\n  };\n  const handleDeleteDialogOpen = patient => {\n    setSelectedPatient(patient);\n    setDeleteDialogOpen(true);\n  };\n  const handleDeleteDialogClose = () => {\n    setDeleteDialogOpen(false);\n    setSelectedPatient(null);\n  };\n  const handleSelectPatient = uuid => {\n    if (selectedPatients.includes(uuid)) {\n      setSelectedPatients(selectedPatients.filter(id => id !== uuid));\n    } else {\n      setSelectedPatients([...selectedPatients, uuid]);\n    }\n  };\n  const isSelected = uuid => selectedPatients.includes(uuid);\n  const handleSelectAllPatients = event => {\n    if (event.target.checked) {\n      const newSelecteds = patients.map(patient => patient.uuid);\n      setSelectedPatients(newSelecteds);\n    } else {\n      setSelectedPatients([]);\n    }\n  };\n  const isAllSelected = selectedPatients.length === patients.length;\n  const handleMultipleDelete = () => {\n    setDeleteDialogOpen(true);\n    setSelectedPatient(null);\n  };\n  const handlePatientInfoOpen = patient => {\n    navigate(`/patients/${patient.uuid}`);\n  };\n  const handleFilterChange = e => {\n    setNameFilter(e.target.value);\n  };\n  const handleRangeChange = (e, rangeType) => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (rangeType === 'age') {\n      setAgeRange(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    } else if (rangeType === 'weight') {\n      setWeightRange(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    } else if (rangeType === 'height') {\n      setHeightRange(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n  };\n  const filteredPatients = patients.filter(patient => {\n    const matchesName = patient.nominativo.toLowerCase().includes(nameFilter.toLowerCase());\n    const matchesAge = (ageRange.min === '' || patient.eta >= ageRange.min) && (ageRange.max === '' || patient.eta <= ageRange.max);\n    const matchesWeight = (weightRange.min === '' || patient.peso >= weightRange.min) && (weightRange.max === '' || patient.peso <= weightRange.max);\n    const matchesHeight = (heightRange.min === '' || patient.altezza >= heightRange.min) && (heightRange.max === '' || patient.altezza <= heightRange.max);\n    return matchesName && matchesAge && matchesWeight && matchesHeight;\n  });\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Root, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(ClipLoader, {\n          size: 50,\n          color: \"#123abc\",\n          loading: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          style: {\n            marginTop: '20px'\n          },\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Root, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"error\",\n          children: [\"Error: \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => window.location.reload(),\n          children: \"Retry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(BackgroundWrapper, {\n    children: /*#__PURE__*/_jsxDEV(Root, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        width: \"100%\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          height: \"20px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            width: \"15px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FilterBox, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              component: \"h2\",\n              children: \"Filtri\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Nome\",\n              value: nameFilter,\n              onChange: handleFilterChange,\n              fullWidth: true,\n              margin: \"normal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FilterHeader, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                children: \"Altri Filtri\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => setFiltersOpen(!filtersOpen),\n                children: filtersOpen ? /*#__PURE__*/_jsxDEV(ExpandLessIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 34\n                }, this) : /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 55\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n              in: filtersOpen,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Et\\xE0 Minima\",\n                    name: \"min\",\n                    value: ageRange.min,\n                    onChange: e => handleRangeChange(e, 'age'),\n                    fullWidth: true,\n                    margin: \"normal\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 372,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 371,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Et\\xE0 Massima\",\n                    name: \"max\",\n                    value: ageRange.max,\n                    onChange: e => handleRangeChange(e, 'age'),\n                    fullWidth: true,\n                    margin: \"normal\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 382,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 381,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Peso Minimo\",\n                    name: \"min\",\n                    value: weightRange.min,\n                    onChange: e => handleRangeChange(e, 'weight'),\n                    fullWidth: true,\n                    margin: \"normal\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 392,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Peso Massimo\",\n                    name: \"max\",\n                    value: weightRange.max,\n                    onChange: e => handleRangeChange(e, 'weight'),\n                    fullWidth: true,\n                    margin: \"normal\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 402,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 401,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Altezza Minima\",\n                    name: \"min\",\n                    value: heightRange.min,\n                    onChange: e => handleRangeChange(e, 'height'),\n                    fullWidth: true,\n                    margin: \"normal\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 412,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 411,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 6,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    label: \"Altezza Massima\",\n                    name: \"max\",\n                    value: heightRange.max,\n                    onChange: e => handleRangeChange(e, 'height'),\n                    fullWidth: true,\n                    margin: \"normal\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 422,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            width: \"2%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PatientListContainer, {\n            component: Paper,\n            className: \"table-container\",\n            children: [/*#__PURE__*/_jsxDEV(Header, {\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => navigate('/main'),\n                children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 438,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 437,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h4\",\n                component: \"h1\",\n                gutterBottom: true,\n                children: \"Lista Pazienti\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 17\n              }, this), user && /*#__PURE__*/_jsxDEV(AddButton, {\n                variant: \"contained\",\n                color: \"primary\",\n                startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 447,\n                  columnNumber: 32\n                }, this),\n                onClick: handleAddDialogOpen,\n                children: \"Aggiungi Paziente\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 444,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(StyledTable, {\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Nominativo\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 457,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Et\\xE0\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 458,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Altezza\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 459,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Peso\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 460,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Dottore\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 461,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: \"Actions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 462,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 456,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: filteredPatients.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(patient => /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: /*#__PURE__*/_jsxDEV(Link, {\n                      component: \"button\",\n                      onClick: () => handlePatientInfoOpen(patient),\n                      children: patient.nominativo\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 469,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 468,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: patient.eta\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 473,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: patient.altezza\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 474,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: patient.peso\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 475,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: patient.doctor_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 476,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                      onClick: () => handleEditDialogOpen(patient),\n                      children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 479,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 478,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                      onClick: () => handleDeleteDialogOpen(patient),\n                      children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 482,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 481,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 477,\n                    columnNumber: 23\n                  }, this)]\n                }, patient.uuid, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 467,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n              rowsPerPageOptions: [5, 10],\n              component: \"div\",\n              count: filteredPatients.length,\n              rowsPerPage: rowsPerPage,\n              page: page,\n              onPageChange: handleChangePage,\n              onRowsPerPageChange: handleChangeRowsPerPage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            width: \"15px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPatientDialog, {\n        open: addDialogOpen,\n        onClose: handleAddDialogClose,\n        onPatientAdded: handlePatientAdded\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 9\n      }, this), selectedPatient && /*#__PURE__*/_jsxDEV(EditPatientDialog, {\n        open: editDialogOpen,\n        onClose: handleEditDialogClose,\n        onEditSubmit: handleEditSubmit,\n        patient: selectedPatient\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: deleteDialogOpen,\n        onClose: handleDeleteDialogClose,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Conferma Eliminazione\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n            children: selectedPatient ? `Sei sicuro di voler eliminare il paziente ${selectedPatient.nominativo}?` : 'Sei sicuro di voler eliminare i pazienti selezionati?'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleDeleteDialogClose,\n            color: \"primary\",\n            children: \"Annulla\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleDelete(selectedPatient ? [selectedPatient.uuid] : selectedPatients),\n            color: \"primary\",\n            children: \"Elimina\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 348,\n    columnNumber: 5\n  }, this);\n}\n_s(PatientList, \"xLXRABO4Y7YiuLRdPd4uCmX8oKU=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = PatientList;\nexport default PatientList;\nvar _c;\n$RefreshReg$(_c, \"PatientList\");","map":{"version":3,"names":["React","useEffect","useState","Container","Typography","Table","TableBody","TableCell","TableHead","TableRow","Paper","IconButton","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Button","Box","Link","TablePagination","TextField","Collapse","Grid","styled","useNavigate","EditIcon","DeleteIcon","AddIcon","CloseIcon","ExpandMoreIcon","ExpandLessIcon","useAuth","ClipLoader","AddPatientDialog","EditPatientDialog","BackgroundWrapper","jsxDEV","_jsxDEV","Root","display","flexDirection","justifyContent","alignItems","height","backgroundColor","opacity","padding","StyledTable","minWidth","fontWeight","fontSize","borderBottom","Header","width","marginBottom","AddButton","color","FilterBox","minHeight","maxHeight","borderRadius","marginRight","marginLeft","boxShadow","FilterHeader","PatientListContainer","PatientList","_s","user","navigate","patients","setPatients","loading","setLoading","error","setError","page","setPage","rowsPerPage","setRowsPerPage","addDialogOpen","setAddDialogOpen","deleteDialogOpen","setDeleteDialogOpen","editDialogOpen","setEditDialogOpen","selectedPatient","setSelectedPatient","selectedPatients","setSelectedPatients","nameFilter","setNameFilter","ageRange","setAgeRange","min","max","weightRange","setWeightRange","heightRange","setHeightRange","filtersOpen","setFiltersOpen","fetchPatients","endpoint","isAdmin","name","response","fetch","method","credentials","ok","Error","data","json","message","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","handleDelete","uuids","headers","body","JSON","stringify","errorMessage","prevPatients","filter","patient","includes","uuid","console","handleAddDialogOpen","handleAddDialogClose","handlePatientAdded","handleEditDialogOpen","handleEditDialogClose","handleEditSubmit","updatedPatient","map","handleDeleteDialogOpen","handleDeleteDialogClose","handleSelectPatient","id","isSelected","handleSelectAllPatients","checked","newSelecteds","isAllSelected","length","handleMultipleDelete","handlePatientInfoOpen","handleFilterChange","e","handleRangeChange","rangeType","prev","filteredPatients","matchesName","nominativo","toLowerCase","matchesAge","eta","matchesWeight","peso","matchesHeight","altezza","children","size","fileName","_jsxFileName","lineNumber","columnNumber","variant","style","marginTop","onClick","window","location","reload","component","label","onChange","fullWidth","margin","in","container","spacing","item","xs","className","gutterBottom","startIcon","slice","doctor_name","rowsPerPageOptions","count","onPageChange","onRowsPerPageChange","open","onClose","onPatientAdded","onEditSubmit","_c","$RefreshReg$"],"sources":["C:/Users/morga/Desktop/CranialDevice_web/CranialDevice_web/frontend/src/pages/patients/PatientList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  Container,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Paper,\n  IconButton,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Button,\n  Box,\n  Link,\n  TablePagination,\n  TextField,\n  Collapse,\n  Grid,\n} from '@mui/material';\nimport { styled } from '@mui/system';\nimport { useNavigate } from 'react-router-dom';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddIcon from '@mui/icons-material/Add';\nimport CloseIcon from '@mui/icons-material/Close';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport ExpandLessIcon from '@mui/icons-material/ExpandLess';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { ClipLoader } from 'react-spinners';\nimport AddPatientDialog from './AddPatientDialog';\nimport EditPatientDialog from './EditPatientDialog';\nimport BackgroundWrapper from '../../components/BackgroundWrapper'; // Importa BackgroundWrapper\nimport './PatientList.css';\n\nconst Root = styled('div')({\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  height: '100vh',\n  backgroundColor: '#f5f5f5', // Cambiato il background del Root\n  opacity: 0.9,\n  padding: '20px',\n});\n\nconst StyledTable = styled(Table)({\n  minWidth: 650,\n  backgroundColor: '#ffffff', // Cambiato il background della tabella\n  '& .MuiTableCell-head': {\n    backgroundColor: '#e0e0e0',\n    fontWeight: 'bold',\n    fontSize: 21,\n  },\n  '& .MuiTableCell-body': {\n    fontSize: 16,\n  },\n  '& .MuiTableRow-root:last-child .MuiTableCell-root': {\n    borderBottom: '2px solid #155677',\n  },\n});\n\nconst Header = styled('div')({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  width: '100%',\n  marginBottom: 16,\n});\n\nconst AddButton = styled(Button)({\n  backgroundColor: '#155677',\n  color: '#fff',\n  '&:hover': {\n    backgroundColor: '#0d3e4f',\n  },\n});\n\nconst FilterBox = styled(Box)({\n  width: '20%',\n  minHeight: '300px',  // Altezza minima\n  maxHeight: '300px',  // Altezza massima\n  padding: '10px',\n  borderRadius: '18px',\n  backgroundColor: '#f9f9f9', // Cambiato il background del FilterBox\n  opacity: 0.95, // Meno opaco\n  marginRight: '2%',\n  marginLeft: '1%',\n  boxShadow: '0 0 10px rgba(21, 86, 119, 0.5)', // Ridotta l'ombra\n});\n\nconst FilterHeader = styled('div')({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  marginBottom: '18px',\n});\n\nconst PatientListContainer = styled(Container)({\n  width: '65%',\n  display: 'flex',\n  flexDirection: 'column',\n  marginLeft: 'auto', // Centra la tabella\n  marginRight: 'auto', // Centra la tabella\n});\n\nfunction PatientList() {\n  const { user } = useAuth();\n  const navigate = useNavigate();\n  const [patients, setPatients] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [addDialogOpen, setAddDialogOpen] = useState(false);\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n  const [selectedPatient, setSelectedPatient] = useState(null);\n  const [selectedPatients, setSelectedPatients] = useState([]);\n  const [nameFilter, setNameFilter] = useState('');\n  const [ageRange, setAgeRange] = useState({ min: '', max: '' });\n  const [weightRange, setWeightRange] = useState({ min: '', max: '' });\n  const [heightRange, setHeightRange] = useState({ min: '', max: '' });\n  const [filtersOpen, setFiltersOpen] = useState(false);\n\n  useEffect(() => {\n    const fetchPatients = async () => {\n      if (!user) return;\n\n      try {\n        const endpoint = user.isAdmin ? '/api/patients' : `/api/patients/assigned?doctor_name=${user.name}`;\n        const response = await fetch(`http://localhost:5000${endpoint}`, {\n          method: 'GET',\n          credentials: 'include',\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setPatients(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPatients();\n  }, [user]);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleDelete = async (uuids) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/patients/bulk_delete`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        credentials: 'include',\n        body: JSON.stringify({ uuids }),\n      });\n\n      if (!response.ok) {\n        const errorMessage = await response.json();\n        throw new Error(errorMessage.message);\n      }\n\n      setPatients((prevPatients) => prevPatients.filter((patient) => !uuids.includes(patient.uuid)));\n      setDeleteDialogOpen(false);\n      setSelectedPatients([]);\n      setSelectedPatient(null);\n    } catch (error) {\n      console.error('Error deleting patient:', error.message);\n    }\n  };\n\n  const handleAddDialogOpen = () => {\n    setAddDialogOpen(true);\n  };\n\n  const handleAddDialogClose = () => {\n    setAddDialogOpen(false);\n  };\n\n  const handlePatientAdded = () => {\n    setAddDialogOpen(false);\n    const fetchPatients = async () => {\n      try {\n        const endpoint = user.isAdmin ? '/api/patients' : `/api/patients/assigned?doctor_name=${user.name}`;\n        const response = await fetch(`http://localhost:5000${endpoint}`, {\n          method: 'GET',\n          credentials: 'include',\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setPatients(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPatients();\n  };\n\n  const handleEditDialogOpen = (patient) => {\n    setSelectedPatient(patient);\n    setEditDialogOpen(true);\n  };\n\n  const handleEditDialogClose = () => {\n    setEditDialogOpen(false);\n    setSelectedPatient(null);\n  };\n\n  const handleEditSubmit = async (updatedPatient) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/patients`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        credentials: 'include',\n        body: JSON.stringify(updatedPatient),\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      setPatients((prevPatients) =>\n        prevPatients.map((patient) =>\n          patient.uuid === updatedPatient.uuid ? { ...patient, ...updatedPatient } : patient\n        )\n      );\n      setEditDialogOpen(false);\n      setSelectedPatient(null);\n    } catch (error) {\n      console.error('Error updating patient:', error.message);\n    }\n  };\n\n  const handleDeleteDialogOpen = (patient) => {\n    setSelectedPatient(patient);\n    setDeleteDialogOpen(true);\n  };\n\n  const handleDeleteDialogClose = () => {\n    setDeleteDialogOpen(false);\n    setSelectedPatient(null);\n  };\n\n  const handleSelectPatient = (uuid) => {\n    if (selectedPatients.includes(uuid)) {\n      setSelectedPatients(selectedPatients.filter((id) => id !== uuid));\n    } else {\n      setSelectedPatients([...selectedPatients, uuid]);\n    }\n  };\n\n  const isSelected = (uuid) => selectedPatients.includes(uuid);\n\n  const handleSelectAllPatients = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = patients.map((patient) => patient.uuid);\n      setSelectedPatients(newSelecteds);\n    } else {\n      setSelectedPatients([]);\n    }\n  };\n\n  const isAllSelected = selectedPatients.length === patients.length;\n\n  const handleMultipleDelete = () => {\n    setDeleteDialogOpen(true);\n    setSelectedPatient(null);\n  };\n\n  const handlePatientInfoOpen = (patient) => {\n    navigate(`/patients/${patient.uuid}`);\n  };\n\n  const handleFilterChange = (e) => {\n    setNameFilter(e.target.value);\n  };\n\n  const handleRangeChange = (e, rangeType) => {\n    const { name, value } = e.target;\n    if (rangeType === 'age') {\n      setAgeRange((prev) => ({ ...prev, [name]: value }));\n    } else if (rangeType === 'weight') {\n      setWeightRange((prev) => ({ ...prev, [name]: value }));\n    } else if (rangeType === 'height') {\n      setHeightRange((prev) => ({ ...prev, [name]: value }));\n    }\n  };\n\n  const filteredPatients = patients.filter((patient) => {\n    const matchesName = patient.nominativo.toLowerCase().includes(nameFilter.toLowerCase());\n    const matchesAge =\n      (ageRange.min === '' || patient.eta >= ageRange.min) &&\n      (ageRange.max === '' || patient.eta <= ageRange.max);\n    const matchesWeight =\n      (weightRange.min === '' || patient.peso >= weightRange.min) &&\n      (weightRange.max === '' || patient.peso <= weightRange.max);\n    const matchesHeight =\n      (heightRange.min === '' || patient.altezza >= heightRange.min) &&\n      (heightRange.max === '' || patient.altezza <= heightRange.max);\n    return matchesName && matchesAge && matchesWeight && matchesHeight;\n  });\n\n  if (loading) {\n    return (\n      <Root>\n        <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n          <ClipLoader size={50} color={\"#123abc\"} loading={loading} />\n          <Typography variant=\"h6\" style={{ marginTop: '20px' }}>Loading...</Typography>\n        </Box>\n      </Root>\n    );\n  }\n\n  if (error) {\n    return (\n      <Root>\n        <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n          <Typography variant=\"h6\" color=\"error\">Error: {error}</Typography>\n          <Button variant=\"contained\" color=\"primary\" onClick={() => window.location.reload()}>Retry</Button>\n        </Box>\n      </Root>\n    );\n  }\n\n  return (\n    <BackgroundWrapper>\n      <Root>\n        <Box width=\"100%\">\n          <Box height=\"20px\" />\n          <Box display=\"flex\" justifyContent=\"space-between\">\n            <Box width=\"15px\" />\n            <FilterBox>\n              <Typography variant=\"h6\" component=\"h2\">Filtri</Typography>\n              <TextField\n                label=\"Nome\"\n                value={nameFilter}\n                onChange={handleFilterChange}\n                fullWidth\n                margin=\"normal\"\n              />\n              <FilterHeader>\n                <Typography variant=\"subtitle1\">Altri Filtri</Typography>\n                <IconButton onClick={() => setFiltersOpen(!filtersOpen)}>\n                  {filtersOpen ? <ExpandLessIcon /> : <ExpandMoreIcon />}\n                </IconButton>\n              </FilterHeader>\n              <Collapse in={filtersOpen}>\n                <Grid container spacing={2}>\n                  <Grid item xs={6}>\n                    <TextField\n                      label=\"Età Minima\"\n                      name=\"min\"\n                      value={ageRange.min}\n                      onChange={(e) => handleRangeChange(e, 'age')}\n                      fullWidth\n                      margin=\"normal\"\n                    />\n                  </Grid>\n                  <Grid item xs={6}>\n                    <TextField\n                      label=\"Età Massima\"\n                      name=\"max\"\n                      value={ageRange.max}\n                      onChange={(e) => handleRangeChange(e, 'age')}\n                      fullWidth\n                      margin=\"normal\"\n                    />\n                  </Grid>\n                  <Grid item xs={6}>\n                    <TextField\n                      label=\"Peso Minimo\"\n                      name=\"min\"\n                      value={weightRange.min}\n                      onChange={(e) => handleRangeChange(e, 'weight')}\n                      fullWidth\n                      margin=\"normal\"\n                    />\n                  </Grid>\n                  <Grid item xs={6}>\n                    <TextField\n                      label=\"Peso Massimo\"\n                      name=\"max\"\n                      value={weightRange.max}\n                      onChange={(e) => handleRangeChange(e, 'weight')}\n                      fullWidth\n                      margin=\"normal\"\n                    />\n                  </Grid>\n                  <Grid item xs={6}>\n                    <TextField\n                      label=\"Altezza Minima\"\n                      name=\"min\"\n                      value={heightRange.min}\n                      onChange={(e) => handleRangeChange(e, 'height')}\n                      fullWidth\n                      margin=\"normal\"\n                    />\n                  </Grid>\n                  <Grid item xs={6}>\n                    <TextField\n                      label=\"Altezza Massima\"\n                      name=\"max\"\n                      value={heightRange.max}\n                      onChange={(e) => handleRangeChange(e, 'height')}\n                      fullWidth\n                      margin=\"normal\"\n                    />\n                  </Grid>\n                </Grid>\n              </Collapse>\n            </FilterBox>\n            <Box width=\"2%\" />\n            <PatientListContainer component={Paper} className=\"table-container\">\n              <Header>\n                <IconButton onClick={() => navigate('/main')}>\n                  <CloseIcon />\n                </IconButton>\n                <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n                  Lista Pazienti\n                </Typography>\n                {user && (\n                  <AddButton\n                    variant=\"contained\"\n                    color=\"primary\"\n                    startIcon={<AddIcon />}\n                    onClick={handleAddDialogOpen}\n                  >\n                    Aggiungi Paziente\n                  </AddButton>\n                )}\n              </Header>\n              <StyledTable>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Nominativo</TableCell>\n                    <TableCell>Età</TableCell>\n                    <TableCell>Altezza</TableCell>\n                    <TableCell>Peso</TableCell>\n                    <TableCell>Dottore</TableCell>\n                    <TableCell>Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {filteredPatients.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((patient) => (\n                    <TableRow key={patient.uuid}>\n                      <TableCell>\n                        <Link component=\"button\" onClick={() => handlePatientInfoOpen(patient)}>\n                          {patient.nominativo}\n                        </Link>\n                      </TableCell>\n                      <TableCell>{patient.eta}</TableCell>\n                      <TableCell>{patient.altezza}</TableCell>\n                      <TableCell>{patient.peso}</TableCell>\n                      <TableCell>{patient.doctor_name}</TableCell>\n                      <TableCell>\n                        <IconButton onClick={() => handleEditDialogOpen(patient)}>\n                          <EditIcon />\n                        </IconButton>\n                        <IconButton onClick={() => handleDeleteDialogOpen(patient)}>\n                          <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </StyledTable>\n              <TablePagination\n                rowsPerPageOptions={[5, 10]}\n                component=\"div\"\n                count={filteredPatients.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onPageChange={handleChangePage}\n                onRowsPerPageChange={handleChangeRowsPerPage}\n              />\n            </PatientListContainer>\n            <Box width=\"15px\" />\n          </Box>\n        </Box>\n        <AddPatientDialog open={addDialogOpen} onClose={handleAddDialogClose} onPatientAdded={handlePatientAdded} />\n        {selectedPatient && (\n          <EditPatientDialog\n            open={editDialogOpen}\n            onClose={handleEditDialogClose}\n            onEditSubmit={handleEditSubmit}\n            patient={selectedPatient}\n          />\n        )}\n        <Dialog open={deleteDialogOpen} onClose={handleDeleteDialogClose}>\n          <DialogTitle>Conferma Eliminazione</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              {selectedPatient\n                ? `Sei sicuro di voler eliminare il paziente ${selectedPatient.nominativo}?`\n                : 'Sei sicuro di voler eliminare i pazienti selezionati?'}\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleDeleteDialogClose} color=\"primary\">\n              Annulla\n            </Button>\n            <Button onClick={() => handleDelete(selectedPatient ? [selectedPatient.uuid] : selectedPatients)} color=\"primary\">\n              Elimina\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Root>\n    </BackgroundWrapper>\n  );\n}\n\nexport default PatientList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}