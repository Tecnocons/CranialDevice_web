{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\morga\\\\Desktop\\\\CranialDevice_web\\\\CranialDevice_web\\\\frontend\\\\src\\\\pages\\\\surgery\\\\SurgeryList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Container, Typography, Table, TableBody, TableCell, TableHead, TableRow, Paper, IconButton, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Button, Box, TablePagination } from '@mui/material';\nimport { styled } from '@mui/system';\nimport { useNavigate } from 'react-router-dom';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddIcon from '@mui/icons-material/Add';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { ClipLoader } from 'react-spinners';\nimport AddSurgeryDialog from './AddSurgeryDialog';\nimport EditSurgeryDialog from './EditSurgeryDialog';\nimport BackgroundWrapper from '../../components/BackgroundWrapper';\nimport './SurgeryList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Root = styled('div')({\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  height: '62vm',\n  backgroundColor: '#ffffff',\n  opacity: 0.9\n});\nconst StyledTable = styled(Table)({\n  minWidth: 650,\n  '& .MuiTableCell-head': {\n    backgroundColor: '#f1f1f1',\n    fontWeight: 'bold'\n  },\n  '& .MuiTableCell-body': {\n    fontSize: 14\n  }\n});\nconst Header = styled('div')({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  width: '100%',\n  marginBottom: 16\n});\nconst AddButton = styled(Button)({\n  backgroundColor: '#4caf50',\n  color: '#fff',\n  '&:hover': {\n    backgroundColor: '#45a049'\n  }\n});\nfunction SurgeryList() {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const navigate = useNavigate();\n  const [surgeries, setSurgeries] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [addDialogOpen, setAddDialogOpen] = useState(false);\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n  const [selectedSurgery, setSelectedSurgery] = useState(null);\n  useEffect(() => {\n    const fetchSurgeries = async () => {\n      if (!user) return;\n      try {\n        const response = await fetch('http://localhost:5000/api/surgeries', {\n          method: 'GET',\n          credentials: 'include'\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setSurgeries(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSurgeries();\n  }, [user]);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  const handleDelete = async id => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/surgeries/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include'\n      });\n      if (!response.ok) {\n        const errorMessage = await response.json();\n        throw new Error(errorMessage.message);\n      }\n      setSurgeries(prevSurgeries => prevSurgeries.filter(surgery => surgery.id !== id));\n      setDeleteDialogOpen(false);\n      setSelectedSurgery(null);\n    } catch (error) {\n      console.error('Error deleting surgery:', error.message);\n    }\n  };\n  const handleAddDialogOpen = () => {\n    setAddDialogOpen(true);\n  };\n  const handleAddDialogClose = () => {\n    setAddDialogOpen(false);\n  };\n  const handleSurgeryAdded = () => {\n    setAddDialogOpen(false);\n    const fetchSurgeries = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/surgeries', {\n          method: 'GET',\n          credentials: 'include'\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setSurgeries(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSurgeries();\n  };\n  const handleEditDialogOpen = surgery => {\n    setSelectedSurgery(surgery);\n    setEditDialogOpen(true);\n  };\n  const handleEditDialogClose = () => {\n    setEditDialogOpen(false);\n    setSelectedSurgery(null);\n  };\n  const handleEditSubmit = async updatedSurgery => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/surgeries`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify(updatedSurgery)\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      setSurgeries(prevSurgeries => prevSurgeries.map(surgery => surgery.id === updatedSurgery.id ? {\n        ...surgery,\n        ...updatedSurgery\n      } : surgery));\n      setEditDialogOpen(false);\n      setSelectedSurgery(null);\n    } catch (error) {\n      console.error('Error updating surgery:', error.message);\n    }\n  };\n  const handleDeleteDialogOpen = surgery => {\n    setSelectedSurgery(surgery);\n    setDeleteDialogOpen(true);\n  };\n  const handleDeleteDialogClose = () => {\n    setDeleteDialogOpen(false);\n    setSelectedSurgery(null);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Root, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(ClipLoader, {\n          size: 50,\n          color: \"#123abc\",\n          loading: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          style: {\n            marginTop: '20px'\n          },\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Root, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"error\",\n          children: [\"Error: \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => window.location.reload(),\n          children: \"Retry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(BackgroundWrapper, {\n    children: /*#__PURE__*/_jsxDEV(Root, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          component: Paper,\n          className: \"table-container\",\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: () => navigate('/main'),\n              children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              component: \"h1\",\n              gutterBottom: true,\n              children: \"Lista Interventi\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this), user && user.isAdmin && /*#__PURE__*/_jsxDEV(AddButton, {\n              variant: \"contained\",\n              color: \"primary\",\n              startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 30\n              }, this),\n              onClick: handleAddDialogOpen,\n              children: \"Aggiungi Intervento\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StyledTable, {\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Nome\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Descrizione\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 19\n                }, this), user && user.isAdmin && /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Azioni\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 44\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: surgeries.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(surgery => /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: surgery.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: surgery.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 21\n                }, this), user && user.isAdmin && /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                    onClick: () => handleEditDialogOpen(surgery),\n                    children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 276,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                    onClick: () => handleDeleteDialogOpen(surgery),\n                    children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 279,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 278,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 23\n                }, this)]\n              }, surgery.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n            rowsPerPageOptions: [5, 10],\n            component: \"div\",\n            count: surgeries.length,\n            rowsPerPage: rowsPerPage,\n            page: page,\n            onPageChange: handleChangePage,\n            onRowsPerPageChange: handleChangeRowsPerPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddSurgeryDialog, {\n        open: addDialogOpen,\n        onClose: handleAddDialogClose,\n        onSurgeryAdded: handleSurgeryAdded\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), selectedSurgery && /*#__PURE__*/_jsxDEV(EditSurgeryDialog, {\n        open: editDialogOpen,\n        onClose: handleEditDialogClose,\n        onEditSubmit: handleEditSubmit,\n        surgery: selectedSurgery\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: deleteDialogOpen,\n        onClose: handleDeleteDialogClose,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Conferma Eliminazione\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n            children: [\"Sei sicuro di voler eliminare l'intervento \", selectedSurgery === null || selectedSurgery === void 0 ? void 0 : selectedSurgery.name, \"?\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleDeleteDialogClose,\n            color: \"primary\",\n            children: \"Annulla\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleDelete(selectedSurgery.id),\n            color: \"primary\",\n            children: \"Elimina\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 5\n  }, this);\n}\n_s(SurgeryList, \"q0GFbz64MCyXll0LLlojcdOsIs0=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = SurgeryList;\nexport default SurgeryList;\nvar _c;\n$RefreshReg$(_c, \"SurgeryList\");","map":{"version":3,"names":["React","useEffect","useState","Container","Typography","Table","TableBody","TableCell","TableHead","TableRow","Paper","IconButton","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Button","Box","TablePagination","styled","useNavigate","EditIcon","DeleteIcon","AddIcon","CloseIcon","useAuth","ClipLoader","AddSurgeryDialog","EditSurgeryDialog","BackgroundWrapper","jsxDEV","_jsxDEV","Root","display","justifyContent","alignItems","height","backgroundColor","opacity","StyledTable","minWidth","fontWeight","fontSize","Header","width","marginBottom","AddButton","color","SurgeryList","_s","user","navigate","surgeries","setSurgeries","loading","setLoading","error","setError","page","setPage","rowsPerPage","setRowsPerPage","addDialogOpen","setAddDialogOpen","deleteDialogOpen","setDeleteDialogOpen","editDialogOpen","setEditDialogOpen","selectedSurgery","setSelectedSurgery","fetchSurgeries","response","fetch","method","credentials","ok","Error","data","json","message","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","handleDelete","id","headers","errorMessage","prevSurgeries","filter","surgery","console","handleAddDialogOpen","handleAddDialogClose","handleSurgeryAdded","handleEditDialogOpen","handleEditDialogClose","handleEditSubmit","updatedSurgery","body","JSON","stringify","map","handleDeleteDialogOpen","handleDeleteDialogClose","children","flexDirection","size","fileName","_jsxFileName","lineNumber","columnNumber","variant","style","marginTop","onClick","window","location","reload","className","component","gutterBottom","isAdmin","startIcon","slice","name","description","rowsPerPageOptions","count","length","onPageChange","onRowsPerPageChange","open","onClose","onSurgeryAdded","onEditSubmit","_c","$RefreshReg$"],"sources":["C:/Users/morga/Desktop/CranialDevice_web/CranialDevice_web/frontend/src/pages/surgery/SurgeryList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  Container,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Paper,\n  IconButton,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Button,\n  Box,\n  TablePagination,\n} from '@mui/material';\nimport { styled } from '@mui/system';\nimport { useNavigate } from 'react-router-dom';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddIcon from '@mui/icons-material/Add';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { ClipLoader } from 'react-spinners';\nimport AddSurgeryDialog from './AddSurgeryDialog';\nimport EditSurgeryDialog from './EditSurgeryDialog';\nimport BackgroundWrapper from '../../components/BackgroundWrapper';\nimport './SurgeryList.css';\n\nconst Root = styled('div')({\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  height: '62vm',\n  backgroundColor: '#ffffff',\n  opacity: 0.9,\n});\n\nconst StyledTable = styled(Table)({\n  minWidth: 650,\n  '& .MuiTableCell-head': {\n    backgroundColor: '#f1f1f1',\n    fontWeight: 'bold',\n  },\n  '& .MuiTableCell-body': {\n    fontSize: 14,\n  },\n});\n\nconst Header = styled('div')({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  width: '100%',\n  marginBottom: 16,\n});\n\nconst AddButton = styled(Button)({\n  backgroundColor: '#4caf50',\n  color: '#fff',\n  '&:hover': {\n    backgroundColor: '#45a049',\n  },\n});\n\nfunction SurgeryList() {\n  const { user } = useAuth();\n  const navigate = useNavigate();\n  const [surgeries, setSurgeries] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [addDialogOpen, setAddDialogOpen] = useState(false);\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n  const [selectedSurgery, setSelectedSurgery] = useState(null);\n\n  useEffect(() => {\n    const fetchSurgeries = async () => {\n      if (!user) return;\n\n      try {\n        const response = await fetch('http://localhost:5000/api/surgeries', {\n          method: 'GET',\n          credentials: 'include',\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setSurgeries(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSurgeries();\n  }, [user]);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/surgeries/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        credentials: 'include',\n      });\n\n      if (!response.ok) {\n        const errorMessage = await response.json();\n        throw new Error(errorMessage.message);\n      }\n\n      setSurgeries((prevSurgeries) => prevSurgeries.filter((surgery) => surgery.id !== id));\n      setDeleteDialogOpen(false);\n      setSelectedSurgery(null);\n    } catch (error) {\n      console.error('Error deleting surgery:', error.message);\n    }\n  };\n\n  const handleAddDialogOpen = () => {\n    setAddDialogOpen(true);\n  };\n\n  const handleAddDialogClose = () => {\n    setAddDialogOpen(false);\n  };\n\n  const handleSurgeryAdded = () => {\n    setAddDialogOpen(false);\n    const fetchSurgeries = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/surgeries', {\n          method: 'GET',\n          credentials: 'include',\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setSurgeries(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSurgeries();\n  };\n\n  const handleEditDialogOpen = (surgery) => {\n    setSelectedSurgery(surgery);\n    setEditDialogOpen(true);\n  };\n\n  const handleEditDialogClose = () => {\n    setEditDialogOpen(false);\n    setSelectedSurgery(null);\n  };\n\n  const handleEditSubmit = async (updatedSurgery) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/surgeries`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        credentials: 'include',\n        body: JSON.stringify(updatedSurgery),\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      setSurgeries((prevSurgeries) =>\n        prevSurgeries.map((surgery) =>\n          surgery.id === updatedSurgery.id ? { ...surgery, ...updatedSurgery } : surgery\n        )\n      );\n      setEditDialogOpen(false);\n      setSelectedSurgery(null);\n    } catch (error) {\n      console.error('Error updating surgery:', error.message);\n    }\n  };\n\n  const handleDeleteDialogOpen = (surgery) => {\n    setSelectedSurgery(surgery);\n    setDeleteDialogOpen(true);\n  };\n\n  const handleDeleteDialogClose = () => {\n    setDeleteDialogOpen(false);\n    setSelectedSurgery(null);\n  };\n\n  if (loading) {\n    return (\n      <Root>\n        <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n          <ClipLoader size={50} color={\"#123abc\"} loading={loading} />\n          <Typography variant=\"h6\" style={{ marginTop: '20px' }}>Loading...</Typography>\n        </Box>\n      </Root>\n    );\n  }\n\n  if (error) {\n    return (\n      <Root>\n        <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n          <Typography variant=\"h6\" color=\"error\">Error: {error}</Typography>\n          <Button variant=\"contained\" color=\"primary\" onClick={() => window.location.reload()}>Retry</Button>\n        </Box>\n      </Root>\n    );\n  }\n\n  return (\n    <BackgroundWrapper>\n      <Root>\n        <div className=\"content\">\n          <Container component={Paper} className=\"table-container\">\n            <Header>\n              <IconButton onClick={() => navigate('/main')}>\n                <CloseIcon />\n              </IconButton>\n              <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n                Lista Interventi\n              </Typography>\n              {user && user.isAdmin && (\n                <AddButton\n                  variant=\"contained\"\n                  color=\"primary\"\n                  startIcon={<AddIcon />}\n                  onClick={handleAddDialogOpen}\n                >\n                  Aggiungi Intervento\n                </AddButton>\n              )}\n            </Header>\n            <StyledTable>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Nome</TableCell>\n                  <TableCell>Descrizione</TableCell>\n                  {user && user.isAdmin && <TableCell>Azioni</TableCell>}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {surgeries.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((surgery) => (\n                  <TableRow key={surgery.id}>\n                    <TableCell>{surgery.name}</TableCell>\n                    <TableCell>{surgery.description}</TableCell>\n                    {user && user.isAdmin && (\n                      <TableCell>\n                        <IconButton onClick={() => handleEditDialogOpen(surgery)}>\n                          <EditIcon />\n                        </IconButton>\n                        <IconButton onClick={() => handleDeleteDialogOpen(surgery)}>\n                          <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    )}\n                  </TableRow>\n                ))}\n              </TableBody>\n            </StyledTable>\n            <TablePagination\n              rowsPerPageOptions={[5, 10]}\n              component=\"div\"\n              count={surgeries.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onPageChange={handleChangePage}\n              onRowsPerPageChange={handleChangeRowsPerPage}\n            />\n          </Container>\n        </div>\n        <AddSurgeryDialog open={addDialogOpen} onClose={handleAddDialogClose} onSurgeryAdded={handleSurgeryAdded} />\n        {selectedSurgery && (\n          <EditSurgeryDialog\n            open={editDialogOpen}\n            onClose={handleEditDialogClose}\n            onEditSubmit={handleEditSubmit}\n            surgery={selectedSurgery}\n          />\n        )}\n        <Dialog open={deleteDialogOpen} onClose={handleDeleteDialogClose}>\n          <DialogTitle>Conferma Eliminazione</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Sei sicuro di voler eliminare l'intervento {selectedSurgery?.name}?\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleDeleteDialogClose} color=\"primary\">\n              Annulla\n            </Button>\n            <Button onClick={() => handleDelete(selectedSurgery.id)} color=\"primary\">\n              Elimina\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Root>\n    </BackgroundWrapper>\n  );\n}\n\nexport default SurgeryList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SACEC,SAAS,EACTC,UAAU,EACVC,KAAK,EACLC,SAAS,EACTC,SAAS,EACTC,SAAS,EACTC,QAAQ,EACRC,KAAK,EACLC,UAAU,EACVC,MAAM,EACNC,aAAa,EACbC,aAAa,EACbC,iBAAiB,EACjBC,WAAW,EACXC,MAAM,EACNC,GAAG,EACHC,eAAe,QACV,eAAe;AACtB,SAASC,MAAM,QAAQ,aAAa;AACpC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,OAAO,MAAM,yBAAyB;AAC7C,OAAOC,SAAS,MAAM,2BAA2B;AACjD,SAASC,OAAO,QAAQ,4BAA4B;AACpD,SAASC,UAAU,QAAQ,gBAAgB;AAC3C,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,OAAOC,iBAAiB,MAAM,oCAAoC;AAClE,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,IAAI,GAAGb,MAAM,CAAC,KAAK,CAAC,CAAC;EACzBc,OAAO,EAAE,MAAM;EACfC,cAAc,EAAE,QAAQ;EACxBC,UAAU,EAAE,QAAQ;EACpBC,MAAM,EAAE,MAAM;EACdC,eAAe,EAAE,SAAS;EAC1BC,OAAO,EAAE;AACX,CAAC,CAAC;AAEF,MAAMC,WAAW,GAAGpB,MAAM,CAACf,KAAK,CAAC,CAAC;EAChCoC,QAAQ,EAAE,GAAG;EACb,sBAAsB,EAAE;IACtBH,eAAe,EAAE,SAAS;IAC1BI,UAAU,EAAE;EACd,CAAC;EACD,sBAAsB,EAAE;IACtBC,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC;AAEF,MAAMC,MAAM,GAAGxB,MAAM,CAAC,KAAK,CAAC,CAAC;EAC3Bc,OAAO,EAAE,MAAM;EACfC,cAAc,EAAE,eAAe;EAC/BC,UAAU,EAAE,QAAQ;EACpBS,KAAK,EAAE,MAAM;EACbC,YAAY,EAAE;AAChB,CAAC,CAAC;AAEF,MAAMC,SAAS,GAAG3B,MAAM,CAACH,MAAM,CAAC,CAAC;EAC/BqB,eAAe,EAAE,SAAS;EAC1BU,KAAK,EAAE,MAAM;EACb,SAAS,EAAE;IACTV,eAAe,EAAE;EACnB;AACF,CAAC,CAAC;AAEF,SAASW,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAK,CAAC,GAAGzB,OAAO,CAAC,CAAC;EAC1B,MAAM0B,QAAQ,GAAG/B,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACgC,SAAS,EAAEC,YAAY,CAAC,GAAGpD,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACqD,OAAO,EAAEC,UAAU,CAAC,GAAGtD,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACuD,KAAK,EAAEC,QAAQ,CAAC,GAAGxD,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACyD,IAAI,EAAEC,OAAO,CAAC,GAAG1D,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAAC2D,WAAW,EAAEC,cAAc,CAAC,GAAG5D,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAAC6D,aAAa,EAAEC,gBAAgB,CAAC,GAAG9D,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAAC+D,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGhE,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACiE,cAAc,EAAEC,iBAAiB,CAAC,GAAGlE,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACmE,eAAe,EAAEC,kBAAkB,CAAC,GAAGpE,QAAQ,CAAC,IAAI,CAAC;EAE5DD,SAAS,CAAC,MAAM;IACd,MAAMsE,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI,CAACpB,IAAI,EAAE;MAEX,IAAI;QACF,MAAMqB,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;UAClEC,MAAM,EAAE,KAAK;UACbC,WAAW,EAAE;QACf,CAAC,CAAC;QACF,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QACA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;QAClCzB,YAAY,CAACwB,IAAI,CAAC;MACpB,CAAC,CAAC,OAAOrB,KAAK,EAAE;QACdC,QAAQ,CAACD,KAAK,CAACuB,OAAO,CAAC;MACzB,CAAC,SAAS;QACRxB,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IACDe,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACpB,IAAI,CAAC,CAAC;EAEV,MAAM8B,gBAAgB,GAAGA,CAACC,KAAK,EAAEC,OAAO,KAAK;IAC3CvB,OAAO,CAACuB,OAAO,CAAC;EAClB,CAAC;EAED,MAAMC,uBAAuB,GAAIF,KAAK,IAAK;IACzCpB,cAAc,CAACuB,QAAQ,CAACH,KAAK,CAACI,MAAM,CAACC,KAAK,EAAE,EAAE,CAAC,CAAC;IAChD3B,OAAO,CAAC,CAAC,CAAC;EACZ,CAAC;EAED,MAAM4B,YAAY,GAAG,MAAOC,EAAE,IAAK;IACjC,IAAI;MACF,MAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuCgB,EAAE,EAAE,EAAE;QACxEf,MAAM,EAAE,QAAQ;QAChBgB,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDf,WAAW,EAAE;MACf,CAAC,CAAC;MAEF,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;QAChB,MAAMe,YAAY,GAAG,MAAMnB,QAAQ,CAACO,IAAI,CAAC,CAAC;QAC1C,MAAM,IAAIF,KAAK,CAACc,YAAY,CAACX,OAAO,CAAC;MACvC;MAEA1B,YAAY,CAAEsC,aAAa,IAAKA,aAAa,CAACC,MAAM,CAAEC,OAAO,IAAKA,OAAO,CAACL,EAAE,KAAKA,EAAE,CAAC,CAAC;MACrFvB,mBAAmB,CAAC,KAAK,CAAC;MAC1BI,kBAAkB,CAAC,IAAI,CAAC;IAC1B,CAAC,CAAC,OAAOb,KAAK,EAAE;MACdsC,OAAO,CAACtC,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAACuB,OAAO,CAAC;IACzD;EACF,CAAC;EAED,MAAMgB,mBAAmB,GAAGA,CAAA,KAAM;IAChChC,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,MAAMiC,oBAAoB,GAAGA,CAAA,KAAM;IACjCjC,gBAAgB,CAAC,KAAK,CAAC;EACzB,CAAC;EAED,MAAMkC,kBAAkB,GAAGA,CAAA,KAAM;IAC/BlC,gBAAgB,CAAC,KAAK,CAAC;IACvB,MAAMO,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;UAClEC,MAAM,EAAE,KAAK;UACbC,WAAW,EAAE;QACf,CAAC,CAAC;QACF,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QACA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;QAClCzB,YAAY,CAACwB,IAAI,CAAC;MACpB,CAAC,CAAC,OAAOrB,KAAK,EAAE;QACdC,QAAQ,CAACD,KAAK,CAACuB,OAAO,CAAC;MACzB,CAAC,SAAS;QACRxB,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IACDe,cAAc,CAAC,CAAC;EAClB,CAAC;EAED,MAAM4B,oBAAoB,GAAIL,OAAO,IAAK;IACxCxB,kBAAkB,CAACwB,OAAO,CAAC;IAC3B1B,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,MAAMgC,qBAAqB,GAAGA,CAAA,KAAM;IAClChC,iBAAiB,CAAC,KAAK,CAAC;IACxBE,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,MAAM+B,gBAAgB,GAAG,MAAOC,cAAc,IAAK;IACjD,IAAI;MACF,MAAM9B,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;QAClEC,MAAM,EAAE,KAAK;QACbgB,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDf,WAAW,EAAE,SAAS;QACtB4B,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACH,cAAc;MACrC,CAAC,CAAC;MAEF,IAAI,CAAC9B,QAAQ,CAACI,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MAEAvB,YAAY,CAAEsC,aAAa,IACzBA,aAAa,CAACc,GAAG,CAAEZ,OAAO,IACxBA,OAAO,CAACL,EAAE,KAAKa,cAAc,CAACb,EAAE,GAAG;QAAE,GAAGK,OAAO;QAAE,GAAGQ;MAAe,CAAC,GAAGR,OACzE,CACF,CAAC;MACD1B,iBAAiB,CAAC,KAAK,CAAC;MACxBE,kBAAkB,CAAC,IAAI,CAAC;IAC1B,CAAC,CAAC,OAAOb,KAAK,EAAE;MACdsC,OAAO,CAACtC,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAACuB,OAAO,CAAC;IACzD;EACF,CAAC;EAED,MAAM2B,sBAAsB,GAAIb,OAAO,IAAK;IAC1CxB,kBAAkB,CAACwB,OAAO,CAAC;IAC3B5B,mBAAmB,CAAC,IAAI,CAAC;EAC3B,CAAC;EAED,MAAM0C,uBAAuB,GAAGA,CAAA,KAAM;IACpC1C,mBAAmB,CAAC,KAAK,CAAC;IAC1BI,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,IAAIf,OAAO,EAAE;IACX,oBACEvB,OAAA,CAACC,IAAI;MAAA4E,QAAA,eACH7E,OAAA,CAACd,GAAG;QAACgB,OAAO,EAAC,MAAM;QAAC4E,aAAa,EAAC,QAAQ;QAAC1E,UAAU,EAAC,QAAQ;QAAAyE,QAAA,gBAC5D7E,OAAA,CAACL,UAAU;UAACoF,IAAI,EAAE,EAAG;UAAC/D,KAAK,EAAE,SAAU;UAACO,OAAO,EAAEA;QAAQ;UAAAyD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC5DnF,OAAA,CAAC5B,UAAU;UAACgH,OAAO,EAAC,IAAI;UAACC,KAAK,EAAE;YAAEC,SAAS,EAAE;UAAO,CAAE;UAAAT,QAAA,EAAC;QAAU;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3E;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAEX;EAEA,IAAI1D,KAAK,EAAE;IACT,oBACEzB,OAAA,CAACC,IAAI;MAAA4E,QAAA,eACH7E,OAAA,CAACd,GAAG;QAACgB,OAAO,EAAC,MAAM;QAAC4E,aAAa,EAAC,QAAQ;QAAC1E,UAAU,EAAC,QAAQ;QAAAyE,QAAA,gBAC5D7E,OAAA,CAAC5B,UAAU;UAACgH,OAAO,EAAC,IAAI;UAACpE,KAAK,EAAC,OAAO;UAAA6D,QAAA,GAAC,SAAO,EAACpD,KAAK;QAAA;UAAAuD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC,eAClEnF,OAAA,CAACf,MAAM;UAACmG,OAAO,EAAC,WAAW;UAACpE,KAAK,EAAC,SAAS;UAACuE,OAAO,EAAEA,CAAA,KAAMC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAE;UAAAb,QAAA,EAAC;QAAK;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAEX;EAEA,oBACEnF,OAAA,CAACF,iBAAiB;IAAA+E,QAAA,eAChB7E,OAAA,CAACC,IAAI;MAAA4E,QAAA,gBACH7E,OAAA;QAAK2F,SAAS,EAAC,SAAS;QAAAd,QAAA,eACtB7E,OAAA,CAAC7B,SAAS;UAACyH,SAAS,EAAElH,KAAM;UAACiH,SAAS,EAAC,iBAAiB;UAAAd,QAAA,gBACtD7E,OAAA,CAACY,MAAM;YAAAiE,QAAA,gBACL7E,OAAA,CAACrB,UAAU;cAAC4G,OAAO,EAAEA,CAAA,KAAMnE,QAAQ,CAAC,OAAO,CAAE;cAAAyD,QAAA,eAC3C7E,OAAA,CAACP,SAAS;gBAAAuF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACbnF,OAAA,CAAC5B,UAAU;cAACgH,OAAO,EAAC,IAAI;cAACQ,SAAS,EAAC,IAAI;cAACC,YAAY;cAAAhB,QAAA,EAAC;YAErD;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,EACZhE,IAAI,IAAIA,IAAI,CAAC2E,OAAO,iBACnB9F,OAAA,CAACe,SAAS;cACRqE,OAAO,EAAC,WAAW;cACnBpE,KAAK,EAAC,SAAS;cACf+E,SAAS,eAAE/F,OAAA,CAACR,OAAO;gBAAAwF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAE;cACvBI,OAAO,EAAEvB,mBAAoB;cAAAa,QAAA,EAC9B;YAED;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CACZ;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACK,CAAC,eACTnF,OAAA,CAACQ,WAAW;YAAAqE,QAAA,gBACV7E,OAAA,CAACxB,SAAS;cAAAqG,QAAA,eACR7E,OAAA,CAACvB,QAAQ;gBAAAoG,QAAA,gBACP7E,OAAA,CAACzB,SAAS;kBAAAsG,QAAA,EAAC;gBAAI;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAW,CAAC,eAC3BnF,OAAA,CAACzB,SAAS;kBAAAsG,QAAA,EAAC;gBAAW;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAW,CAAC,EACjChE,IAAI,IAAIA,IAAI,CAAC2E,OAAO,iBAAI9F,OAAA,CAACzB,SAAS;kBAAAsG,QAAA,EAAC;gBAAM;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAW,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC9C;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF,CAAC,eACZnF,OAAA,CAAC1B,SAAS;cAAAuG,QAAA,EACPxD,SAAS,CAAC2E,KAAK,CAACrE,IAAI,GAAGE,WAAW,EAAEF,IAAI,GAAGE,WAAW,GAAGA,WAAW,CAAC,CAAC6C,GAAG,CAAEZ,OAAO,iBACjF9D,OAAA,CAACvB,QAAQ;gBAAAoG,QAAA,gBACP7E,OAAA,CAACzB,SAAS;kBAAAsG,QAAA,EAAEf,OAAO,CAACmC;gBAAI;kBAAAjB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eACrCnF,OAAA,CAACzB,SAAS;kBAAAsG,QAAA,EAAEf,OAAO,CAACoC;gBAAW;kBAAAlB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,EAC3ChE,IAAI,IAAIA,IAAI,CAAC2E,OAAO,iBACnB9F,OAAA,CAACzB,SAAS;kBAAAsG,QAAA,gBACR7E,OAAA,CAACrB,UAAU;oBAAC4G,OAAO,EAAEA,CAAA,KAAMpB,oBAAoB,CAACL,OAAO,CAAE;oBAAAe,QAAA,eACvD7E,OAAA,CAACV,QAAQ;sBAAA0F,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACF,CAAC,eACbnF,OAAA,CAACrB,UAAU;oBAAC4G,OAAO,EAAEA,CAAA,KAAMZ,sBAAsB,CAACb,OAAO,CAAE;oBAAAe,QAAA,eACzD7E,OAAA,CAACT,UAAU;sBAAAyF,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACJ,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ,CACZ;cAAA,GAZYrB,OAAO,CAACL,EAAE;gBAAAuB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAaf,CACX;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,eACdnF,OAAA,CAACb,eAAe;YACdgH,kBAAkB,EAAE,CAAC,CAAC,EAAE,EAAE,CAAE;YAC5BP,SAAS,EAAC,KAAK;YACfQ,KAAK,EAAE/E,SAAS,CAACgF,MAAO;YACxBxE,WAAW,EAAEA,WAAY;YACzBF,IAAI,EAAEA,IAAK;YACX2E,YAAY,EAAErD,gBAAiB;YAC/BsD,mBAAmB,EAAEnD;UAAwB;YAAA4B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACNnF,OAAA,CAACJ,gBAAgB;QAAC4G,IAAI,EAAEzE,aAAc;QAAC0E,OAAO,EAAExC,oBAAqB;QAACyC,cAAc,EAAExC;MAAmB;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAC3G9C,eAAe,iBACdrC,OAAA,CAACH,iBAAiB;QAChB2G,IAAI,EAAErE,cAAe;QACrBsE,OAAO,EAAErC,qBAAsB;QAC/BuC,YAAY,EAAEtC,gBAAiB;QAC/BP,OAAO,EAAEzB;MAAgB;QAAA2C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CACF,eACDnF,OAAA,CAACpB,MAAM;QAAC4H,IAAI,EAAEvE,gBAAiB;QAACwE,OAAO,EAAE7B,uBAAwB;QAAAC,QAAA,gBAC/D7E,OAAA,CAAChB,WAAW;UAAA6F,QAAA,EAAC;QAAqB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC,eAChDnF,OAAA,CAAClB,aAAa;UAAA+F,QAAA,eACZ7E,OAAA,CAACjB,iBAAiB;YAAA8F,QAAA,GAAC,6CAC0B,EAACxC,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAE4D,IAAI,EAAC,GACpE;UAAA;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAmB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC,eAChBnF,OAAA,CAACnB,aAAa;UAAAgG,QAAA,gBACZ7E,OAAA,CAACf,MAAM;YAACsG,OAAO,EAAEX,uBAAwB;YAAC5D,KAAK,EAAC,SAAS;YAAA6D,QAAA,EAAC;UAE1D;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTnF,OAAA,CAACf,MAAM;YAACsG,OAAO,EAAEA,CAAA,KAAM/B,YAAY,CAACnB,eAAe,CAACoB,EAAE,CAAE;YAACzC,KAAK,EAAC,SAAS;YAAA6D,QAAA,EAAC;UAEzE;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAExB;AAACjE,EAAA,CAhQQD,WAAW;EAAA,QACDvB,OAAO,EACPL,WAAW;AAAA;AAAAuH,EAAA,GAFrB3F,WAAW;AAkQpB,eAAeA,WAAW;AAAC,IAAA2F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}