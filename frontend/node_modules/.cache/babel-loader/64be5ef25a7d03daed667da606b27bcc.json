{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\morga\\\\Desktop\\\\CranialDevice_web\\\\CranialDevice_web\\\\frontend\\\\src\\\\pages\\\\patients\\\\PatientProfile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { Container, Grid, Paper, Typography, IconButton, Button } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport SaveAltIcon from '@mui/icons-material/SaveAlt';\nimport EditIcon from '@mui/icons-material/Edit';\nimport jsPDF from 'jspdf';\nimport AssignPathologiesDialog from './AssignPathologiesDialog';\nimport AssignSymptomsDialog from './AssignSymptomsDialog'; // Import the new dialog\nimport EditPatientDialog from './EditPatientDialog';\nimport './PatientProfile.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PatientProfile = () => {\n  _s();\n  const {\n    uuid\n  } = useParams(); // Ottieni l'UUID dai parametri della rotta\n  const navigate = useNavigate();\n  const [patient, setPatient] = useState(null);\n  const [pathologies, setPathologies] = useState([]);\n  const [symptoms, setSymptoms] = useState([]); // Add state for symptoms\n  const [assignPathologiesDialogOpen, setAssignPathologiesDialogOpen] = useState(false);\n  const [assignSymptomsDialogOpen, setAssignSymptomsDialogOpen] = useState(false); // Add state for symptoms dialog\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n  const fetchPatient = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/patients/${uuid}`, {\n        method: 'GET',\n        credentials: 'include'\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setPatient(data);\n    } catch (error) {\n      console.error('Error fetching patient:', error);\n    }\n  };\n  const fetchPathologies = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/patient_pathology/${uuid}`, {\n        method: 'GET',\n        credentials: 'include'\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setPathologies(data);\n    } catch (error) {\n      console.error('Error fetching pathologies:', error);\n    }\n  };\n  const fetchSymptoms = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/patient_symptom/${uuid}`, {\n        method: 'GET',\n        credentials: 'include'\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setSymptoms(data);\n    } catch (error) {\n      console.error('Error fetching symptoms:', error);\n    }\n  };\n  useEffect(() => {\n    fetchPatient();\n    fetchPathologies();\n    fetchSymptoms(); // Fetch symptoms as well\n  }, [uuid]);\n  if (!patient) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 12\n    }, this);\n  }\n  const measurements = [{\n    date: '2024-06-20',\n    value: '120/80'\n  }, {\n    date: '2024-06-21',\n    value: '125/85'\n  }];\n  const treatments = [{\n    date: '2024-06-20',\n    description: 'Antibiotics'\n  }, {\n    date: '2024-06-21',\n    description: 'Physical Therapy'\n  }];\n  const generatePDF = () => {\n    const doc = new jsPDF();\n    doc.setFontSize(18);\n    doc.text(`Cartella Clinica di ${patient.nominativo}`, 20, 20);\n    doc.setFontSize(14);\n    doc.text('Informazioni del Paziente', 20, 30);\n    doc.setFontSize(12);\n    doc.text(`Nome: ${patient.nominativo}`, 20, 40);\n    doc.text(`EtÃ : ${patient.eta}`, 20, 50);\n    doc.text(`Altezza: ${patient.altezza}`, 20, 60);\n    doc.text(`Peso: ${patient.peso}`, 20, 70);\n    doc.text(`Sesso: ${patient.sesso}`, 20, 80);\n    doc.setFontSize(14);\n    doc.text('Misurazioni', 20, 90);\n    doc.setFontSize(12);\n    measurements.forEach((measurement, index) => {\n      doc.text(`${measurement.date}: ${measurement.value}`, 20, 100 + index * 10);\n    });\n    doc.setFontSize(14);\n    doc.text('Trattamenti', 20, 110 + measurements.length * 10);\n    doc.setFontSize(12);\n    treatments.forEach((treatment, index) => {\n      doc.text(`${treatment.date}: ${treatment.description}`, 20, 120 + measurements.length * 10 + index * 10);\n    });\n    doc.setFontSize(14);\n    doc.text('Patologie', 20, 130 + measurements.length * 10 + treatments.length * 10);\n    doc.setFontSize(12);\n    pathologies.forEach((pathology, index) => {\n      doc.text(pathology.name, 20, 140 + measurements.length * 10 + treatments.length * 10 + index * 10);\n    });\n    doc.setFontSize(14);\n    doc.text('Sintomi', 20, 150 + measurements.length * 10 + treatments.length * 10 + pathologies.length * 10);\n    doc.setFontSize(12);\n    symptoms.forEach((symptom, index) => {\n      doc.text(symptom.name, 20, 160 + measurements.length * 10 + treatments.length * 10 + pathologies.length * 10 + index * 10);\n    });\n    doc.save(`Cartella_Clinica_${patient.nominativo}.pdf`);\n  };\n  const getIcon = () => {\n    switch (patient.sesso) {\n      case 'maschio':\n        return 'ðŸ‘¤';\n      // Placeholder icon for male\n      case 'femmina':\n        return 'ðŸ‘©';\n      // Placeholder icon for female\n      default:\n        return 'ðŸ‘¤';\n      // Placeholder icon for other/unspecified\n    }\n  };\n  const handleAssignPathologiesDialogOpen = () => {\n    setAssignPathologiesDialogOpen(true);\n  };\n  const handleAssignPathologiesDialogClose = () => {\n    setAssignPathologiesDialogOpen(false);\n    fetchPathologies(); // Refresh pathologies after assignment\n  };\n  const handleAssignSymptomsDialogOpen = () => {\n    setAssignSymptomsDialogOpen(true);\n  };\n  const handleAssignSymptomsDialogClose = () => {\n    setAssignSymptomsDialogOpen(false);\n    fetchSymptoms(); // Refresh symptoms after assignment\n  };\n  const handleEditDialogOpen = () => {\n    setEditDialogOpen(true);\n  };\n  const handleEditDialogClose = () => {\n    setEditDialogOpen(false);\n    fetchPatient(); // Refresh patient data\n  };\n  const handleEditSubmit = async updatedPatient => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/patients`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify(updatedPatient)\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      // Aggiorna la lista dei pazienti dopo la modifica\n      setPatient(updatedPatient);\n      setEditDialogOpen(false);\n    } catch (error) {\n      console.error('Error updating patient:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"patient-info-container\",\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: () => navigate(-1),\n      className: \"back-button\",\n      children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        className: \"patient-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"patient-icon\",\n          children: getIcon()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"patient-details\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            children: patient.nominativo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: [\"Et\\xE0: \", patient.eta]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: [\"Altezza: \", patient.altezza]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: [\"Peso: \", patient.peso]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: [\"Sesso: \", patient.sesso]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: handleEditDialogOpen,\n            className: \"edit-button\",\n            children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: generatePDF,\n          className: \"pdf-button\",\n          children: /*#__PURE__*/_jsxDEV(SaveAltIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: \"info-block\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            className: \"box-title\",\n            children: \"Misurazioni\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-content\",\n            children: measurements.map((measurement, index) => /*#__PURE__*/_jsxDEV(Typography, {\n              children: `${measurement.date}: ${measurement.value}`\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: \"info-block\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            className: \"box-title\",\n            children: \"Trattamenti\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-content\",\n            children: treatments.map((treatment, index) => /*#__PURE__*/_jsxDEV(Typography, {\n              children: `${treatment.date}: ${treatment.description}`\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: \"info-block\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            className: \"box-title\",\n            children: \"Patologie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-content\",\n            children: pathologies.map((pathology, index) => /*#__PURE__*/_jsxDEV(Typography, {\n              children: pathology.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleAssignPathologiesDialogOpen,\n            children: \"Assegna Patologie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: \"info-block\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            className: \"box-title\",\n            children: \"Sintomi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-content\",\n            children: symptoms.map((symptom, index) => /*#__PURE__*/_jsxDEV(Typography, {\n              children: symptom.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleAssignSymptomsDialogOpen,\n            children: \"Assegna Sintomi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AssignPathologiesDialog, {\n      open: assignPathologiesDialogOpen,\n      onClose: handleAssignPathologiesDialogClose,\n      patient: patient,\n      onAssign: fetchPathologies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AssignSymptomsDialog, {\n      open: assignSymptomsDialogOpen,\n      onClose: handleAssignSymptomsDialogClose,\n      patient: patient,\n      onAssign: fetchSymptoms\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditPatientDialog, {\n      open: editDialogOpen,\n      onClose: handleEditDialogClose,\n      onEditSubmit: handleEditSubmit,\n      patient: patient\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n};\n_s(PatientProfile, \"zWP9/1TxuLUZEpDY56o/E0um2r8=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = PatientProfile;\nexport default PatientProfile;\nvar _c;\n$RefreshReg$(_c, \"PatientProfile\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","Container","Grid","Paper","Typography","IconButton","Button","ArrowBackIcon","SaveAltIcon","EditIcon","jsPDF","AssignPathologiesDialog","AssignSymptomsDialog","EditPatientDialog","jsxDEV","_jsxDEV","PatientProfile","_s","uuid","navigate","patient","setPatient","pathologies","setPathologies","symptoms","setSymptoms","assignPathologiesDialogOpen","setAssignPathologiesDialogOpen","assignSymptomsDialogOpen","setAssignSymptomsDialogOpen","editDialogOpen","setEditDialogOpen","fetchPatient","response","fetch","method","credentials","ok","Error","data","json","error","console","fetchPathologies","fetchSymptoms","children","fileName","_jsxFileName","lineNumber","columnNumber","measurements","date","value","treatments","description","generatePDF","doc","setFontSize","text","nominativo","eta","altezza","peso","sesso","forEach","measurement","index","length","treatment","pathology","name","symptom","save","getIcon","handleAssignPathologiesDialogOpen","handleAssignPathologiesDialogClose","handleAssignSymptomsDialogOpen","handleAssignSymptomsDialogClose","handleEditDialogOpen","handleEditDialogClose","handleEditSubmit","updatedPatient","headers","body","JSON","stringify","message","className","onClick","container","spacing","item","xs","variant","md","map","color","open","onClose","onAssign","onEditSubmit","_c","$RefreshReg$"],"sources":["C:/Users/morga/Desktop/CranialDevice_web/CranialDevice_web/frontend/src/pages/patients/PatientProfile.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { Container, Grid, Paper, Typography, IconButton, Button } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport SaveAltIcon from '@mui/icons-material/SaveAlt';\nimport EditIcon from '@mui/icons-material/Edit';\nimport jsPDF from 'jspdf';\nimport AssignPathologiesDialog from './AssignPathologiesDialog';\nimport AssignSymptomsDialog from './AssignSymptomsDialog'; // Import the new dialog\nimport EditPatientDialog from './EditPatientDialog';\nimport './PatientProfile.css';\n\nconst PatientProfile = () => {\n  const { uuid } = useParams(); // Ottieni l'UUID dai parametri della rotta\n  const navigate = useNavigate();\n  const [patient, setPatient] = useState(null);\n  const [pathologies, setPathologies] = useState([]);\n  const [symptoms, setSymptoms] = useState([]); // Add state for symptoms\n  const [assignPathologiesDialogOpen, setAssignPathologiesDialogOpen] = useState(false);\n  const [assignSymptomsDialogOpen, setAssignSymptomsDialogOpen] = useState(false); // Add state for symptoms dialog\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n\n  const fetchPatient = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/patients/${uuid}`, {\n        method: 'GET',\n        credentials: 'include',\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setPatient(data);\n    } catch (error) {\n      console.error('Error fetching patient:', error);\n    }\n  };\n\n  const fetchPathologies = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/patient_pathology/${uuid}`, {\n        method: 'GET',\n        credentials: 'include',\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setPathologies(data);\n    } catch (error) {\n      console.error('Error fetching pathologies:', error);\n    }\n  };\n\n  const fetchSymptoms = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/patient_symptom/${uuid}`, {\n        method: 'GET',\n        credentials: 'include',\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setSymptoms(data);\n    } catch (error) {\n      console.error('Error fetching symptoms:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchPatient();\n    fetchPathologies();\n    fetchSymptoms(); // Fetch symptoms as well\n  }, [uuid]);\n\n  if (!patient) {\n    return <div>Loading...</div>;\n  }\n\n  const measurements = [\n    { date: '2024-06-20', value: '120/80' },\n    { date: '2024-06-21', value: '125/85' },\n  ];\n\n  const treatments = [\n    { date: '2024-06-20', description: 'Antibiotics' },\n    { date: '2024-06-21', description: 'Physical Therapy' },\n  ];\n\n  const generatePDF = () => {\n    const doc = new jsPDF();\n    doc.setFontSize(18);\n    doc.text(`Cartella Clinica di ${patient.nominativo}`, 20, 20);\n\n    doc.setFontSize(14);\n    doc.text('Informazioni del Paziente', 20, 30);\n    doc.setFontSize(12);\n    doc.text(`Nome: ${patient.nominativo}`, 20, 40);\n    doc.text(`EtÃ : ${patient.eta}`, 20, 50);\n    doc.text(`Altezza: ${patient.altezza}`, 20, 60);\n    doc.text(`Peso: ${patient.peso}`, 20, 70);\n    doc.text(`Sesso: ${patient.sesso}`, 20, 80);\n\n    doc.setFontSize(14);\n    doc.text('Misurazioni', 20, 90);\n    doc.setFontSize(12);\n    measurements.forEach((measurement, index) => {\n      doc.text(`${measurement.date}: ${measurement.value}`, 20, 100 + index * 10);\n    });\n\n    doc.setFontSize(14);\n    doc.text('Trattamenti', 20, 110 + measurements.length * 10);\n    doc.setFontSize(12);\n    treatments.forEach((treatment, index) => {\n      doc.text(`${treatment.date}: ${treatment.description}`, 20, 120 + measurements.length * 10 + index * 10);\n    });\n\n    doc.setFontSize(14);\n    doc.text('Patologie', 20, 130 + measurements.length * 10 + treatments.length * 10);\n    doc.setFontSize(12);\n    pathologies.forEach((pathology, index) => {\n      doc.text(pathology.name, 20, 140 + measurements.length * 10 + treatments.length * 10 + index * 10);\n    });\n\n    doc.setFontSize(14);\n    doc.text('Sintomi', 20, 150 + measurements.length * 10 + treatments.length * 10 + pathologies.length * 10);\n    doc.setFontSize(12);\n    symptoms.forEach((symptom, index) => {\n      doc.text(symptom.name, 20, 160 + measurements.length * 10 + treatments.length * 10 + pathologies.length * 10 + index * 10);\n    });\n\n    doc.save(`Cartella_Clinica_${patient.nominativo}.pdf`);\n  };\n\n  const getIcon = () => {\n    switch (patient.sesso) {\n      case 'maschio':\n        return 'ðŸ‘¤'; // Placeholder icon for male\n      case 'femmina':\n        return 'ðŸ‘©'; // Placeholder icon for female\n      default:\n        return 'ðŸ‘¤'; // Placeholder icon for other/unspecified\n    }\n  };\n\n  const handleAssignPathologiesDialogOpen = () => {\n    setAssignPathologiesDialogOpen(true);\n  };\n\n  const handleAssignPathologiesDialogClose = () => {\n    setAssignPathologiesDialogOpen(false);\n    fetchPathologies(); // Refresh pathologies after assignment\n  };\n\n  const handleAssignSymptomsDialogOpen = () => {\n    setAssignSymptomsDialogOpen(true);\n  };\n\n  const handleAssignSymptomsDialogClose = () => {\n    setAssignSymptomsDialogOpen(false);\n    fetchSymptoms(); // Refresh symptoms after assignment\n  };\n\n  const handleEditDialogOpen = () => {\n    setEditDialogOpen(true);\n  };\n\n  const handleEditDialogClose = () => {\n    setEditDialogOpen(false);\n    fetchPatient(); // Refresh patient data\n  };\n\n  const handleEditSubmit = async (updatedPatient) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/patients`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        credentials: 'include',\n        body: JSON.stringify(updatedPatient),\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      // Aggiorna la lista dei pazienti dopo la modifica\n      setPatient(updatedPatient);\n      setEditDialogOpen(false);\n    } catch (error) {\n      console.error('Error updating patient:', error.message);\n    }\n  };\n\n  return (\n    <Container className=\"patient-info-container\">\n      <IconButton onClick={() => navigate(-1)} className=\"back-button\">\n        <ArrowBackIcon />\n      </IconButton>\n      <Grid container spacing={3}>\n        <Grid item xs={12} className=\"patient-header\">\n          <div className=\"patient-icon\">{getIcon()}</div>\n          <div className=\"patient-details\">\n            <Typography variant=\"h4\">{patient.nominativo}</Typography>\n            <Typography variant=\"body1\">EtÃ : {patient.eta}</Typography>\n            <Typography variant=\"body1\">Altezza: {patient.altezza}</Typography>\n            <Typography variant=\"body1\">Peso: {patient.peso}</Typography>\n            <Typography variant=\"body1\">Sesso: {patient.sesso}</Typography>\n            <IconButton onClick={handleEditDialogOpen} className=\"edit-button\">\n              <EditIcon />\n            </IconButton>\n          </div>\n          <IconButton onClick={generatePDF} className=\"pdf-button\">\n            <SaveAltIcon />\n          </IconButton>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Paper className=\"info-block\">\n            <Typography variant=\"h6\" className=\"box-title\">Misurazioni</Typography>\n            <div className=\"info-content\">\n              {measurements.map((measurement, index) => (\n                <Typography key={index}>{`${measurement.date}: ${measurement.value}`}</Typography>\n              ))}\n            </div>\n          </Paper>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Paper className=\"info-block\">\n            <Typography variant=\"h6\" className=\"box-title\">Trattamenti</Typography>\n            <div className=\"info-content\">\n              {treatments.map((treatment, index) => (\n                <Typography key={index}>{`${treatment.date}: ${treatment.description}`}</Typography>\n              ))}\n            </div>\n          </Paper>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Paper className=\"info-block\">\n            <Typography variant=\"h6\" className=\"box-title\">Patologie</Typography>\n            <div className=\"info-content\">\n              {pathologies.map((pathology, index) => (\n                <Typography key={index}>{pathology.name}</Typography>\n              ))}\n            </div>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleAssignPathologiesDialogOpen}>\n              Assegna Patologie\n            </Button>\n          </Paper>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Paper className=\"info-block\">\n            <Typography variant=\"h6\" className=\"box-title\">Sintomi</Typography>\n            <div className=\"info-content\">\n              {symptoms.map((symptom, index) => (\n                <Typography key={index}>{symptom.name}</Typography>\n              ))}\n            </div>\n            <Button variant=\"contained\" color=\"primary\" onClick={handleAssignSymptomsDialogOpen}>\n              Assegna Sintomi\n            </Button>\n          </Paper>\n        </Grid>\n      </Grid>\n      <AssignPathologiesDialog\n        open={assignPathologiesDialogOpen}\n        onClose={handleAssignPathologiesDialogClose}\n        patient={patient}\n        onAssign={fetchPathologies}\n      />\n      <AssignSymptomsDialog\n        open={assignSymptomsDialogOpen}\n        onClose={handleAssignSymptomsDialogClose}\n        patient={patient}\n        onAssign={fetchSymptoms}\n      />\n      <EditPatientDialog\n        open={editDialogOpen}\n        onClose={handleEditDialogClose}\n        onEditSubmit={handleEditSubmit}\n        patient={patient}\n      />\n    </Container>\n  );\n};\n\nexport default PatientProfile;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}