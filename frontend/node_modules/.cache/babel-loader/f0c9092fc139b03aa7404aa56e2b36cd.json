{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Davide Grieco\\\\Desktop\\\\CranialDevice_web\\\\frontend\\\\src\\\\pages\\\\pathologies\\\\PathologyList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Container, Typography, Table, TableBody, TableCell, TableHead, TableRow, Paper, Button, TablePagination, IconButton, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Checkbox, TextField } from '@mui/material';\nimport { Delete as DeleteIcon, Edit as EditIcon } from '@mui/icons-material';\nimport { useAuth } from '../../contexts/AuthContext';\nimport AddPathologyDialog from './AddPathologyDialog';\nimport EditPathologyDialog from './EditPathologyDialog';\nimport './PathologyList.css';\nimport HamburgerMenu from '../../components/HamburgerMenu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PathologyList() {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [pathologies, setPathologies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [addDialogOpen, setAddDialogOpen] = useState(false);\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n  const [selectedPathology, setSelectedPathology] = useState(null);\n  const [selectedPathologies, setSelectedPathologies] = useState([]);\n  useEffect(() => {\n    const fetchPathologies = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/pathologies', {\n          method: 'GET',\n          credentials: 'include'\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setPathologies(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPathologies();\n  }, []);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  const handleDelete = async ids => {\n    try {\n      const response = await fetch('http://localhost:5000/api/pathologies/bulk_delete', {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          ids\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      setPathologies(prevPathologies => prevPathologies.filter(pathology => !ids.includes(pathology.id)));\n      setDeleteDialogOpen(false);\n      setSelectedPathologies([]);\n      setSelectedPathology(null);\n    } catch (error) {\n      console.error('Error deleting pathology:', error.message);\n    }\n  };\n  const handleAddDialogOpen = () => {\n    setAddDialogOpen(true);\n  };\n  const handleAddDialogClose = () => {\n    setAddDialogOpen(false);\n  };\n  const handlePathologyAdded = () => {\n    setAddDialogOpen(false);\n    const fetchPathologies = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/pathologies', {\n          method: 'GET',\n          credentials: 'include'\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setPathologies(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPathologies();\n  };\n  const handleEditDialogOpen = pathology => {\n    setSelectedPathology(pathology);\n    setEditDialogOpen(true);\n  };\n  const handleEditDialogClose = () => {\n    setEditDialogOpen(false);\n    setSelectedPathology(null);\n  };\n  const handleEditSubmit = async updatedPathology => {\n    try {\n      const response = await fetch('http://localhost:5000/api/pathologies', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify(updatedPathology)\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      setPathologies(prevPathologies => prevPathologies.map(pathology => pathology.id === updatedPathology.id ? {\n        ...pathology,\n        ...updatedPathology\n      } : pathology));\n      setEditDialogOpen(false);\n      setSelectedPathology(null);\n    } catch (error) {\n      console.error('Error updating pathology:', error.message);\n    }\n  };\n  const handleDeleteDialogOpen = pathology => {\n    setSelectedPathology(pathology);\n    setDeleteDialogOpen(true);\n  };\n  const handleDeleteDialogClose = () => {\n    setDeleteDialogOpen(false);\n    setSelectedPathology(null);\n  };\n  const handleSelectPathology = id => {\n    if (selectedPathologies.includes(id)) {\n      setSelectedPathologies(selectedPathologies.filter(selectedId => selectedId !== id));\n    } else {\n      setSelectedPathologies([...selectedPathologies, id]);\n    }\n  };\n  const isSelected = id => selectedPathologies.includes(id);\n  const handleSelectAllPathologies = event => {\n    if (event.target.checked) {\n      const newSelecteds = pathologies.map(pathology => pathology.id);\n      setSelectedPathologies(newSelecteds);\n    } else {\n      setSelectedPathologies([]);\n    }\n  };\n  const isAllSelected = selectedPathologies.length === pathologies.length;\n  const handleMultipleDelete = () => {\n    setDeleteDialogOpen(true);\n    setSelectedPathology(null);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"root\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"root\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"root\",\n    children: [/*#__PURE__*/_jsxDEV(HamburgerMenu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        component: Paper,\n        className: \"table-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-header-container\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            gutterBottom: true,\n            children: \"Lista Patologie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), user && user.isAdmin && /*#__PURE__*/_jsxDEV(Button, {\n            className: \"add-pathology-btn\",\n            onClick: handleAddDialogOpen,\n            children: \"Aggiungi Patologia\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this), user && user.isAdmin && selectedPathologies.length > 0 && /*#__PURE__*/_jsxDEV(Button, {\n            color: \"secondary\",\n            onClick: handleMultipleDelete,\n            children: \"Elimina Selezionati\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          className: \"styled-table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [user && user.isAdmin && /*#__PURE__*/_jsxDEV(TableCell, {\n                padding: \"checkbox\",\n                children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  indeterminate: selectedPathologies.length > 0 && selectedPathologies.length < pathologies.length,\n                  checked: isAllSelected,\n                  onChange: handleSelectAllPathologies\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                className: \"table-header\",\n                children: \"Nome\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                className: \"table-header\",\n                children: \"Descrizione\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 17\n              }, this), user && user.isAdmin && /*#__PURE__*/_jsxDEV(TableCell, {\n                className: \"table-header\",\n                children: \"Azioni\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 42\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: pathologies.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(pathology => /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              role: \"checkbox\",\n              \"aria-checked\": isSelected(pathology.id),\n              selected: isSelected(pathology.id),\n              children: [user && user.isAdmin && /*#__PURE__*/_jsxDEV(TableCell, {\n                padding: \"checkbox\",\n                children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  checked: isSelected(pathology.id),\n                  onChange: () => handleSelectPathology(pathology.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: pathology.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: pathology.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 19\n              }, this), user && user.isAdmin && /*#__PURE__*/_jsxDEV(TableCell, {\n                children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => handleEditDialogOpen(pathology),\n                  color: \"primary\",\n                  children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 274,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => handleDeleteDialogOpen(pathology),\n                  color: \"secondary\",\n                  children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 21\n              }, this)]\n            }, pathology.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n          rowsPerPageOptions: [10, 25, 50],\n          component: \"div\",\n          count: pathologies.length,\n          rowsPerPage: rowsPerPage,\n          page: page,\n          onPageChange: handleChangePage,\n          onRowsPerPageChange: handleChangeRowsPerPage,\n          className: \"pagination\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), user && user.isAdmin && /*#__PURE__*/_jsxDEV(AddPathologyDialog, {\n      open: addDialogOpen,\n      onClose: handleAddDialogClose,\n      onPathologyAdded: handlePathologyAdded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 9\n    }, this), user && selectedPathology && /*#__PURE__*/_jsxDEV(EditPathologyDialog, {\n      open: editDialogOpen,\n      onClose: handleEditDialogClose,\n      onEditSubmit: handleEditSubmit,\n      pathology: selectedPathology\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: deleteDialogOpen,\n      onClose: handleDeleteDialogClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Conferma Eliminazione\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: selectedPathology ? `Sei sicuro di voler eliminare la patologia ${selectedPathology.name}?` : 'Sei sicuro di voler eliminare le patologie selezionate?'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleDeleteDialogClose,\n          color: \"primary\",\n          children: \"Annulla\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleDelete(selectedPathology ? [selectedPathology.id] : selectedPathologies),\n          color: \"primary\",\n          autoFocus: true,\n          children: \"Elimina\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 5\n  }, this);\n}\n_s(PathologyList, \"HpTCvmNexBUjCKBrOUpX84+bqWA=\", false, function () {\n  return [useAuth];\n});\n_c = PathologyList;\nexport default PathologyList;\nvar _c;\n$RefreshReg$(_c, \"PathologyList\");","map":{"version":3,"names":["React","useEffect","useState","Container","Typography","Table","TableBody","TableCell","TableHead","TableRow","Paper","Button","TablePagination","IconButton","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Checkbox","TextField","Delete","DeleteIcon","Edit","EditIcon","useAuth","AddPathologyDialog","EditPathologyDialog","HamburgerMenu","jsxDEV","_jsxDEV","PathologyList","_s","user","pathologies","setPathologies","loading","setLoading","error","setError","page","setPage","rowsPerPage","setRowsPerPage","addDialogOpen","setAddDialogOpen","deleteDialogOpen","setDeleteDialogOpen","editDialogOpen","setEditDialogOpen","selectedPathology","setSelectedPathology","selectedPathologies","setSelectedPathologies","fetchPathologies","response","fetch","method","credentials","ok","Error","data","json","message","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","handleDelete","ids","headers","body","JSON","stringify","prevPathologies","filter","pathology","includes","id","console","handleAddDialogOpen","handleAddDialogClose","handlePathologyAdded","handleEditDialogOpen","handleEditDialogClose","handleEditSubmit","updatedPathology","map","handleDeleteDialogOpen","handleDeleteDialogClose","handleSelectPathology","selectedId","isSelected","handleSelectAllPathologies","checked","newSelecteds","isAllSelected","length","handleMultipleDelete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","component","variant","gutterBottom","isAdmin","onClick","color","padding","indeterminate","onChange","slice","hover","role","selected","name","description","rowsPerPageOptions","count","onPageChange","onRowsPerPageChange","open","onClose","onPathologyAdded","onEditSubmit","autoFocus","_c","$RefreshReg$"],"sources":["C:/Users/Davide Grieco/Desktop/CranialDevice_web/frontend/src/pages/pathologies/PathologyList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Button,\r\n  TablePagination,\r\n  IconButton,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Checkbox,\r\n  TextField,\r\n} from '@mui/material';\r\nimport { Delete as DeleteIcon, Edit as EditIcon } from '@mui/icons-material';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport AddPathologyDialog from './AddPathologyDialog';\r\nimport EditPathologyDialog from './EditPathologyDialog';\r\nimport './PathologyList.css';\r\nimport HamburgerMenu from '../../components/HamburgerMenu';\r\n\r\nfunction PathologyList() {\r\n  const { user } = useAuth();\r\n  const [pathologies, setPathologies] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [addDialogOpen, setAddDialogOpen] = useState(false);\r\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\r\n  const [selectedPathology, setSelectedPathology] = useState(null);\r\n  const [selectedPathologies, setSelectedPathologies] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchPathologies = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/pathologies', {\r\n          method: 'GET',\r\n          credentials: 'include',\r\n        });\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        const data = await response.json();\r\n        setPathologies(data);\r\n      } catch (error) {\r\n        setError(error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchPathologies();\r\n  }, []);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleDelete = async (ids) => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/pathologies/bulk_delete', {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ ids }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n\r\n      setPathologies((prevPathologies) => prevPathologies.filter((pathology) => !ids.includes(pathology.id)));\r\n      setDeleteDialogOpen(false);\r\n      setSelectedPathologies([]);\r\n      setSelectedPathology(null);\r\n    } catch (error) {\r\n      console.error('Error deleting pathology:', error.message);\r\n    }\r\n  };\r\n\r\n  const handleAddDialogOpen = () => {\r\n    setAddDialogOpen(true);\r\n  };\r\n\r\n  const handleAddDialogClose = () => {\r\n    setAddDialogOpen(false);\r\n  };\r\n\r\n  const handlePathologyAdded = () => {\r\n    setAddDialogOpen(false);\r\n    const fetchPathologies = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/pathologies', {\r\n          method: 'GET',\r\n          credentials: 'include',\r\n        });\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        const data = await response.json();\r\n        setPathologies(data);\r\n      } catch (error) {\r\n        setError(error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchPathologies();\r\n  };\r\n\r\n  const handleEditDialogOpen = (pathology) => {\r\n    setSelectedPathology(pathology);\r\n    setEditDialogOpen(true);\r\n  };\r\n\r\n  const handleEditDialogClose = () => {\r\n    setEditDialogOpen(false);\r\n    setSelectedPathology(null);\r\n  };\r\n\r\n  const handleEditSubmit = async (updatedPathology) => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/pathologies', {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify(updatedPathology),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n\r\n      setPathologies((prevPathologies) =>\r\n        prevPathologies.map((pathology) =>\r\n          pathology.id === updatedPathology.id ? { ...pathology, ...updatedPathology } : pathology\r\n        )\r\n      );\r\n      setEditDialogOpen(false);\r\n      setSelectedPathology(null);\r\n    } catch (error) {\r\n      console.error('Error updating pathology:', error.message);\r\n    }\r\n  };\r\n\r\n  const handleDeleteDialogOpen = (pathology) => {\r\n    setSelectedPathology(pathology);\r\n    setDeleteDialogOpen(true);\r\n  };\r\n\r\n  const handleDeleteDialogClose = () => {\r\n    setDeleteDialogOpen(false);\r\n    setSelectedPathology(null);\r\n  };\r\n\r\n  const handleSelectPathology = (id) => {\r\n    if (selectedPathologies.includes(id)) {\r\n      setSelectedPathologies(selectedPathologies.filter((selectedId) => selectedId !== id));\r\n    } else {\r\n      setSelectedPathologies([...selectedPathologies, id]);\r\n    }\r\n  };\r\n\r\n  const isSelected = (id) => selectedPathologies.includes(id);\r\n\r\n  const handleSelectAllPathologies = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = pathologies.map((pathology) => pathology.id);\r\n      setSelectedPathologies(newSelecteds);\r\n    } else {\r\n      setSelectedPathologies([]);\r\n    }\r\n  };\r\n\r\n  const isAllSelected = selectedPathologies.length === pathologies.length;\r\n\r\n  const handleMultipleDelete = () => {\r\n    setDeleteDialogOpen(true);\r\n    setSelectedPathology(null);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"root\">\r\n        <Typography>Loading...</Typography>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"root\">\r\n        <Typography>Error: {error}</Typography>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"root\">\r\n      <HamburgerMenu />\r\n      <div className=\"content\">\r\n        <Container component={Paper} className=\"table-container\">\r\n          <div className=\"table-header-container\">\r\n            <Typography variant=\"h4\" gutterBottom>\r\n              Lista Patologie\r\n            </Typography>\r\n            {user && user.isAdmin && (\r\n              <Button className=\"add-pathology-btn\" onClick={handleAddDialogOpen}>\r\n                Aggiungi Patologia\r\n              </Button>\r\n            )}\r\n            {user && user.isAdmin && selectedPathologies.length > 0 && (\r\n              <Button color=\"secondary\" onClick={handleMultipleDelete}>\r\n                Elimina Selezionati\r\n              </Button>\r\n            )}\r\n          </div>\r\n          <Table className=\"styled-table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {user && user.isAdmin && (\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      indeterminate={selectedPathologies.length > 0 && selectedPathologies.length < pathologies.length}\r\n                      checked={isAllSelected}\r\n                      onChange={handleSelectAllPathologies}\r\n                    />\r\n                  </TableCell>\r\n                )}\r\n                <TableCell className=\"table-header\">Nome</TableCell>\r\n                <TableCell className=\"table-header\">Descrizione</TableCell>\r\n                {user && user.isAdmin && <TableCell className=\"table-header\">Azioni</TableCell>}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {pathologies.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((pathology) => (\r\n                <TableRow\r\n                  key={pathology.id}\r\n                  hover\r\n                  role=\"checkbox\"\r\n                  aria-checked={isSelected(pathology.id)}\r\n                  selected={isSelected(pathology.id)}\r\n                >\r\n                  {user && user.isAdmin && (\r\n                    <TableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        checked={isSelected(pathology.id)}\r\n                        onChange={() => handleSelectPathology(pathology.id)}\r\n                      />\r\n                    </TableCell>\r\n                  )}\r\n                  <TableCell>{pathology.name}</TableCell>\r\n                  <TableCell>{pathology.description}</TableCell>\r\n                  {user && user.isAdmin && (\r\n                    <TableCell>\r\n                      <IconButton onClick={() => handleEditDialogOpen(pathology)} color=\"primary\">\r\n                        <EditIcon />\r\n                      </IconButton>\r\n                      <IconButton onClick={() => handleDeleteDialogOpen(pathology)} color=\"secondary\">\r\n                        <DeleteIcon />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  )}\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n          <TablePagination\r\n            rowsPerPageOptions={[10, 25, 50]}\r\n            component=\"div\"\r\n            count={pathologies.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n            className=\"pagination\"\r\n          />\r\n        </Container>\r\n      </div>\r\n      {user && user.isAdmin && (\r\n        <AddPathologyDialog open={addDialogOpen} onClose={handleAddDialogClose} onPathologyAdded={handlePathologyAdded} />\r\n      )}\r\n      {user && selectedPathology && (\r\n        <EditPathologyDialog\r\n          open={editDialogOpen}\r\n          onClose={handleEditDialogClose}\r\n          onEditSubmit={handleEditSubmit}\r\n          pathology={selectedPathology}\r\n        />\r\n      )}\r\n      <Dialog open={deleteDialogOpen} onClose={handleDeleteDialogClose}>\r\n        <DialogTitle>Conferma Eliminazione</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {selectedPathology\r\n              ? `Sei sicuro di voler eliminare la patologia ${selectedPathology.name}?`\r\n              : 'Sei sicuro di voler eliminare le patologie selezionate?'}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDeleteDialogClose} color=\"primary\">\r\n            Annulla\r\n          </Button>\r\n          <Button\r\n            onClick={() => handleDelete(selectedPathology ? [selectedPathology.id] : selectedPathologies)}\r\n            color=\"primary\"\r\n            autoFocus\r\n          >\r\n            Elimina\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PathologyList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}