{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\morga\\\\Desktop\\\\CranialDevice_web\\\\CranialDevice_web\\\\frontend\\\\src\\\\pages\\\\patients\\\\PatientList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Container, Typography, Table, TableBody, TableCell, TableHead, TableRow, Paper, Button, TablePagination, IconButton, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Checkbox, Link } from '@mui/material';\nimport { Delete as DeleteIcon, Edit as EditIcon } from '@mui/icons-material';\nimport { useAuth } from '../../contexts/AuthContext';\nimport AddPatientDialog from './AddPatientDialog';\nimport EditPatientDialog from './EditPatientDialog';\nimport { useNavigate } from 'react-router-dom';\nimport './PatientList.css';\nimport HamburgerMenu from '../../components/HamburgerMenu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PatientList() {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const navigate = useNavigate();\n  const [patients, setPatients] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [addDialogOpen, setAddDialogOpen] = useState(false);\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n  const [selectedPatient, setSelectedPatient] = useState(null);\n  const [selectedPatients, setSelectedPatients] = useState([]);\n  useEffect(() => {\n    const fetchPatients = async () => {\n      if (!user) return;\n      try {\n        const endpoint = user.isAdmin ? '/api/patients' : `/api/patients/assigned?doctor_name=${user.name}`;\n        const response = await fetch(`http://localhost:5000${endpoint}`, {\n          method: 'GET',\n          credentials: 'include'\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setPatients(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPatients();\n  }, [user]);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  const handleDelete = async uuids => {\n    try {\n      console.log(`Deleting patients with UUIDs: ${uuids}`); // Log UUIDs being sent for deletion\n\n      const response = await fetch(`http://localhost:5000/api/patients/bulk_delete`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          uuids\n        }) // Assicurati che i dati siano inviati come JSON\n      });\n      if (!response.ok) {\n        const errorMessage = await response.json();\n        throw new Error(errorMessage.message);\n      }\n\n      // Aggiorna la lista dei pazienti dopo la cancellazione\n      setPatients(prevPatients => prevPatients.filter(patient => !uuids.includes(patient.uuid)));\n      setDeleteDialogOpen(false);\n      setSelectedPatients([]);\n      setSelectedPatient(null);\n    } catch (error) {\n      console.error('Error deleting patient:', error.message);\n    }\n  };\n  const handleAddDialogOpen = () => {\n    setAddDialogOpen(true);\n  };\n  const handleAddDialogClose = () => {\n    setAddDialogOpen(false);\n  };\n  const handlePatientAdded = () => {\n    setAddDialogOpen(false);\n    // Ricarica i pazienti dopo aver aggiunto un nuovo paziente\n    const fetchPatients = async () => {\n      try {\n        const endpoint = user.isAdmin ? '/api/patients' : `/api/patients/assigned?doctor_name=${user.name}`;\n        const response = await fetch(`http://localhost:5000${endpoint}`, {\n          method: 'GET',\n          credentials: 'include'\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setPatients(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPatients();\n  };\n  const handleEditDialogOpen = patient => {\n    setSelectedPatient(patient);\n    setEditDialogOpen(true);\n  };\n  const handleEditDialogClose = () => {\n    setEditDialogOpen(false);\n    setSelectedPatient(null);\n  };\n  const handleEditSubmit = async updatedPatient => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/patients`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify(updatedPatient)\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      // Aggiorna la lista dei pazienti dopo la modifica\n      setPatients(prevPatients => prevPatients.map(patient => patient.uuid === updatedPatient.uuid ? {\n        ...patient,\n        ...updatedPatient\n      } : patient));\n      setEditDialogOpen(false);\n      setSelectedPatient(null);\n    } catch (error) {\n      console.error('Error updating patient:', error.message);\n    }\n  };\n  const handleDeleteDialogOpen = patient => {\n    setSelectedPatient(patient);\n    setDeleteDialogOpen(true);\n  };\n  const handleDeleteDialogClose = () => {\n    setDeleteDialogOpen(false);\n    setSelectedPatient(null);\n  };\n  const handleSelectPatient = uuid => {\n    if (selectedPatients.includes(uuid)) {\n      setSelectedPatients(selectedPatients.filter(id => id !== uuid));\n    } else {\n      setSelectedPatients([...selectedPatients, uuid]);\n    }\n  };\n  const isSelected = uuid => selectedPatients.includes(uuid);\n  const handleSelectAllPatients = event => {\n    if (event.target.checked) {\n      const newSelecteds = patients.map(patient => patient.uuid);\n      setSelectedPatients(newSelecteds);\n    } else {\n      setSelectedPatients([]);\n    }\n  };\n  const isAllSelected = selectedPatients.length === patients.length;\n  const handleMultipleDelete = () => {\n    setDeleteDialogOpen(true);\n    setSelectedPatient(null);\n  };\n  const handlePatientInfoOpen = patient => {\n    navigate(`/patients/${patient.uuid}`);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"root\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"root\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"root\",\n    children: [/*#__PURE__*/_jsxDEV(HamburgerMenu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        component: Paper,\n        className: \"table-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-header-container\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            gutterBottom: true,\n            align: \"center\",\n            className: \"table-title\",\n            children: \"Lista Pazienti\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), user && !user.isAdmin && /*#__PURE__*/_jsxDEV(Button, {\n            className: \"add-patient-btn\",\n            onClick: handleAddDialogOpen,\n            children: \"Aggiungi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this), user && !user.isAdmin && selectedPatients.length > 0 && /*#__PURE__*/_jsxDEV(Button, {\n            color: \"secondary\",\n            onClick: handleMultipleDelete,\n            children: \"Elimina Selezionati\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          className: \"styled-table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [user && !user.isAdmin && /*#__PURE__*/_jsxDEV(TableCell, {\n                padding: \"checkbox\",\n                children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  indeterminate: selectedPatients.length > 0 && selectedPatients.length < patients.length,\n                  checked: isAllSelected,\n                  onChange: handleSelectAllPatients\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                className: \"table-header\",\n                children: \"Nominativo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                className: \"table-header\",\n                children: \"Et\\xE0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                className: \"table-header\",\n                children: \"Altezza\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                className: \"table-header\",\n                children: \"Peso\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 17\n              }, this), user && user.isAdmin && /*#__PURE__*/_jsxDEV(TableCell, {\n                className: \"table-header\",\n                children: \"Dottore\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 42\n              }, this), user && !user.isAdmin && /*#__PURE__*/_jsxDEV(TableCell, {\n                className: \"table-header\",\n                children: \"Azioni\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 43\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: patients.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(patient => /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              role: \"checkbox\",\n              \"aria-checked\": isSelected(patient.uuid),\n              selected: isSelected(patient.uuid),\n              children: [user && !user.isAdmin && /*#__PURE__*/_jsxDEV(TableCell, {\n                padding: \"checkbox\",\n                children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  checked: isSelected(patient.uuid),\n                  onChange: () => handleSelectPatient(patient.uuid)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  component: \"button\",\n                  onClick: () => handlePatientInfoOpen(patient),\n                  children: patient.nominativo\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: patient.eta\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: patient.altezza\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: patient.peso\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 19\n              }, this), user && user.isAdmin && /*#__PURE__*/_jsxDEV(TableCell, {\n                children: patient.doctor_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 44\n              }, this), user && !user.isAdmin && /*#__PURE__*/_jsxDEV(TableCell, {\n                children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => handleEditDialogOpen(patient),\n                  color: \"primary\",\n                  disabled: selectedPatients.length > 0,\n                  children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 300,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => handleDeleteDialogOpen(patient),\n                  color: \"secondary\",\n                  children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 303,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 21\n              }, this)]\n            }, patient.uuid, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n          rowsPerPageOptions: [10, 25, 50],\n          component: \"div\",\n          count: patients.length,\n          rowsPerPage: rowsPerPage,\n          page: page,\n          onPageChange: handleChangePage,\n          onRowsPerPageChange: handleChangeRowsPerPage,\n          className: \"pagination\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), user && /*#__PURE__*/_jsxDEV(AddPatientDialog, {\n      open: addDialogOpen,\n      onClose: handleAddDialogClose,\n      onPatientAdded: handlePatientAdded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 9\n    }, this), user && selectedPatient && /*#__PURE__*/_jsxDEV(EditPatientDialog, {\n      open: editDialogOpen,\n      onClose: handleEditDialogClose,\n      onEditSubmit: handleEditSubmit,\n      patient: selectedPatient\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: deleteDialogOpen,\n      onClose: handleDeleteDialogClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Conferma Eliminazione\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: selectedPatient ? `Sei sicuro di voler eliminare il paziente ${selectedPatient.nominativo}?` : 'Sei sicuro di voler eliminare i pazienti selezionati?'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleDeleteDialogClose,\n          color: \"primary\",\n          children: \"Annulla\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleDelete(selectedPatient ? [selectedPatient.uuid] : selectedPatients),\n          color: \"primary\",\n          autoFocus: true,\n          children: \"Elimina\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 5\n  }, this);\n}\n_s(PatientList, \"rUoOf85oa0KY3rC7xQfhhtoBOo0=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = PatientList;\nexport default PatientList;\nvar _c;\n$RefreshReg$(_c, \"PatientList\");","map":{"version":3,"names":["React","useEffect","useState","Container","Typography","Table","TableBody","TableCell","TableHead","TableRow","Paper","Button","TablePagination","IconButton","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Checkbox","Link","Delete","DeleteIcon","Edit","EditIcon","useAuth","AddPatientDialog","EditPatientDialog","useNavigate","HamburgerMenu","jsxDEV","_jsxDEV","PatientList","_s","user","navigate","patients","setPatients","loading","setLoading","error","setError","page","setPage","rowsPerPage","setRowsPerPage","addDialogOpen","setAddDialogOpen","deleteDialogOpen","setDeleteDialogOpen","editDialogOpen","setEditDialogOpen","selectedPatient","setSelectedPatient","selectedPatients","setSelectedPatients","fetchPatients","endpoint","isAdmin","name","response","fetch","method","credentials","ok","Error","data","json","message","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","handleDelete","uuids","console","log","headers","body","JSON","stringify","errorMessage","prevPatients","filter","patient","includes","uuid","handleAddDialogOpen","handleAddDialogClose","handlePatientAdded","handleEditDialogOpen","handleEditDialogClose","handleEditSubmit","updatedPatient","map","handleDeleteDialogOpen","handleDeleteDialogClose","handleSelectPatient","id","isSelected","handleSelectAllPatients","checked","newSelecteds","isAllSelected","length","handleMultipleDelete","handlePatientInfoOpen","className","children","fileName","_jsxFileName","lineNumber","columnNumber","component","variant","gutterBottom","align","onClick","color","padding","indeterminate","onChange","slice","hover","role","selected","nominativo","eta","altezza","peso","doctor_name","disabled","rowsPerPageOptions","count","onPageChange","onRowsPerPageChange","open","onClose","onPatientAdded","onEditSubmit","autoFocus","_c","$RefreshReg$"],"sources":["C:/Users/morga/Desktop/CranialDevice_web/CranialDevice_web/frontend/src/pages/patients/PatientList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  Container,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Paper,\n  Button,\n  TablePagination,\n  IconButton,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Checkbox,\n  Link,\n} from '@mui/material';\nimport { Delete as DeleteIcon, Edit as EditIcon } from '@mui/icons-material';\nimport { useAuth } from '../../contexts/AuthContext';\nimport AddPatientDialog from './AddPatientDialog';\nimport EditPatientDialog from './EditPatientDialog';\nimport { useNavigate } from 'react-router-dom';\nimport './PatientList.css';\nimport HamburgerMenu from '../../components/HamburgerMenu';\n\nfunction PatientList() {\n  const { user } = useAuth();\n  const navigate = useNavigate();\n  const [patients, setPatients] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [addDialogOpen, setAddDialogOpen] = useState(false);\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n  const [selectedPatient, setSelectedPatient] = useState(null);\n  const [selectedPatients, setSelectedPatients] = useState([]);\n\n  useEffect(() => {\n    const fetchPatients = async () => {\n      if (!user) return;\n\n      try {\n        const endpoint = user.isAdmin ? '/api/patients' : `/api/patients/assigned?doctor_name=${user.name}`;\n        const response = await fetch(`http://localhost:5000${endpoint}`, {\n          method: 'GET',\n          credentials: 'include',\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setPatients(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPatients();\n  }, [user]);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleDelete = async (uuids) => {\n    try {\n      console.log(`Deleting patients with UUIDs: ${uuids}`); // Log UUIDs being sent for deletion\n\n      const response = await fetch(`http://localhost:5000/api/patients/bulk_delete`, {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        credentials: 'include',\n        body: JSON.stringify({ uuids }),  // Assicurati che i dati siano inviati come JSON\n      });\n\n      if (!response.ok) {\n        const errorMessage = await response.json();\n        throw new Error(errorMessage.message);\n      }\n\n      // Aggiorna la lista dei pazienti dopo la cancellazione\n      setPatients((prevPatients) => prevPatients.filter((patient) => !uuids.includes(patient.uuid)));\n      setDeleteDialogOpen(false);\n      setSelectedPatients([]);\n      setSelectedPatient(null);\n    } catch (error) {\n      console.error('Error deleting patient:', error.message);\n    }\n  };\n\n  const handleAddDialogOpen = () => {\n    setAddDialogOpen(true);\n  };\n\n  const handleAddDialogClose = () => {\n    setAddDialogOpen(false);\n  };\n\n  const handlePatientAdded = () => {\n    setAddDialogOpen(false);\n    // Ricarica i pazienti dopo aver aggiunto un nuovo paziente\n    const fetchPatients = async () => {\n      try {\n        const endpoint = user.isAdmin ? '/api/patients' : `/api/patients/assigned?doctor_name=${user.name}`;\n        const response = await fetch(`http://localhost:5000${endpoint}`, {\n          method: 'GET',\n          credentials: 'include',\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setPatients(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPatients();\n  };\n\n  const handleEditDialogOpen = (patient) => {\n    setSelectedPatient(patient);\n    setEditDialogOpen(true);\n  };\n\n  const handleEditDialogClose = () => {\n    setEditDialogOpen(false);\n    setSelectedPatient(null);\n  };\n\n  const handleEditSubmit = async (updatedPatient) => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/patients`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        credentials: 'include',\n        body: JSON.stringify(updatedPatient),\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      // Aggiorna la lista dei pazienti dopo la modifica\n      setPatients((prevPatients) =>\n        prevPatients.map((patient) =>\n          patient.uuid === updatedPatient.uuid ? { ...patient, ...updatedPatient } : patient\n        )\n      );\n      setEditDialogOpen(false);\n      setSelectedPatient(null);\n    } catch (error) {\n      console.error('Error updating patient:', error.message);\n    }\n  };\n\n  const handleDeleteDialogOpen = (patient) => {\n    setSelectedPatient(patient);\n    setDeleteDialogOpen(true);\n  };\n\n  const handleDeleteDialogClose = () => {\n    setDeleteDialogOpen(false);\n    setSelectedPatient(null);\n  };\n\n  const handleSelectPatient = (uuid) => {\n    if (selectedPatients.includes(uuid)) {\n      setSelectedPatients(selectedPatients.filter((id) => id !== uuid));\n    } else {\n      setSelectedPatients([...selectedPatients, uuid]);\n    }\n  };\n\n  const isSelected = (uuid) => selectedPatients.includes(uuid);\n\n  const handleSelectAllPatients = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = patients.map((patient) => patient.uuid);\n      setSelectedPatients(newSelecteds);\n    } else {\n      setSelectedPatients([]);\n    }\n  };\n\n  const isAllSelected = selectedPatients.length === patients.length;\n\n  const handleMultipleDelete = () => {\n    setDeleteDialogOpen(true);\n    setSelectedPatient(null);\n  };\n\n  const handlePatientInfoOpen = (patient) => {\n    navigate(`/patients/${patient.uuid}`);\n  };\n\n  if (loading) {\n    return (\n      <div className=\"root\">\n        <Typography>Loading...</Typography>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"root\">\n        <Typography>Error: {error}</Typography>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"root\">\n      <HamburgerMenu />\n      <div className=\"content\">\n        <Container component={Paper} className=\"table-container\">\n          <div className=\"table-header-container\">\n            <Typography variant=\"h4\" gutterBottom align=\"center\" className=\"table-title\">\n              Lista Pazienti\n            </Typography>\n            {user && !user.isAdmin && (\n              <Button className=\"add-patient-btn\" onClick={handleAddDialogOpen}>\n                Aggiungi\n              </Button>\n            )}\n            {user && !user.isAdmin && selectedPatients.length > 0 && (\n              <Button color=\"secondary\" onClick={handleMultipleDelete}>\n                Elimina Selezionati\n              </Button>\n            )}\n          </div>\n          <Table className=\"styled-table\">\n            <TableHead>\n              <TableRow>\n                {user && !user.isAdmin && (\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      indeterminate={selectedPatients.length > 0 && selectedPatients.length < patients.length}\n                      checked={isAllSelected}\n                      onChange={handleSelectAllPatients}\n                    />\n                  </TableCell>\n                )}\n                <TableCell className=\"table-header\">Nominativo</TableCell>\n                <TableCell className=\"table-header\">Età</TableCell>\n                <TableCell className=\"table-header\">Altezza</TableCell>\n                <TableCell className=\"table-header\">Peso</TableCell>\n                {user && user.isAdmin && <TableCell className=\"table-header\">Dottore</TableCell>}\n                {user && !user.isAdmin && <TableCell className=\"table-header\">Azioni</TableCell>}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {patients.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((patient) => (\n                <TableRow\n                  key={patient.uuid}\n                  hover\n                  role=\"checkbox\"\n                  aria-checked={isSelected(patient.uuid)}\n                  selected={isSelected(patient.uuid)}\n                >\n                  {user && !user.isAdmin && (\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        checked={isSelected(patient.uuid)}\n                        onChange={() => handleSelectPatient(patient.uuid)}\n                      />\n                    </TableCell>\n                  )}\n                  <TableCell>\n                    <Link component=\"button\" onClick={() => handlePatientInfoOpen(patient)}>\n                      {patient.nominativo}\n                    </Link>\n                  </TableCell>\n                  <TableCell>{patient.eta}</TableCell>\n                  <TableCell>{patient.altezza}</TableCell>\n                  <TableCell>{patient.peso}</TableCell>\n                  {user && user.isAdmin && <TableCell>{patient.doctor_name}</TableCell>}\n                  {user && !user.isAdmin && (\n                    <TableCell>\n                      <IconButton onClick={() => handleEditDialogOpen(patient)} color=\"primary\" disabled={selectedPatients.length > 0}>\n                        <EditIcon />\n                      </IconButton>\n                      <IconButton onClick={() => handleDeleteDialogOpen(patient)} color=\"secondary\">\n                        <DeleteIcon />\n                      </IconButton>\n                    </TableCell>\n                  )}\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n          <TablePagination\n            rowsPerPageOptions={[10, 25, 50]}\n            component=\"div\"\n            count={patients.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onPageChange={handleChangePage}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n            className=\"pagination\"\n          />\n        </Container>\n      </div>\n      {user && (\n        <AddPatientDialog open={addDialogOpen} onClose={handleAddDialogClose} onPatientAdded={handlePatientAdded} />\n      )}\n      {user && selectedPatient && (\n        <EditPatientDialog\n          open={editDialogOpen}\n          onClose={handleEditDialogClose}\n          onEditSubmit={handleEditSubmit}\n          patient={selectedPatient}\n        />\n      )}\n      <Dialog open={deleteDialogOpen} onClose={handleDeleteDialogClose}>\n        <DialogTitle>Conferma Eliminazione</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            {selectedPatient\n              ? `Sei sicuro di voler eliminare il paziente ${selectedPatient.nominativo}?`\n              : 'Sei sicuro di voler eliminare i pazienti selezionati?'}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleDeleteDialogClose} color=\"primary\">\n            Annulla\n          </Button>\n          <Button\n            onClick={() => handleDelete(selectedPatient ? [selectedPatient.uuid] : selectedPatients)}\n            color=\"primary\"\n            autoFocus\n          >\n            Elimina\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default PatientList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}