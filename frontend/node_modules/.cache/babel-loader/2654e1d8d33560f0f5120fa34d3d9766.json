{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\morga\\\\Desktop\\\\CranialDevice_web\\\\CranialDevice_web\\\\frontend\\\\src\\\\pages\\\\pathologies\\\\PathologyList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Container, Typography, Table, TableBody, TableCell, TableHead, TableRow, Paper, Button, TablePagination, IconButton, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Checkbox, Box, Link } from '@mui/material';\nimport { styled } from '@mui/system';\nimport { useNavigate } from 'react-router-dom';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddIcon from '@mui/icons-material/Add';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { useAuth } from '../../contexts/AuthContext';\nimport AddPathologyDialog from './AddPathologyDialog';\nimport EditPathologyDialog from './EditPathologyDialog';\nimport { ClipLoader } from 'react-spinners';\nimport BackgroundWrapper from '../../components/BackgroundWrapper'; // Importa BackgroundWrapper\nimport './PathologyList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Root = styled('div')({\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  height: '62vm',\n  backgroundColor: '#ffffff',\n  opacity: 0.9,\n  marginTop: '2%'\n});\nconst StyledTable = styled(Table)({\n  minWidth: 650,\n  '& .MuiTableCell-head': {\n    backgroundColor: '#f1f1f1',\n    fontWeight: 'bold',\n    fontSize: 21\n  },\n  '& .MuiTableCell-body': {\n    fontSize: 16\n  },\n  '& .MuiTableRow-root:last-child .MuiTableCell-root': {\n    borderBottom: '2px solid #155677' // Cambia il colore della riga inferiore qui\n  }\n});\nconst Header = styled('div')({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  width: '100%',\n  marginBottom: 16,\n  marginTop: '2%'\n});\nconst AddButton = styled(Button)({\n  backgroundColor: '#155677',\n  // Cambia il colore del bottone\n  color: '#fff',\n  '&:hover': {\n    backgroundColor: '#0d3e4f' // Cambia il colore al passaggio del mouse\n  }\n});\nconst HamburgerMenuWrapper = styled('div')({\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  zIndex: 2\n});\nfunction PathologyList() {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const navigate = useNavigate();\n  const [pathologies, setPathologies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [addDialogOpen, setAddDialogOpen] = useState(false);\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n  const [selectedPathology, setSelectedPathology] = useState(null);\n  const [selectedPathologies, setSelectedPathologies] = useState([]);\n  useEffect(() => {\n    const fetchPathologies = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/pathologies', {\n          method: 'GET',\n          credentials: 'include'\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setPathologies(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPathologies();\n  }, []);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  const handleDelete = async ids => {\n    try {\n      const response = await fetch('http://localhost:5000/api/pathologies/bulk_delete', {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          ids\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      setPathologies(prevPathologies => prevPathologies.filter(pathology => !ids.includes(pathology.id)));\n      setDeleteDialogOpen(false);\n      setSelectedPathologies([]);\n      setSelectedPathology(null);\n    } catch (error) {\n      console.error('Error deleting pathology:', error.message);\n    }\n  };\n  const handleAddDialogOpen = () => {\n    setAddDialogOpen(true);\n  };\n  const handleAddDialogClose = () => {\n    setAddDialogOpen(false);\n  };\n  const handlePathologyAdded = () => {\n    setAddDialogOpen(false);\n    const fetchPathologies = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/pathologies', {\n          method: 'GET',\n          credentials: 'include'\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setPathologies(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPathologies();\n  };\n  const handleEditDialogOpen = pathology => {\n    setSelectedPathology(pathology);\n    setEditDialogOpen(true);\n  };\n  const handleEditDialogClose = () => {\n    setEditDialogOpen(false);\n    setSelectedPathology(null);\n  };\n  const handleEditSubmit = async updatedPathology => {\n    try {\n      const response = await fetch('http://localhost:5000/api/pathologies', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify(updatedPathology)\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      setPathologies(prevPathologies => prevPathologies.map(pathology => pathology.id === updatedPathology.id ? {\n        ...pathology,\n        ...updatedPathology\n      } : pathology));\n      setEditDialogOpen(false);\n      setSelectedPathology(null);\n    } catch (error) {\n      console.error('Error updating pathology:', error.message);\n    }\n  };\n  const handleDeleteDialogOpen = pathology => {\n    setSelectedPathology(pathology);\n    setDeleteDialogOpen(true);\n  };\n  const handleDeleteDialogClose = () => {\n    setDeleteDialogOpen(false);\n    setSelectedPathology(null);\n  };\n  const handleSelectPathology = id => {\n    if (selectedPathologies.includes(id)) {\n      setSelectedPathologies(selectedPathologies.filter(selectedId => selectedId !== id));\n    } else {\n      setSelectedPathologies([...selectedPathologies, id]);\n    }\n  };\n  const isSelected = id => selectedPathologies.includes(id);\n  const handleSelectAllPathologies = event => {\n    if (event.target.checked) {\n      const newSelecteds = pathologies.map(pathology => pathology.id);\n      setSelectedPathologies(newSelecteds);\n    } else {\n      setSelectedPathologies([]);\n    }\n  };\n  const isAllSelected = selectedPathologies.length === pathologies.length;\n  const handleMultipleDelete = () => {\n    setDeleteDialogOpen(true);\n    setSelectedPathology(null);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Root, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(ClipLoader, {\n          size: 50,\n          color: \"#123abc\",\n          loading: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          style: {\n            marginTop: '20px'\n          },\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Root, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"error\",\n          children: [\"Error: \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => window.location.reload(),\n          children: \"Retry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(BackgroundWrapper, {\n    children: /*#__PURE__*/_jsxDEV(Root, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          component: Paper,\n          className: \"table-container\",\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            children: [/*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: () => navigate('/main'),\n              children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              component: \"h1\",\n              gutterBottom: true,\n              children: \"Lista Patologie\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this), user && user.isAdmin && /*#__PURE__*/_jsxDEV(AddButton, {\n              variant: \"contained\",\n              color: \"primary\",\n              startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 30\n              }, this),\n              onClick: handleAddDialogOpen,\n              children: \"Aggiungi Patologia\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StyledTable, {\n            className: \"styled-table\",\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [user && user.isAdmin && /*#__PURE__*/_jsxDEV(TableCell, {\n                  padding: \"checkbox\",\n                  children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                    indeterminate: selectedPathologies.length > 0 && selectedPathologies.length < pathologies.length,\n                    checked: isAllSelected,\n                    onChange: handleSelectAllPathologies\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 307,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  className: \"table-header\",\n                  children: \"Nome\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  className: \"table-header\",\n                  children: \"Descrizione\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 19\n                }, this), user && user.isAdmin && /*#__PURE__*/_jsxDEV(TableCell, {\n                  className: \"table-header\",\n                  children: \"Azioni\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 44\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: pathologies.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(pathology => /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                role: \"checkbox\",\n                \"aria-checked\": isSelected(pathology.id),\n                selected: isSelected(pathology.id),\n                children: [user && user.isAdmin && /*#__PURE__*/_jsxDEV(TableCell, {\n                  padding: \"checkbox\",\n                  children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                    checked: isSelected(pathology.id),\n                    onChange: () => handleSelectPathology(pathology.id)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 330,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: pathology.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: pathology.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 21\n                }, this), user && user.isAdmin && /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                    onClick: () => handleEditDialogOpen(pathology),\n                    color: \"primary\",\n                    children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 341,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 340,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                    onClick: () => handleDeleteDialogOpen(pathology),\n                    color: \"secondary\",\n                    children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 344,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 343,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 23\n                }, this)]\n              }, pathology.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n            rowsPerPageOptions: [5, 10],\n            component: \"div\",\n            count: pathologies.length,\n            rowsPerPage: rowsPerPage,\n            page: page,\n            onPageChange: handleChangePage,\n            onRowsPerPageChange: handleChangeRowsPerPage,\n            className: \"pagination\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this), user && user.isAdmin && /*#__PURE__*/_jsxDEV(AddPathologyDialog, {\n        open: addDialogOpen,\n        onClose: handleAddDialogClose,\n        onPathologyAdded: handlePathologyAdded\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 11\n      }, this), user && user.isAdmin && selectedPathology && /*#__PURE__*/_jsxDEV(EditPathologyDialog, {\n        open: editDialogOpen,\n        onClose: handleEditDialogClose,\n        onEditSubmit: handleEditSubmit,\n        pathology: selectedPathology\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: deleteDialogOpen,\n        onClose: handleDeleteDialogClose,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Conferma Eliminazione\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n            children: selectedPathology ? `Sei sicuro di voler eliminare la patologia ${selectedPathology.name}?` : 'Sei sicuro di voler eliminare le patologie selezionate?'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleDeleteDialogClose,\n            color: \"primary\",\n            children: \"Annulla\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleDelete(selectedPathology ? [selectedPathology.id] : selectedPathologies),\n            color: \"primary\",\n            autoFocus: true,\n            children: \"Elimina\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 280,\n    columnNumber: 5\n  }, this);\n}\n_s(PathologyList, \"T2QxQI9LM7OaUKDObDydetzQoGs=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = PathologyList;\nexport default PathologyList;\nvar _c;\n$RefreshReg$(_c, \"PathologyList\");","map":{"version":3,"names":["React","useEffect","useState","Container","Typography","Table","TableBody","TableCell","TableHead","TableRow","Paper","Button","TablePagination","IconButton","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Checkbox","Box","Link","styled","useNavigate","EditIcon","DeleteIcon","AddIcon","CloseIcon","useAuth","AddPathologyDialog","EditPathologyDialog","ClipLoader","BackgroundWrapper","jsxDEV","_jsxDEV","Root","display","justifyContent","alignItems","height","backgroundColor","opacity","marginTop","StyledTable","minWidth","fontWeight","fontSize","borderBottom","Header","width","marginBottom","AddButton","color","HamburgerMenuWrapper","position","top","left","zIndex","PathologyList","_s","user","navigate","pathologies","setPathologies","loading","setLoading","error","setError","page","setPage","rowsPerPage","setRowsPerPage","addDialogOpen","setAddDialogOpen","deleteDialogOpen","setDeleteDialogOpen","editDialogOpen","setEditDialogOpen","selectedPathology","setSelectedPathology","selectedPathologies","setSelectedPathologies","fetchPathologies","response","fetch","method","credentials","ok","Error","data","json","message","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","handleDelete","ids","headers","body","JSON","stringify","prevPathologies","filter","pathology","includes","id","console","handleAddDialogOpen","handleAddDialogClose","handlePathologyAdded","handleEditDialogOpen","handleEditDialogClose","handleEditSubmit","updatedPathology","map","handleDeleteDialogOpen","handleDeleteDialogClose","handleSelectPathology","selectedId","isSelected","handleSelectAllPathologies","checked","newSelecteds","isAllSelected","length","handleMultipleDelete","children","flexDirection","size","fileName","_jsxFileName","lineNumber","columnNumber","variant","style","onClick","window","location","reload","className","component","gutterBottom","isAdmin","startIcon","padding","indeterminate","onChange","slice","hover","role","selected","name","description","rowsPerPageOptions","count","onPageChange","onRowsPerPageChange","open","onClose","onPathologyAdded","onEditSubmit","autoFocus","_c","$RefreshReg$"],"sources":["C:/Users/morga/Desktop/CranialDevice_web/CranialDevice_web/frontend/src/pages/pathologies/PathologyList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  Container,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Paper,\n  Button,\n  TablePagination,\n  IconButton,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Checkbox,\n  Box,\n  Link,\n} from '@mui/material';\nimport { styled } from '@mui/system';\nimport { useNavigate } from 'react-router-dom';\nimport EditIcon from '@mui/icons-material/Edit';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddIcon from '@mui/icons-material/Add';\nimport CloseIcon from '@mui/icons-material/Close';\n\nimport { useAuth } from '../../contexts/AuthContext';\nimport AddPathologyDialog from './AddPathologyDialog';\nimport EditPathologyDialog from './EditPathologyDialog';\nimport { ClipLoader } from 'react-spinners';\nimport BackgroundWrapper from '../../components/BackgroundWrapper'; // Importa BackgroundWrapper\nimport './PathologyList.css';\n\nconst Root = styled('div')({\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  height: '62vm',\n  backgroundColor: '#ffffff',\n  opacity: 0.9,\n  marginTop: '2%',\n});\n\nconst StyledTable = styled(Table)({\n  minWidth: 650,\n  '& .MuiTableCell-head': {\n    backgroundColor: '#f1f1f1',\n    fontWeight: 'bold',\n    fontSize: 21,\n  },\n  '& .MuiTableCell-body': {\n    fontSize: 16,\n  },\n  '& .MuiTableRow-root:last-child .MuiTableCell-root': {\n    borderBottom: '2px solid #155677', // Cambia il colore della riga inferiore qui\n  },\n});\n\nconst Header = styled('div')({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  width: '100%',\n  marginBottom: 16,\n  marginTop:'2%',\n});\n\nconst AddButton = styled(Button)({\n  backgroundColor: '#155677', // Cambia il colore del bottone\n  color: '#fff',\n  '&:hover': {\n    backgroundColor: '#0d3e4f', // Cambia il colore al passaggio del mouse\n  },\n});\n\nconst HamburgerMenuWrapper = styled('div')({\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  zIndex: 2,\n});\n\nfunction PathologyList() {\n  const { user } = useAuth();\n  const navigate = useNavigate();\n  const [pathologies, setPathologies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [addDialogOpen, setAddDialogOpen] = useState(false);\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n  const [selectedPathology, setSelectedPathology] = useState(null);\n  const [selectedPathologies, setSelectedPathologies] = useState([]);\n\n  useEffect(() => {\n    const fetchPathologies = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/pathologies', {\n          method: 'GET',\n          credentials: 'include',\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setPathologies(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPathologies();\n  }, []);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleDelete = async (ids) => {\n    try {\n      const response = await fetch('http://localhost:5000/api/pathologies/bulk_delete', {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        credentials: 'include',\n        body: JSON.stringify({ ids }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      setPathologies((prevPathologies) => prevPathologies.filter((pathology) => !ids.includes(pathology.id)));\n      setDeleteDialogOpen(false);\n      setSelectedPathologies([]);\n      setSelectedPathology(null);\n    } catch (error) {\n      console.error('Error deleting pathology:', error.message);\n    }\n  };\n\n  const handleAddDialogOpen = () => {\n    setAddDialogOpen(true);\n  };\n\n  const handleAddDialogClose = () => {\n    setAddDialogOpen(false);\n  };\n\n  const handlePathologyAdded = () => {\n    setAddDialogOpen(false);\n    const fetchPathologies = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/pathologies', {\n          method: 'GET',\n          credentials: 'include',\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setPathologies(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPathologies();\n  };\n\n  const handleEditDialogOpen = (pathology) => {\n    setSelectedPathology(pathology);\n    setEditDialogOpen(true);\n  };\n\n  const handleEditDialogClose = () => {\n    setEditDialogOpen(false);\n    setSelectedPathology(null);\n  };\n\n  const handleEditSubmit = async (updatedPathology) => {\n    try {\n      const response = await fetch('http://localhost:5000/api/pathologies', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        credentials: 'include',\n        body: JSON.stringify(updatedPathology),\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      setPathologies((prevPathologies) =>\n        prevPathologies.map((pathology) =>\n          pathology.id === updatedPathology.id ? { ...pathology, ...updatedPathology } : pathology\n        )\n      );\n      setEditDialogOpen(false);\n      setSelectedPathology(null);\n    } catch (error) {\n      console.error('Error updating pathology:', error.message);\n    }\n  };\n\n  const handleDeleteDialogOpen = (pathology) => {\n    setSelectedPathology(pathology);\n    setDeleteDialogOpen(true);\n  };\n\n  const handleDeleteDialogClose = () => {\n    setDeleteDialogOpen(false);\n    setSelectedPathology(null);\n  };\n\n  const handleSelectPathology = (id) => {\n    if (selectedPathologies.includes(id)) {\n      setSelectedPathologies(selectedPathologies.filter((selectedId) => selectedId !== id));\n    } else {\n      setSelectedPathologies([...selectedPathologies, id]);\n    }\n  };\n\n  const isSelected = (id) => selectedPathologies.includes(id);\n\n  const handleSelectAllPathologies = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = pathologies.map((pathology) => pathology.id);\n      setSelectedPathologies(newSelecteds);\n    } else {\n      setSelectedPathologies([]);\n    }\n  };\n\n  const isAllSelected = selectedPathologies.length === pathologies.length;\n\n  const handleMultipleDelete = () => {\n    setDeleteDialogOpen(true);\n    setSelectedPathology(null);\n  };\n\n  if (loading) {\n    return (\n      <Root>\n        <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n          <ClipLoader size={50} color={\"#123abc\"} loading={loading} />\n          <Typography variant=\"h6\" style={{ marginTop: '20px' }}>Loading...</Typography>\n        </Box>\n      </Root>\n    );\n  }\n\n  if (error) {\n    return (\n      <Root>\n        <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n          <Typography variant=\"h6\" color=\"error\">Error: {error}</Typography>\n          <Button variant=\"contained\" color=\"primary\" onClick={() => window.location.reload()}>Retry</Button>\n        </Box>\n      </Root>\n    );\n  }\n\n  return (\n    <BackgroundWrapper>\n      <Root>\n        <div className=\"content\">\n          <Container component={Paper} className=\"table-container\">\n            <Header>\n              <IconButton onClick={() => navigate('/main')}>\n                <CloseIcon />\n              </IconButton>\n              <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n                Lista Patologie\n              </Typography>\n              {user && user.isAdmin && (\n                <AddButton\n                  variant=\"contained\"\n                  color=\"primary\"\n                  startIcon={<AddIcon />}\n                  onClick={handleAddDialogOpen}\n                >\n                  Aggiungi Patologia\n                </AddButton>\n              )}\n            </Header>\n            <StyledTable className=\"styled-table\">\n              <TableHead>\n                <TableRow>\n                  {user && user.isAdmin && (\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        indeterminate={selectedPathologies.length > 0 && selectedPathologies.length < pathologies.length}\n                        checked={isAllSelected}\n                        onChange={handleSelectAllPathologies}\n                      />\n                    </TableCell>\n                  )}\n                  <TableCell className=\"table-header\">Nome</TableCell>\n                  <TableCell className=\"table-header\">Descrizione</TableCell>\n                  {user && user.isAdmin && <TableCell className=\"table-header\">Azioni</TableCell>}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {pathologies.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((pathology) => (\n                  <TableRow\n                    key={pathology.id}\n                    hover\n                    role=\"checkbox\"\n                    aria-checked={isSelected(pathology.id)}\n                    selected={isSelected(pathology.id)}\n                  >\n                    {user && user.isAdmin && (\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isSelected(pathology.id)}\n                          onChange={() => handleSelectPathology(pathology.id)}\n                        />\n                      </TableCell>\n                    )}\n                    <TableCell>{pathology.name}</TableCell>\n                    <TableCell>{pathology.description}</TableCell>\n                    {user && user.isAdmin && (\n                      <TableCell>\n                        <IconButton onClick={() => handleEditDialogOpen(pathology)} color=\"primary\">\n                          <EditIcon />\n                        </IconButton>\n                        <IconButton onClick={() => handleDeleteDialogOpen(pathology)} color=\"secondary\">\n                          <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    )}\n                  </TableRow>\n                ))}\n              </TableBody>\n            </StyledTable>\n            <TablePagination\n              rowsPerPageOptions={[5, 10]}\n              component=\"div\"\n              count={pathologies.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onPageChange={handleChangePage}\n              onRowsPerPageChange={handleChangeRowsPerPage}\n              className=\"pagination\"\n            />\n          </Container>\n        </div>\n        {user && user.isAdmin && (\n          <AddPathologyDialog open={addDialogOpen} onClose={handleAddDialogClose} onPathologyAdded={handlePathologyAdded} />\n        )}\n        {user && user.isAdmin && selectedPathology && (\n          <EditPathologyDialog\n            open={editDialogOpen}\n            onClose={handleEditDialogClose}\n            onEditSubmit={handleEditSubmit}\n            pathology={selectedPathology}\n          />\n        )}\n        <Dialog open={deleteDialogOpen} onClose={handleDeleteDialogClose}>\n          <DialogTitle>Conferma Eliminazione</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              {selectedPathology\n                ? `Sei sicuro di voler eliminare la patologia ${selectedPathology.name}?`\n                : 'Sei sicuro di voler eliminare le patologie selezionate?'}\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleDeleteDialogClose} color=\"primary\">\n              Annulla\n            </Button>\n            <Button\n              onClick={() => handleDelete(selectedPathology ? [selectedPathology.id] : selectedPathologies)}\n              color=\"primary\"\n              autoFocus\n            >\n              Elimina\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Root>\n    </BackgroundWrapper>\n  );\n}\n\nexport default PathologyList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SACEC,SAAS,EACTC,UAAU,EACVC,KAAK,EACLC,SAAS,EACTC,SAAS,EACTC,SAAS,EACTC,QAAQ,EACRC,KAAK,EACLC,MAAM,EACNC,eAAe,EACfC,UAAU,EACVC,MAAM,EACNC,aAAa,EACbC,aAAa,EACbC,iBAAiB,EACjBC,WAAW,EACXC,QAAQ,EACRC,GAAG,EACHC,IAAI,QACC,eAAe;AACtB,SAASC,MAAM,QAAQ,aAAa;AACpC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,OAAO,MAAM,yBAAyB;AAC7C,OAAOC,SAAS,MAAM,2BAA2B;AAEjD,SAASC,OAAO,QAAQ,4BAA4B;AACpD,OAAOC,kBAAkB,MAAM,sBAAsB;AACrD,OAAOC,mBAAmB,MAAM,uBAAuB;AACvD,SAASC,UAAU,QAAQ,gBAAgB;AAC3C,OAAOC,iBAAiB,MAAM,oCAAoC,CAAC,CAAC;AACpE,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,IAAI,GAAGb,MAAM,CAAC,KAAK,CAAC,CAAC;EACzBc,OAAO,EAAE,MAAM;EACfC,cAAc,EAAE,QAAQ;EACxBC,UAAU,EAAE,QAAQ;EACpBC,MAAM,EAAE,MAAM;EACdC,eAAe,EAAE,SAAS;EAC1BC,OAAO,EAAE,GAAG;EACZC,SAAS,EAAE;AACb,CAAC,CAAC;AAEF,MAAMC,WAAW,GAAGrB,MAAM,CAACjB,KAAK,CAAC,CAAC;EAChCuC,QAAQ,EAAE,GAAG;EACb,sBAAsB,EAAE;IACtBJ,eAAe,EAAE,SAAS;IAC1BK,UAAU,EAAE,MAAM;IAClBC,QAAQ,EAAE;EACZ,CAAC;EACD,sBAAsB,EAAE;IACtBA,QAAQ,EAAE;EACZ,CAAC;EACD,mDAAmD,EAAE;IACnDC,YAAY,EAAE,mBAAmB,CAAE;EACrC;AACF,CAAC,CAAC;AAEF,MAAMC,MAAM,GAAG1B,MAAM,CAAC,KAAK,CAAC,CAAC;EAC3Bc,OAAO,EAAE,MAAM;EACfC,cAAc,EAAE,eAAe;EAC/BC,UAAU,EAAE,QAAQ;EACpBW,KAAK,EAAE,MAAM;EACbC,YAAY,EAAE,EAAE;EAChBR,SAAS,EAAC;AACZ,CAAC,CAAC;AAEF,MAAMS,SAAS,GAAG7B,MAAM,CAACX,MAAM,CAAC,CAAC;EAC/B6B,eAAe,EAAE,SAAS;EAAE;EAC5BY,KAAK,EAAE,MAAM;EACb,SAAS,EAAE;IACTZ,eAAe,EAAE,SAAS,CAAE;EAC9B;AACF,CAAC,CAAC;AAEF,MAAMa,oBAAoB,GAAG/B,MAAM,CAAC,KAAK,CAAC,CAAC;EACzCgC,QAAQ,EAAE,UAAU;EACpBC,GAAG,EAAE,CAAC;EACNC,IAAI,EAAE,CAAC;EACPC,MAAM,EAAE;AACV,CAAC,CAAC;AAEF,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM;IAAEC;EAAK,CAAC,GAAGhC,OAAO,CAAC,CAAC;EAC1B,MAAMiC,QAAQ,GAAGtC,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACuC,WAAW,EAAEC,cAAc,CAAC,GAAG7D,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC8D,OAAO,EAAEC,UAAU,CAAC,GAAG/D,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACgE,KAAK,EAAEC,QAAQ,CAAC,GAAGjE,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACkE,IAAI,EAAEC,OAAO,CAAC,GAAGnE,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACoE,WAAW,EAAEC,cAAc,CAAC,GAAGrE,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACsE,aAAa,EAAEC,gBAAgB,CAAC,GAAGvE,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACwE,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGzE,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAAC0E,cAAc,EAAEC,iBAAiB,CAAC,GAAG3E,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAAC4E,iBAAiB,EAAEC,oBAAoB,CAAC,GAAG7E,QAAQ,CAAC,IAAI,CAAC;EAChE,MAAM,CAAC8E,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG/E,QAAQ,CAAC,EAAE,CAAC;EAElED,SAAS,CAAC,MAAM;IACd,MAAMiF,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;UACpEC,MAAM,EAAE,KAAK;UACbC,WAAW,EAAE;QACf,CAAC,CAAC;QACF,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QACA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;QAClC3B,cAAc,CAAC0B,IAAI,CAAC;MACtB,CAAC,CAAC,OAAOvB,KAAK,EAAE;QACdC,QAAQ,CAACD,KAAK,CAACyB,OAAO,CAAC;MACzB,CAAC,SAAS;QACR1B,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IACDiB,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,gBAAgB,GAAGA,CAACC,KAAK,EAAEC,OAAO,KAAK;IAC3CzB,OAAO,CAACyB,OAAO,CAAC;EAClB,CAAC;EAED,MAAMC,uBAAuB,GAAIF,KAAK,IAAK;IACzCtB,cAAc,CAACyB,QAAQ,CAACH,KAAK,CAACI,MAAM,CAACC,KAAK,EAAE,EAAE,CAAC,CAAC;IAChD7B,OAAO,CAAC,CAAC,CAAC;EACZ,CAAC;EAED,MAAM8B,YAAY,GAAG,MAAOC,GAAG,IAAK;IAClC,IAAI;MACF,MAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAAC,mDAAmD,EAAE;QAChFC,MAAM,EAAE,QAAQ;QAChBgB,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDf,WAAW,EAAE,SAAS;QACtBgB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEJ;QAAI,CAAC;MAC9B,CAAC,CAAC;MAEF,IAAI,CAACjB,QAAQ,CAACI,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MAEAzB,cAAc,CAAE0C,eAAe,IAAKA,eAAe,CAACC,MAAM,CAAEC,SAAS,IAAK,CAACP,GAAG,CAACQ,QAAQ,CAACD,SAAS,CAACE,EAAE,CAAC,CAAC,CAAC;MACvGlC,mBAAmB,CAAC,KAAK,CAAC;MAC1BM,sBAAsB,CAAC,EAAE,CAAC;MAC1BF,oBAAoB,CAAC,IAAI,CAAC;IAC5B,CAAC,CAAC,OAAOb,KAAK,EAAE;MACd4C,OAAO,CAAC5C,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAACyB,OAAO,CAAC;IAC3D;EACF,CAAC;EAED,MAAMoB,mBAAmB,GAAGA,CAAA,KAAM;IAChCtC,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,MAAMuC,oBAAoB,GAAGA,CAAA,KAAM;IACjCvC,gBAAgB,CAAC,KAAK,CAAC;EACzB,CAAC;EAED,MAAMwC,oBAAoB,GAAGA,CAAA,KAAM;IACjCxC,gBAAgB,CAAC,KAAK,CAAC;IACvB,MAAMS,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;UACpEC,MAAM,EAAE,KAAK;UACbC,WAAW,EAAE;QACf,CAAC,CAAC;QACF,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;QACA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;QAClC3B,cAAc,CAAC0B,IAAI,CAAC;MACtB,CAAC,CAAC,OAAOvB,KAAK,EAAE;QACdC,QAAQ,CAACD,KAAK,CAACyB,OAAO,CAAC;MACzB,CAAC,SAAS;QACR1B,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IACDiB,gBAAgB,CAAC,CAAC;EACpB,CAAC;EAED,MAAMgC,oBAAoB,GAAIP,SAAS,IAAK;IAC1C5B,oBAAoB,CAAC4B,SAAS,CAAC;IAC/B9B,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,MAAMsC,qBAAqB,GAAGA,CAAA,KAAM;IAClCtC,iBAAiB,CAAC,KAAK,CAAC;IACxBE,oBAAoB,CAAC,IAAI,CAAC;EAC5B,CAAC;EAED,MAAMqC,gBAAgB,GAAG,MAAOC,gBAAgB,IAAK;IACnD,IAAI;MACF,MAAMlC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;QACpEC,MAAM,EAAE,KAAK;QACbgB,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDf,WAAW,EAAE,SAAS;QACtBgB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACa,gBAAgB;MACvC,CAAC,CAAC;MAEF,IAAI,CAAClC,QAAQ,CAACI,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MAEAzB,cAAc,CAAE0C,eAAe,IAC7BA,eAAe,CAACa,GAAG,CAAEX,SAAS,IAC5BA,SAAS,CAACE,EAAE,KAAKQ,gBAAgB,CAACR,EAAE,GAAG;QAAE,GAAGF,SAAS;QAAE,GAAGU;MAAiB,CAAC,GAAGV,SACjF,CACF,CAAC;MACD9B,iBAAiB,CAAC,KAAK,CAAC;MACxBE,oBAAoB,CAAC,IAAI,CAAC;IAC5B,CAAC,CAAC,OAAOb,KAAK,EAAE;MACd4C,OAAO,CAAC5C,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAACyB,OAAO,CAAC;IAC3D;EACF,CAAC;EAED,MAAM4B,sBAAsB,GAAIZ,SAAS,IAAK;IAC5C5B,oBAAoB,CAAC4B,SAAS,CAAC;IAC/BhC,mBAAmB,CAAC,IAAI,CAAC;EAC3B,CAAC;EAED,MAAM6C,uBAAuB,GAAGA,CAAA,KAAM;IACpC7C,mBAAmB,CAAC,KAAK,CAAC;IAC1BI,oBAAoB,CAAC,IAAI,CAAC;EAC5B,CAAC;EAED,MAAM0C,qBAAqB,GAAIZ,EAAE,IAAK;IACpC,IAAI7B,mBAAmB,CAAC4B,QAAQ,CAACC,EAAE,CAAC,EAAE;MACpC5B,sBAAsB,CAACD,mBAAmB,CAAC0B,MAAM,CAAEgB,UAAU,IAAKA,UAAU,KAAKb,EAAE,CAAC,CAAC;IACvF,CAAC,MAAM;MACL5B,sBAAsB,CAAC,CAAC,GAAGD,mBAAmB,EAAE6B,EAAE,CAAC,CAAC;IACtD;EACF,CAAC;EAED,MAAMc,UAAU,GAAId,EAAE,IAAK7B,mBAAmB,CAAC4B,QAAQ,CAACC,EAAE,CAAC;EAE3D,MAAMe,0BAA0B,GAAI/B,KAAK,IAAK;IAC5C,IAAIA,KAAK,CAACI,MAAM,CAAC4B,OAAO,EAAE;MACxB,MAAMC,YAAY,GAAGhE,WAAW,CAACwD,GAAG,CAAEX,SAAS,IAAKA,SAAS,CAACE,EAAE,CAAC;MACjE5B,sBAAsB,CAAC6C,YAAY,CAAC;IACtC,CAAC,MAAM;MACL7C,sBAAsB,CAAC,EAAE,CAAC;IAC5B;EACF,CAAC;EAED,MAAM8C,aAAa,GAAG/C,mBAAmB,CAACgD,MAAM,KAAKlE,WAAW,CAACkE,MAAM;EAEvE,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;IACjCtD,mBAAmB,CAAC,IAAI,CAAC;IACzBI,oBAAoB,CAAC,IAAI,CAAC;EAC5B,CAAC;EAED,IAAIf,OAAO,EAAE;IACX,oBACE9B,OAAA,CAACC,IAAI;MAAA+F,QAAA,eACHhG,OAAA,CAACd,GAAG;QAACgB,OAAO,EAAC,MAAM;QAAC+F,aAAa,EAAC,QAAQ;QAAC7F,UAAU,EAAC,QAAQ;QAAA4F,QAAA,gBAC5DhG,OAAA,CAACH,UAAU;UAACqG,IAAI,EAAE,EAAG;UAAChF,KAAK,EAAE,SAAU;UAACY,OAAO,EAAEA;QAAQ;UAAAqE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC5DtG,OAAA,CAAC9B,UAAU;UAACqI,OAAO,EAAC,IAAI;UAACC,KAAK,EAAE;YAAEhG,SAAS,EAAE;UAAO,CAAE;UAAAwF,QAAA,EAAC;QAAU;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3E;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAEX;EAEA,IAAItE,KAAK,EAAE;IACT,oBACEhC,OAAA,CAACC,IAAI;MAAA+F,QAAA,eACHhG,OAAA,CAACd,GAAG;QAACgB,OAAO,EAAC,MAAM;QAAC+F,aAAa,EAAC,QAAQ;QAAC7F,UAAU,EAAC,QAAQ;QAAA4F,QAAA,gBAC5DhG,OAAA,CAAC9B,UAAU;UAACqI,OAAO,EAAC,IAAI;UAACrF,KAAK,EAAC,OAAO;UAAA8E,QAAA,GAAC,SAAO,EAAChE,KAAK;QAAA;UAAAmE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC,eAClEtG,OAAA,CAACvB,MAAM;UAAC8H,OAAO,EAAC,WAAW;UAACrF,KAAK,EAAC,SAAS;UAACuF,OAAO,EAAEA,CAAA,KAAMC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAE;UAAAZ,QAAA,EAAC;QAAK;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAEX;EAEA,oBACEtG,OAAA,CAACF,iBAAiB;IAAAkG,QAAA,eAChBhG,OAAA,CAACC,IAAI;MAAA+F,QAAA,gBACHhG,OAAA;QAAK6G,SAAS,EAAC,SAAS;QAAAb,QAAA,eACtBhG,OAAA,CAAC/B,SAAS;UAAC6I,SAAS,EAAEtI,KAAM;UAACqI,SAAS,EAAC,iBAAiB;UAAAb,QAAA,gBACtDhG,OAAA,CAACc,MAAM;YAAAkF,QAAA,gBACLhG,OAAA,CAACrB,UAAU;cAAC8H,OAAO,EAAEA,CAAA,KAAM9E,QAAQ,CAAC,OAAO,CAAE;cAAAqE,QAAA,eAC3ChG,OAAA,CAACP,SAAS;gBAAA0G,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACbtG,OAAA,CAAC9B,UAAU;cAACqI,OAAO,EAAC,IAAI;cAACO,SAAS,EAAC,IAAI;cAACC,YAAY;cAAAf,QAAA,EAAC;YAErD;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,EACZ5E,IAAI,IAAIA,IAAI,CAACsF,OAAO,iBACnBhH,OAAA,CAACiB,SAAS;cACRsF,OAAO,EAAC,WAAW;cACnBrF,KAAK,EAAC,SAAS;cACf+F,SAAS,eAAEjH,OAAA,CAACR,OAAO;gBAAA2G,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAE;cACvBG,OAAO,EAAE5B,mBAAoB;cAAAmB,QAAA,EAC9B;YAED;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAW,CACZ;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACK,CAAC,eACTtG,OAAA,CAACS,WAAW;YAACoG,SAAS,EAAC,cAAc;YAAAb,QAAA,gBACnChG,OAAA,CAAC1B,SAAS;cAAA0H,QAAA,eACRhG,OAAA,CAACzB,QAAQ;gBAAAyH,QAAA,GACNtE,IAAI,IAAIA,IAAI,CAACsF,OAAO,iBACnBhH,OAAA,CAAC3B,SAAS;kBAAC6I,OAAO,EAAC,UAAU;kBAAAlB,QAAA,eAC3BhG,OAAA,CAACf,QAAQ;oBACPkI,aAAa,EAAErE,mBAAmB,CAACgD,MAAM,GAAG,CAAC,IAAIhD,mBAAmB,CAACgD,MAAM,GAAGlE,WAAW,CAACkE,MAAO;oBACjGH,OAAO,EAAEE,aAAc;oBACvBuB,QAAQ,EAAE1B;kBAA2B;oBAAAS,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACtC;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACO,CACZ,eACDtG,OAAA,CAAC3B,SAAS;kBAACwI,SAAS,EAAC,cAAc;kBAAAb,QAAA,EAAC;gBAAI;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAW,CAAC,eACpDtG,OAAA,CAAC3B,SAAS;kBAACwI,SAAS,EAAC,cAAc;kBAAAb,QAAA,EAAC;gBAAW;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAW,CAAC,EAC1D5E,IAAI,IAAIA,IAAI,CAACsF,OAAO,iBAAIhH,OAAA,CAAC3B,SAAS;kBAACwI,SAAS,EAAC,cAAc;kBAAAb,QAAA,EAAC;gBAAM;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAW,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACvE;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACF,CAAC,eACZtG,OAAA,CAAC5B,SAAS;cAAA4H,QAAA,EACPpE,WAAW,CAACyF,KAAK,CAACnF,IAAI,GAAGE,WAAW,EAAEF,IAAI,GAAGE,WAAW,GAAGA,WAAW,CAAC,CAACgD,GAAG,CAAEX,SAAS,iBACrFzE,OAAA,CAACzB,QAAQ;gBAEP+I,KAAK;gBACLC,IAAI,EAAC,UAAU;gBACf,gBAAc9B,UAAU,CAAChB,SAAS,CAACE,EAAE,CAAE;gBACvC6C,QAAQ,EAAE/B,UAAU,CAAChB,SAAS,CAACE,EAAE,CAAE;gBAAAqB,QAAA,GAElCtE,IAAI,IAAIA,IAAI,CAACsF,OAAO,iBACnBhH,OAAA,CAAC3B,SAAS;kBAAC6I,OAAO,EAAC,UAAU;kBAAAlB,QAAA,eAC3BhG,OAAA,CAACf,QAAQ;oBACP0G,OAAO,EAAEF,UAAU,CAAChB,SAAS,CAACE,EAAE,CAAE;oBAClCyC,QAAQ,EAAEA,CAAA,KAAM7B,qBAAqB,CAACd,SAAS,CAACE,EAAE;kBAAE;oBAAAwB,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACrD;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACO,CACZ,eACDtG,OAAA,CAAC3B,SAAS;kBAAA2H,QAAA,EAAEvB,SAAS,CAACgD;gBAAI;kBAAAtB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eACvCtG,OAAA,CAAC3B,SAAS;kBAAA2H,QAAA,EAAEvB,SAAS,CAACiD;gBAAW;kBAAAvB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,EAC7C5E,IAAI,IAAIA,IAAI,CAACsF,OAAO,iBACnBhH,OAAA,CAAC3B,SAAS;kBAAA2H,QAAA,gBACRhG,OAAA,CAACrB,UAAU;oBAAC8H,OAAO,EAAEA,CAAA,KAAMzB,oBAAoB,CAACP,SAAS,CAAE;oBAACvD,KAAK,EAAC,SAAS;oBAAA8E,QAAA,eACzEhG,OAAA,CAACV,QAAQ;sBAAA6G,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACF,CAAC,eACbtG,OAAA,CAACrB,UAAU;oBAAC8H,OAAO,EAAEA,CAAA,KAAMpB,sBAAsB,CAACZ,SAAS,CAAE;oBAACvD,KAAK,EAAC,WAAW;oBAAA8E,QAAA,eAC7EhG,OAAA,CAACT,UAAU;sBAAA4G,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACJ,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACJ,CACZ;cAAA,GAzBI7B,SAAS,CAACE,EAAE;gBAAAwB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OA0BT,CACX;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,eACdtG,OAAA,CAACtB,eAAe;YACdiJ,kBAAkB,EAAE,CAAC,CAAC,EAAE,EAAE,CAAE;YAC5Bb,SAAS,EAAC,KAAK;YACfc,KAAK,EAAEhG,WAAW,CAACkE,MAAO;YAC1B1D,WAAW,EAAEA,WAAY;YACzBF,IAAI,EAAEA,IAAK;YACX2F,YAAY,EAAEnE,gBAAiB;YAC/BoE,mBAAmB,EAAEjE,uBAAwB;YAC7CgD,SAAS,EAAC;UAAY;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,EACL5E,IAAI,IAAIA,IAAI,CAACsF,OAAO,iBACnBhH,OAAA,CAACL,kBAAkB;QAACoI,IAAI,EAAEzF,aAAc;QAAC0F,OAAO,EAAElD,oBAAqB;QAACmD,gBAAgB,EAAElD;MAAqB;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAClH,EACA5E,IAAI,IAAIA,IAAI,CAACsF,OAAO,IAAIpE,iBAAiB,iBACxC5C,OAAA,CAACJ,mBAAmB;QAClBmI,IAAI,EAAErF,cAAe;QACrBsF,OAAO,EAAE/C,qBAAsB;QAC/BiD,YAAY,EAAEhD,gBAAiB;QAC/BT,SAAS,EAAE7B;MAAkB;QAAAuD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CACF,eACDtG,OAAA,CAACpB,MAAM;QAACmJ,IAAI,EAAEvF,gBAAiB;QAACwF,OAAO,EAAE1C,uBAAwB;QAAAU,QAAA,gBAC/DhG,OAAA,CAAChB,WAAW;UAAAgH,QAAA,EAAC;QAAqB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC,eAChDtG,OAAA,CAAClB,aAAa;UAAAkH,QAAA,eACZhG,OAAA,CAACjB,iBAAiB;YAAAiH,QAAA,EACfpD,iBAAiB,GACd,8CAA8CA,iBAAiB,CAAC6E,IAAI,GAAG,GACvE;UAAyD;YAAAtB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5C;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC,eAChBtG,OAAA,CAACnB,aAAa;UAAAmH,QAAA,gBACZhG,OAAA,CAACvB,MAAM;YAACgI,OAAO,EAAEnB,uBAAwB;YAACpE,KAAK,EAAC,SAAS;YAAA8E,QAAA,EAAC;UAE1D;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTtG,OAAA,CAACvB,MAAM;YACLgI,OAAO,EAAEA,CAAA,KAAMxC,YAAY,CAACrB,iBAAiB,GAAG,CAACA,iBAAiB,CAAC+B,EAAE,CAAC,GAAG7B,mBAAmB,CAAE;YAC9F5B,KAAK,EAAC,SAAS;YACfiH,SAAS;YAAAnC,QAAA,EACV;UAED;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAExB;AAAC7E,EAAA,CA1TQD,aAAa;EAAA,QACH9B,OAAO,EACPL,WAAW;AAAA;AAAA+I,EAAA,GAFrB5G,aAAa;AA4TtB,eAAeA,aAAa;AAAC,IAAA4G,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}