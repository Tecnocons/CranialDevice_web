{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Davide Grieco\\\\Desktop\\\\CranialDevice_web\\\\frontend\\\\src\\\\pages\\\\patients\\\\AssignPathologiesDialog.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Button, Typography, FormControl, InputLabel, Select, MenuItem, Checkbox, ListItemText } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AssignPathologiesDialog = ({\n  open,\n  onClose,\n  patient,\n  onAssign\n}) => {\n  _s();\n  const [pathologies, setPathologies] = useState([]);\n  const [selectedPathologies, setSelectedPathologies] = useState([]);\n  useEffect(() => {\n    const fetchPathologies = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/pathologies', {\n          method: 'GET',\n          credentials: 'include'\n        });\n        const data = await response.json();\n        setPathologies(data);\n      } catch (error) {\n        console.error('Error fetching pathologies:', error);\n      }\n    };\n    fetchPathologies();\n  }, []);\n  const handleAssign = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/patient_pathology', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          patient_uuid: patient.uuid,\n          pathology_ids: selectedPathologies\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      onAssign();\n      onClose();\n    } catch (error) {\n      console.error('Error assigning pathologies:', error);\n    }\n  };\n  const handleChange = event => {\n    setSelectedPathologies(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: onClose,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: [\"Assign Pathologies to \", patient.nominativo]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Select one or more pathologies to assign to this patient.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        margin: \"normal\",\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: \"Pathologies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          multiple: true,\n          value: selectedPathologies,\n          onChange: handleChange,\n          renderValue: selected => selected.map(id => {\n            const pathology = pathologies.find(p => p.id === id);\n            return pathology ? pathology.name : '';\n          }).join(', '),\n          children: pathologies.map(pathology => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: pathology.id,\n            children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: selectedPathologies.indexOf(pathology.id) > -1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: pathology.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)]\n          }, pathology.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClose,\n        color: \"primary\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleAssign,\n        color: \"primary\",\n        children: \"Assign\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(AssignPathologiesDialog, \"BKRICKdRody2e060HKhv18B3m9Y=\");\n_c = AssignPathologiesDialog;\nexport default AssignPathologiesDialog;\nvar _c;\n$RefreshReg$(_c, \"AssignPathologiesDialog\");","map":{"version":3,"names":["React","useEffect","useState","Dialog","DialogTitle","DialogContent","DialogActions","Button","Typography","FormControl","InputLabel","Select","MenuItem","Checkbox","ListItemText","jsxDEV","_jsxDEV","AssignPathologiesDialog","open","onClose","patient","onAssign","_s","pathologies","setPathologies","selectedPathologies","setSelectedPathologies","fetchPathologies","response","fetch","method","credentials","data","json","error","console","handleAssign","headers","body","JSON","stringify","patient_uuid","uuid","pathology_ids","ok","Error","handleChange","event","target","value","children","nominativo","fileName","_jsxFileName","lineNumber","columnNumber","fullWidth","margin","multiple","onChange","renderValue","selected","map","id","pathology","find","p","name","join","checked","indexOf","primary","onClick","color","_c","$RefreshReg$"],"sources":["C:/Users/Davide Grieco/Desktop/CranialDevice_web/frontend/src/pages/patients/AssignPathologiesDialog.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  Typography,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Checkbox,\r\n  ListItemText,\r\n} from '@mui/material';\r\n\r\nconst AssignPathologiesDialog = ({ open, onClose, patient, onAssign }) => {\r\n  const [pathologies, setPathologies] = useState([]);\r\n  const [selectedPathologies, setSelectedPathologies] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchPathologies = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/pathologies', {\r\n          method: 'GET',\r\n          credentials: 'include',\r\n        });\r\n        const data = await response.json();\r\n        setPathologies(data);\r\n      } catch (error) {\r\n        console.error('Error fetching pathologies:', error);\r\n      }\r\n    };\r\n\r\n    fetchPathologies();\r\n  }, []);\r\n\r\n  const handleAssign = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/patient_pathology', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ patient_uuid: patient.uuid, pathology_ids: selectedPathologies }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n\r\n      onAssign();\r\n      onClose();\r\n    } catch (error) {\r\n      console.error('Error assigning pathologies:', error);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setSelectedPathologies(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onClose={onClose}>\r\n      <DialogTitle>Assign Pathologies to {patient.nominativo}</DialogTitle>\r\n      <DialogContent>\r\n        <Typography>Select one or more pathologies to assign to this patient.</Typography>\r\n        <FormControl fullWidth margin=\"normal\">\r\n          <InputLabel>Pathologies</InputLabel>\r\n          <Select\r\n            multiple\r\n            value={selectedPathologies}\r\n            onChange={handleChange}\r\n            renderValue={(selected) => selected.map(id => {\r\n              const pathology = pathologies.find(p => p.id === id);\r\n              return pathology ? pathology.name : '';\r\n            }).join(', ')}\r\n          >\r\n            {pathologies.map((pathology) => (\r\n              <MenuItem key={pathology.id} value={pathology.id}>\r\n                <Checkbox checked={selectedPathologies.indexOf(pathology.id) > -1} />\r\n                <ListItemText primary={pathology.name} />\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onClose} color=\"primary\">Cancel</Button>\r\n        <Button onClick={handleAssign} color=\"primary\">Assign</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AssignPathologiesDialog;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}