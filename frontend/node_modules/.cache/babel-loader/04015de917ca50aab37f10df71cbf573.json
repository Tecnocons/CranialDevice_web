{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\morga\\\\Desktop\\\\CranialDevice_web\\\\CranialDevice_web\\\\frontend\\\\src\\\\pages\\\\pathologies\\\\PathologyList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Container, Typography, Table, TableBody, TableCell, TableHead, TableRow, Paper, Button, TablePagination, IconButton, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Checkbox, TextField } from '@mui/material';\nimport { Delete as DeleteIcon, Edit as EditIcon } from '@mui/icons-material';\nimport { useAuth } from '../../contexts/AuthContext';\nimport AddPathologyDialog from './AddPathologyDialog';\nimport EditPathologyDialog from './EditPathologyDialog';\nimport './PathologyList.css';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Root = styled('div')({\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  height: '58vw',\n  backgroundColor: '#f5f5f5',\n  position: 'relative'\n});\nconst StyledTable = styled(Table)({\n  minWidth: 650,\n  maxHeight: '30vh',\n  overflow: 'auto',\n  '& .MuiTableCell-head': {\n    backgroundColor: '#f1f1f1',\n    fontWeight: 'bold'\n  },\n  '& .MuiTableCell-body': {\n    fontSize: 14\n  }\n});\nconst Header = styled('div')({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  width: '100%',\n  marginBottom: 16\n});\nconst AddButton = styled(Button)({\n  backgroundColor: '#4caf50',\n  color: '#fff',\n  '&:hover': {\n    backgroundColor: '#45a049'\n  }\n});\nconst HamburgerMenuWrapper = styled('div')({\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  zIndex: 2\n});\nfunction PathologyList() {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const navigate = useNavigate();\n  const [pathologies, setPathologies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [addDialogOpen, setAddDialogOpen] = useState(false);\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n  const [selectedPathology, setSelectedPathology] = useState(null);\n  const [selectedPathologies, setSelectedPathologies] = useState([]);\n  useEffect(() => {\n    const fetchPathologies = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/pathologies', {\n          method: 'GET',\n          credentials: 'include'\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setPathologies(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPathologies();\n  }, []);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  const handleDelete = async ids => {\n    try {\n      const response = await fetch('http://localhost:5000/api/pathologies/bulk_delete', {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          ids\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      setPathologies(prevPathologies => prevPathologies.filter(pathology => !ids.includes(pathology.id)));\n      setDeleteDialogOpen(false);\n      setSelectedPathologies([]);\n      setSelectedPathology(null);\n    } catch (error) {\n      console.error('Error deleting pathology:', error.message);\n    }\n  };\n  const handleAddDialogOpen = () => {\n    setAddDialogOpen(true);\n  };\n  const handleAddDialogClose = () => {\n    setAddDialogOpen(false);\n  };\n  const handlePathologyAdded = () => {\n    setAddDialogOpen(false);\n    const fetchPathologies = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/pathologies', {\n          method: 'GET',\n          credentials: 'include'\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setPathologies(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPathologies();\n  };\n  const handleEditDialogOpen = pathology => {\n    setSelectedPathology(pathology);\n    setEditDialogOpen(true);\n  };\n  const handleEditDialogClose = () => {\n    setEditDialogOpen(false);\n    setSelectedPathology(null);\n  };\n  const handleEditSubmit = async updatedPathology => {\n    try {\n      const response = await fetch('http://localhost:5000/api/pathologies', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify(updatedPathology)\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      setPathologies(prevPathologies => prevPathologies.map(pathology => pathology.id === updatedPathology.id ? {\n        ...pathology,\n        ...updatedPathology\n      } : pathology));\n      setEditDialogOpen(false);\n      setSelectedPathology(null);\n    } catch (error) {\n      console.error('Error updating pathology:', error.message);\n    }\n  };\n  const handleDeleteDialogOpen = pathology => {\n    setSelectedPathology(pathology);\n    setDeleteDialogOpen(true);\n  };\n  const handleDeleteDialogClose = () => {\n    setDeleteDialogOpen(false);\n    setSelectedPathology(null);\n  };\n  const handleSelectPathology = id => {\n    if (selectedPathologies.includes(id)) {\n      setSelectedPathologies(selectedPathologies.filter(selectedId => selectedId !== id));\n    } else {\n      setSelectedPathologies([...selectedPathologies, id]);\n    }\n  };\n  const isSelected = id => selectedPathologies.includes(id);\n  const handleSelectAllPathologies = event => {\n    if (event.target.checked) {\n      const newSelecteds = pathologies.map(pathology => pathology.id);\n      setSelectedPathologies(newSelecteds);\n    } else {\n      setSelectedPathologies([]);\n    }\n  };\n  const isAllSelected = selectedPathologies.length === pathologies.length;\n  const handleMultipleDelete = () => {\n    setDeleteDialogOpen(true);\n    setSelectedPathology(null);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Root, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(ClipLoader, {\n          size: 50,\n          color: \"#123abc\",\n          loading: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          style: {\n            marginTop: '20px'\n          },\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Root, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"error\",\n          children: [\"Error: \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => window.location.reload(),\n          children: \"Retry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Root, {\n    children: [/*#__PURE__*/_jsxDEV(HamburgerMenuWrapper, {\n      children: /*#__PURE__*/_jsxDEV(HamburgerMenu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        component: Paper,\n        className: \"table-container\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => navigate('/main'),\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            component: \"h1\",\n            gutterBottom: true,\n            children: \"Lista Patologie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this), user && /*#__PURE__*/_jsxDEV(AddButton, {\n            variant: \"contained\",\n            color: \"primary\",\n            startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 28\n            }, this),\n            onClick: handleAddDialogOpen,\n            children: \"Aggiungi Patologia\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StyledTable, {\n          className: \"styled-table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [user && user.isAdmin && /*#__PURE__*/_jsxDEV(TableCell, {\n                padding: \"checkbox\",\n                children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  indeterminate: selectedPathologies.length > 0 && selectedPathologies.length < pathologies.length,\n                  checked: isAllSelected,\n                  onChange: handleSelectAllPathologies\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                className: \"table-header\",\n                children: \"Nome\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                className: \"table-header\",\n                children: \"Descrizione\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 17\n              }, this), user && user.isAdmin && /*#__PURE__*/_jsxDEV(TableCell, {\n                className: \"table-header\",\n                children: \"Azioni\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 42\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: pathologies.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(pathology => /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              role: \"checkbox\",\n              \"aria-checked\": isSelected(pathology.id),\n              selected: isSelected(pathology.id),\n              children: [user && user.isAdmin && /*#__PURE__*/_jsxDEV(TableCell, {\n                padding: \"checkbox\",\n                children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  checked: isSelected(pathology.id),\n                  onChange: () => handleSelectPathology(pathology.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: pathology.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: pathology.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 19\n              }, this), user && user.isAdmin && /*#__PURE__*/_jsxDEV(TableCell, {\n                children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => handleEditDialogOpen(pathology),\n                  color: \"primary\",\n                  children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 332,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => handleDeleteDialogOpen(pathology),\n                  color: \"secondary\",\n                  children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 335,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 334,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 21\n              }, this)]\n            }, pathology.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n          rowsPerPageOptions: [10, 25, 50],\n          component: \"div\",\n          count: pathologies.length,\n          rowsPerPage: rowsPerPage,\n          page: page,\n          onPageChange: handleChangePage,\n          onRowsPerPageChange: handleChangeRowsPerPage,\n          className: \"pagination\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this), user && user.isAdmin && /*#__PURE__*/_jsxDEV(AddPathologyDialog, {\n      open: addDialogOpen,\n      onClose: handleAddDialogClose,\n      onPathologyAdded: handlePathologyAdded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 9\n    }, this), user && selectedPathology && /*#__PURE__*/_jsxDEV(EditPathologyDialog, {\n      open: editDialogOpen,\n      onClose: handleEditDialogClose,\n      onEditSubmit: handleEditSubmit,\n      pathology: selectedPathology\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: deleteDialogOpen,\n      onClose: handleDeleteDialogClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Conferma Eliminazione\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: selectedPathology ? `Sei sicuro di voler eliminare la patologia ${selectedPathology.name}?` : 'Sei sicuro di voler eliminare le patologie selezionate?'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleDeleteDialogClose,\n          color: \"primary\",\n          children: \"Annulla\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleDelete(selectedPathology ? [selectedPathology.id] : selectedPathologies),\n          color: \"primary\",\n          autoFocus: true,\n          children: \"Elimina\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 269,\n    columnNumber: 5\n  }, this);\n}\n_s(PathologyList, \"T2QxQI9LM7OaUKDObDydetzQoGs=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = PathologyList;\nexport default PathologyList;\nvar _c;\n$RefreshReg$(_c, \"PathologyList\");","map":{"version":3,"names":["React","useEffect","useState","Container","Typography","Table","TableBody","TableCell","TableHead","TableRow","Paper","Button","TablePagination","IconButton","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Checkbox","TextField","Delete","DeleteIcon","Edit","EditIcon","useAuth","AddPathologyDialog","EditPathologyDialog","CloseIcon","useNavigate","jsxDEV","_jsxDEV","Root","styled","display","justifyContent","alignItems","height","backgroundColor","position","StyledTable","minWidth","maxHeight","overflow","fontWeight","fontSize","Header","width","marginBottom","AddButton","color","HamburgerMenuWrapper","top","left","zIndex","PathologyList","_s","user","navigate","pathologies","setPathologies","loading","setLoading","error","setError","page","setPage","rowsPerPage","setRowsPerPage","addDialogOpen","setAddDialogOpen","deleteDialogOpen","setDeleteDialogOpen","editDialogOpen","setEditDialogOpen","selectedPathology","setSelectedPathology","selectedPathologies","setSelectedPathologies","fetchPathologies","response","fetch","method","credentials","ok","Error","data","json","message","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","handleDelete","ids","headers","body","JSON","stringify","prevPathologies","filter","pathology","includes","id","console","handleAddDialogOpen","handleAddDialogClose","handlePathologyAdded","handleEditDialogOpen","handleEditDialogClose","handleEditSubmit","updatedPathology","map","handleDeleteDialogOpen","handleDeleteDialogClose","handleSelectPathology","selectedId","isSelected","handleSelectAllPathologies","checked","newSelecteds","isAllSelected","length","handleMultipleDelete","children","Box","flexDirection","ClipLoader","size","fileName","_jsxFileName","lineNumber","columnNumber","variant","style","marginTop","onClick","window","location","reload","HamburgerMenu","className","component","gutterBottom","startIcon","AddIcon","isAdmin","padding","indeterminate","onChange","slice","hover","role","selected","name","description","rowsPerPageOptions","count","onPageChange","onRowsPerPageChange","open","onClose","onPathologyAdded","onEditSubmit","autoFocus","_c","$RefreshReg$"],"sources":["C:/Users/morga/Desktop/CranialDevice_web/CranialDevice_web/frontend/src/pages/pathologies/PathologyList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  Container,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Paper,\n  Button,\n  TablePagination,\n  IconButton,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Checkbox,\n  TextField,\n} from '@mui/material';\nimport { Delete as DeleteIcon, Edit as EditIcon } from '@mui/icons-material';\nimport { useAuth } from '../../contexts/AuthContext';\nimport AddPathologyDialog from './AddPathologyDialog';\nimport EditPathologyDialog from './EditPathologyDialog';\nimport './PathologyList.css';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { useNavigate } from 'react-router-dom';\n\nconst Root = styled('div')({\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  height: '58vw',\n  backgroundColor: '#f5f5f5',\n  position: 'relative',\n});\n\nconst StyledTable = styled(Table)({\n  minWidth: 650,\n  maxHeight: '30vh',\n  overflow: 'auto',\n  '& .MuiTableCell-head': {\n    backgroundColor: '#f1f1f1',\n    fontWeight: 'bold',\n  },\n  '& .MuiTableCell-body': {\n    fontSize: 14,\n  },\n});\n\nconst Header = styled('div')({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  width: '100%',\n  marginBottom: 16,\n});\n\nconst AddButton = styled(Button)({\n  backgroundColor: '#4caf50',\n  color: '#fff',\n  '&:hover': {\n    backgroundColor: '#45a049',\n  },\n});\n\nconst HamburgerMenuWrapper = styled('div')({\n  position: 'absolute',\n  top: 0,\n  left: 0,\n  zIndex: 2,\n});\n\nfunction PathologyList() {\n  const { user } = useAuth();\n  const navigate = useNavigate();\n  const [pathologies, setPathologies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [addDialogOpen, setAddDialogOpen] = useState(false);\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n  const [selectedPathology, setSelectedPathology] = useState(null);\n  const [selectedPathologies, setSelectedPathologies] = useState([]);\n\n  useEffect(() => {\n    const fetchPathologies = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/pathologies', {\n          method: 'GET',\n          credentials: 'include',\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setPathologies(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPathologies();\n  }, []);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleDelete = async (ids) => {\n    try {\n      const response = await fetch('http://localhost:5000/api/pathologies/bulk_delete', {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        credentials: 'include',\n        body: JSON.stringify({ ids }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      setPathologies((prevPathologies) => prevPathologies.filter((pathology) => !ids.includes(pathology.id)));\n      setDeleteDialogOpen(false);\n      setSelectedPathologies([]);\n      setSelectedPathology(null);\n    } catch (error) {\n      console.error('Error deleting pathology:', error.message);\n    }\n  };\n\n  const handleAddDialogOpen = () => {\n    setAddDialogOpen(true);\n  };\n\n  const handleAddDialogClose = () => {\n    setAddDialogOpen(false);\n  };\n\n  const handlePathologyAdded = () => {\n    setAddDialogOpen(false);\n    const fetchPathologies = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/pathologies', {\n          method: 'GET',\n          credentials: 'include',\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setPathologies(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPathologies();\n  };\n\n  const handleEditDialogOpen = (pathology) => {\n    setSelectedPathology(pathology);\n    setEditDialogOpen(true);\n  };\n\n  const handleEditDialogClose = () => {\n    setEditDialogOpen(false);\n    setSelectedPathology(null);\n  };\n\n  const handleEditSubmit = async (updatedPathology) => {\n    try {\n      const response = await fetch('http://localhost:5000/api/pathologies', {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        credentials: 'include',\n        body: JSON.stringify(updatedPathology),\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      setPathologies((prevPathologies) =>\n        prevPathologies.map((pathology) =>\n          pathology.id === updatedPathology.id ? { ...pathology, ...updatedPathology } : pathology\n        )\n      );\n      setEditDialogOpen(false);\n      setSelectedPathology(null);\n    } catch (error) {\n      console.error('Error updating pathology:', error.message);\n    }\n  };\n\n  const handleDeleteDialogOpen = (pathology) => {\n    setSelectedPathology(pathology);\n    setDeleteDialogOpen(true);\n  };\n\n  const handleDeleteDialogClose = () => {\n    setDeleteDialogOpen(false);\n    setSelectedPathology(null);\n  };\n\n  const handleSelectPathology = (id) => {\n    if (selectedPathologies.includes(id)) {\n      setSelectedPathologies(selectedPathologies.filter((selectedId) => selectedId !== id));\n    } else {\n      setSelectedPathologies([...selectedPathologies, id]);\n    }\n  };\n\n  const isSelected = (id) => selectedPathologies.includes(id);\n\n  const handleSelectAllPathologies = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = pathologies.map((pathology) => pathology.id);\n      setSelectedPathologies(newSelecteds);\n    } else {\n      setSelectedPathologies([]);\n    }\n  };\n\n  const isAllSelected = selectedPathologies.length === pathologies.length;\n\n  const handleMultipleDelete = () => {\n    setDeleteDialogOpen(true);\n    setSelectedPathology(null);\n  };\n\n  if (loading) {\n    return (\n      <Root>\n        <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n          <ClipLoader size={50} color={\"#123abc\"} loading={loading} />\n          <Typography variant=\"h6\" style={{ marginTop: '20px' }}>Loading...</Typography>\n        </Box>\n      </Root>\n    );\n  }\n\n  if (error) {\n    return (\n      <Root>\n        <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n          <Typography variant=\"h6\" color=\"error\">Error: {error}</Typography>\n          <Button variant=\"contained\" color=\"primary\" onClick={() => window.location.reload()}>Retry</Button>\n        </Box>\n      </Root>\n    );\n  }\n\n  return (\n    <Root>\n      <HamburgerMenuWrapper>\n        <HamburgerMenu />\n      </HamburgerMenuWrapper>\n      <div className=\"content\">\n        <Container component={Paper} className=\"table-container\">\n          <Header>\n            <IconButton onClick={() => navigate('/main')}>\n              <CloseIcon />\n            </IconButton>\n            <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n              Lista Patologie\n            </Typography>\n            {user && (\n              <AddButton\n                variant=\"contained\"\n                color=\"primary\"\n                startIcon={<AddIcon />}\n                onClick={handleAddDialogOpen}\n              >\n                Aggiungi Patologia\n              </AddButton>\n            )}\n          </Header>\n          <StyledTable className=\"styled-table\">\n            <TableHead>\n              <TableRow>\n                {user && user.isAdmin && (\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      indeterminate={selectedPathologies.length > 0 && selectedPathologies.length < pathologies.length}\n                      checked={isAllSelected}\n                      onChange={handleSelectAllPathologies}\n                    />\n                  </TableCell>\n                )}\n                <TableCell className=\"table-header\">Nome</TableCell>\n                <TableCell className=\"table-header\">Descrizione</TableCell>\n                {user && user.isAdmin && <TableCell className=\"table-header\">Azioni</TableCell>}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {pathologies.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((pathology) => (\n                <TableRow\n                  key={pathology.id}\n                  hover\n                  role=\"checkbox\"\n                  aria-checked={isSelected(pathology.id)}\n                  selected={isSelected(pathology.id)}\n                >\n                  {user && user.isAdmin && (\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        checked={isSelected(pathology.id)}\n                        onChange={() => handleSelectPathology(pathology.id)}\n                      />\n                    </TableCell>\n                  )}\n                  <TableCell>{pathology.name}</TableCell>\n                  <TableCell>{pathology.description}</TableCell>\n                  {user && user.isAdmin && (\n                    <TableCell>\n                      <IconButton onClick={() => handleEditDialogOpen(pathology)} color=\"primary\">\n                        <EditIcon />\n                      </IconButton>\n                      <IconButton onClick={() => handleDeleteDialogOpen(pathology)} color=\"secondary\">\n                        <DeleteIcon />\n                      </IconButton>\n                    </TableCell>\n                  )}\n                </TableRow>\n              ))}\n            </TableBody>\n          </StyledTable>\n          <TablePagination\n            rowsPerPageOptions={[10, 25, 50]}\n            component=\"div\"\n            count={pathologies.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onPageChange={handleChangePage}\n            onRowsPerPageChange={handleChangeRowsPerPage}\n            className=\"pagination\"\n          />\n        </Container>\n      </div>\n      {user && user.isAdmin && (\n        <AddPathologyDialog open={addDialogOpen} onClose={handleAddDialogClose} onPathologyAdded={handlePathologyAdded} />\n      )}\n      {user && selectedPathology && (\n        <EditPathologyDialog\n          open={editDialogOpen}\n          onClose={handleEditDialogClose}\n          onEditSubmit={handleEditSubmit}\n          pathology={selectedPathology}\n        />\n      )}\n      <Dialog open={deleteDialogOpen} onClose={handleDeleteDialogClose}>\n        <DialogTitle>Conferma Eliminazione</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            {selectedPathology\n              ? `Sei sicuro di voler eliminare la patologia ${selectedPathology.name}?`\n              : 'Sei sicuro di voler eliminare le patologie selezionate?'}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleDeleteDialogClose} color=\"primary\">\n            Annulla\n          </Button>\n          <Button\n            onClick={() => handleDelete(selectedPathology ? [selectedPathology.id] : selectedPathologies)}\n            color=\"primary\"\n            autoFocus\n          >\n            Elimina\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Root>\n  );\n}\n\nexport default PathologyList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}