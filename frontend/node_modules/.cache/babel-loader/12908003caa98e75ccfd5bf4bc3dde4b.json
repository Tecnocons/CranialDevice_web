{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Davide Grieco\\\\Desktop\\\\CranialDevice_web\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport LoginRegister from './pages/login/LoginRegister';\nimport MainPage from './pages/main/MainPage';\nimport AddUser from './pages/admin/AddUser';\nimport UserList from './pages/admin/UserList';\nimport PatientList from './pages/patients/PatientList';\nimport HamburgerMenu from './components/HamburgerMenu';\nimport AuthenticatedRoute from '../components/AuthenticatedRoute';\nimport { useAuth } from './contexts/AuthContext';\nimport LoadingSpinner from './components/LoadingSpinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    loading\n  } = useAuth();\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(HamburgerMenu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(LoginRegister, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/main\",\n        element: /*#__PURE__*/_jsxDEV(AuthenticatedRoute, {\n          element: MainPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/add-user\",\n        element: /*#__PURE__*/_jsxDEV(AuthenticatedRoute, {\n          element: AddUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/users\",\n        element: /*#__PURE__*/_jsxDEV(AuthenticatedRoute, {\n          element: UserList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/patients\",\n        element: /*#__PURE__*/_jsxDEV(AuthenticatedRoute, {\n          element: PatientList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(LoginRegister, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XG23gq19gO+cpdyphzuFQHtaS84=\", false, function () {\n  return [useAuth];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","LoginRegister","MainPage","AddUser","UserList","PatientList","HamburgerMenu","AuthenticatedRoute","useAuth","LoadingSpinner","jsxDEV","_jsxDEV","App","_s","loading","fileName","_jsxFileName","lineNumber","columnNumber","children","path","element","_c","$RefreshReg$"],"sources":["C:/Users/Davide Grieco/Desktop/CranialDevice_web/frontend/src/App.js"],"sourcesContent":["import React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport LoginRegister from './pages/login/LoginRegister';\r\nimport MainPage from './pages/main/MainPage';\r\nimport AddUser from './pages/admin/AddUser';\r\nimport UserList from './pages/admin/UserList';\r\nimport PatientList from './pages/patients/PatientList';\r\nimport HamburgerMenu from './components/HamburgerMenu';\r\nimport AuthenticatedRoute from '../components/AuthenticatedRoute';\r\nimport { useAuth } from './contexts/AuthContext';\r\nimport LoadingSpinner from './components/LoadingSpinner';\r\n\r\nfunction App() {\r\n  const { loading } = useAuth();\r\n\r\n  if (loading) {\r\n    return <LoadingSpinner />;\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <HamburgerMenu />\r\n      <Routes>\r\n        <Route path=\"/login\" element={<LoginRegister />} />\r\n        <Route path=\"/main\" element={<AuthenticatedRoute element={MainPage} />} />\r\n        <Route path=\"/add-user\" element={<AuthenticatedRoute element={AddUser} />} />\r\n        <Route path=\"/users\" element={<AuthenticatedRoute element={UserList} />} />\r\n        <Route path=\"/patients\" element={<AuthenticatedRoute element={PatientList} />} />\r\n        <Route path=\"/\" element={<LoginRegister />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}