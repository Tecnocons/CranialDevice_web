{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Davide Grieco\\\\Desktop\\\\CranialDevice_web\\\\frontend\\\\src\\\\pages\\\\patients\\\\PatientProfile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { Container, Grid, Paper, Typography, IconButton, Button } from '@mui/material';\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport SaveAltIcon from '@mui/icons-material/SaveAlt';\nimport EditIcon from '@mui/icons-material/Edit';\nimport jsPDF from 'jspdf';\nimport AssignPathologiesDialog from './AssignPathologiesDialog';\nimport AssignSymptomsDialog from './AssignSymptomsDialog';\nimport AssignTraumaticEventsDialog from './AssignTraumaticEventsDialog';\nimport AssignSurgeriesDialog from './AssignSurgeriesDialog'; // Import the new dialog\nimport EditPatientDialog from './EditPatientDialog';\nimport './PatientProfile.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PatientProfile = () => {\n  _s();\n  const {\n    uuid\n  } = useParams();\n  const navigate = useNavigate();\n  const [patient, setPatient] = useState(null);\n  const [pathologies, setPathologies] = useState([]);\n  const [symptoms, setSymptoms] = useState([]);\n  const [traumaticEvents, setTraumaticEvents] = useState([]);\n  const [surgeries, setSurgeries] = useState([]); // Add state for surgeries\n  const [assignPathologiesDialogOpen, setAssignPathologiesDialogOpen] = useState(false);\n  const [assignSymptomsDialogOpen, setAssignSymptomsDialogOpen] = useState(false);\n  const [assignTraumaticEventsDialogOpen, setAssignTraumaticEventsDialogOpen] = useState(false);\n  const [assignSurgeriesDialogOpen, setAssignSurgeriesDialogOpen] = useState(false); // Add state for surgeries dialog\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n  const fetchPatient = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/patients/${uuid}`, {\n        method: 'GET',\n        credentials: 'include'\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setPatient(data);\n    } catch (error) {\n      console.error('Error fetching patient:', error);\n    }\n  };\n  const fetchPathologies = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/patient_pathology/${uuid}`, {\n        method: 'GET',\n        credentials: 'include'\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setPathologies(data);\n    } catch (error) {\n      console.error('Error fetching pathologies:', error);\n    }\n  };\n  const fetchSymptoms = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/patient_symptom/${uuid}`, {\n        method: 'GET',\n        credentials: 'include'\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setSymptoms(data);\n    } catch (error) {\n      console.error('Error fetching symptoms:', error);\n    }\n  };\n  const fetchTraumaticEvents = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/patient_traumatic_event/${uuid}`, {\n        method: 'GET',\n        credentials: 'include'\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setTraumaticEvents(data);\n    } catch (error) {\n      console.error('Error fetching traumatic events:', error);\n    }\n  };\n  const fetchSurgeries = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/patient_surgery/${uuid}`, {\n        method: 'GET',\n        credentials: 'include'\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setSurgeries(data);\n    } catch (error) {\n      console.error('Error fetching surgeries:', error);\n    }\n  };\n  useEffect(() => {\n    fetchPatient();\n    fetchPathologies();\n    fetchSymptoms();\n    fetchTraumaticEvents();\n    fetchSurgeries(); // Fetch surgeries as well\n  }, [uuid]);\n  if (!patient) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 12\n    }, this);\n  }\n  const measurements = [{\n    date: '2024-06-20',\n    value: '120/80'\n  }, {\n    date: '2024-06-21',\n    value: '125/85'\n  }];\n  const treatments = [{\n    date: '2024-06-20',\n    description: 'Antibiotics'\n  }, {\n    date: '2024-06-21',\n    description: 'Physical Therapy'\n  }];\n  const generatePDF = () => {\n    const doc = new jsPDF();\n    doc.setFontSize(18);\n    doc.text(`Cartella Clinica di ${patient.nominativo}`, 20, 20);\n    doc.setFontSize(14);\n    doc.text('Informazioni del Paziente', 20, 30);\n    doc.setFontSize(12);\n    doc.text(`Nome: ${patient.nominativo}`, 20, 40);\n    doc.text(`EtÃ : ${patient.eta}`, 20, 50);\n    doc.text(`Altezza: ${patient.altezza}`, 20, 60);\n    doc.text(`Peso: ${patient.peso}`, 20, 70);\n    doc.text(`Sesso: ${patient.sesso}`, 20, 80);\n    doc.setFontSize(14);\n    doc.text('Misurazioni', 20, 90);\n    doc.setFontSize(12);\n    measurements.forEach((measurement, index) => {\n      doc.text(`${measurement.date}: ${measurement.value}`, 20, 100 + index * 10);\n    });\n    doc.setFontSize(14);\n    doc.text('Trattamenti', 20, 110 + measurements.length * 10);\n    doc.setFontSize(12);\n    treatments.forEach((treatment, index) => {\n      doc.text(`${treatment.date}: ${treatment.description}`, 20, 120 + measurements.length * 10 + index * 10);\n    });\n    doc.setFontSize(14);\n    doc.text('Patologie', 20, 130 + measurements.length * 10 + treatments.length * 10);\n    doc.setFontSize(12);\n    pathologies.forEach((pathology, index) => {\n      doc.text(pathology.name, 20, 140 + measurements.length * 10 + treatments.length * 10 + index * 10);\n    });\n    doc.setFontSize(14);\n    doc.text('Sintomi', 20, 150 + measurements.length * 10 + treatments.length * 10 + pathologies.length * 10);\n    doc.setFontSize(12);\n    symptoms.forEach((symptom, index) => {\n      doc.text(symptom.name, 20, 160 + measurements.length * 10 + treatments.length * 10 + pathologies.length * 10 + index * 10);\n    });\n    doc.setFontSize(14);\n    doc.text('Eventi Traumatici', 20, 170 + measurements.length * 10 + treatments.length * 10 + pathologies.length * 10 + symptoms.length * 10);\n    doc.setFontSize(12);\n    traumaticEvents.forEach((event, index) => {\n      doc.text(event.name, 20, 180 + measurements.length * 10 + treatments.length * 10 + pathologies.length * 10 + symptoms.length * 10 + index * 10);\n    });\n    doc.setFontSize(14);\n    doc.text('Interventi', 20, 190 + measurements.length * 10 + treatments.length * 10 + pathologies.length * 10 + symptoms.length * 10 + traumaticEvents.length * 10);\n    doc.setFontSize(12);\n    surgeries.forEach((surgery, index) => {\n      doc.text(surgery.name, 20, 200 + measurements.length * 10 + treatments.length * 10 + pathologies.length * 10 + symptoms.length * 10 + traumaticEvents.length * 10 + index * 10);\n    });\n    doc.save(`Cartella_Clinica_${patient.nominativo}.pdf`);\n  };\n  const getIcon = () => {\n    switch (patient.sesso) {\n      case 'maschio':\n        return 'ðŸ‘¤';\n      // Placeholder icon for male\n      case 'femmina':\n        return 'ðŸ‘©';\n      // Placeholder icon for female\n      default:\n        return 'ðŸ‘¤';\n      // Placeholder icon for other/unspecified\n    }\n  };\n  const handleAssignPathologiesDialogOpen = () => {\n    setAssignPathologiesDialogOpen(true);\n  };\n  const handleAssignPathologiesDialogClose = () => {\n    setAssignPathologiesDialogOpen(false);\n    fetchPathologies(); // Refresh pathologies after assignment\n  };\n  const handleAssignSymptomsDialogOpen = () => {\n    setAssignSymptomsDialogOpen(true);\n  };\n  const handleAssignSymptomsDialogClose = () => {\n    setAssignSymptomsDialogOpen(false);\n    fetchSymptoms(); // Refresh symptoms after assignment\n  };\n  const handleAssignTraumaticEventsDialogOpen = () => {\n    setAssignTraumaticEventsDialogOpen(true);\n  };\n  const handleAssignTraumaticEventsDialogClose = () => {\n    setAssignTraumaticEventsDialogOpen(false);\n    fetchTraumaticEvents(); // Refresh traumatic events after assignment\n  };\n  const handleAssignSurgeriesDialogOpen = () => {\n    setAssignSurgeriesDialogOpen(true);\n  };\n  const handleAssignSurgeriesDialogClose = () => {\n    setAssignSurgeriesDialogOpen(false);\n    fetchSurgeries(); // Refresh surgeries after assignment\n  };\n  const handleEditDialogOpen = () => {\n    setEditDialogOpen(true);\n  };\n  const handleEditDialogClose = () => {\n    setEditDialogOpen(false);\n    fetchPatient(); // Refresh patient data\n  };\n  const handleEditSubmit = async updatedPatient => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/patients`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify(updatedPatient)\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      setPatient(updatedPatient);\n      setEditDialogOpen(false);\n    } catch (error) {\n      console.error('Error updating patient:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"patient-info-container\",\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: () => navigate(-1),\n      className: \"back-button\",\n      children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        className: \"patient-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"patient-icon\",\n          children: getIcon()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"patient-details\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            children: patient.nominativo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: [\"Et\\xE0: \", patient.eta]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: [\"Altezza: \", patient.altezza]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: [\"Peso: \", patient.peso]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: [\"Sesso: \", patient.sesso]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: handleEditDialogOpen,\n            className: \"edit-button\",\n            children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: generatePDF,\n          className: \"pdf-button\",\n          children: /*#__PURE__*/_jsxDEV(SaveAltIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: \"info-block\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            className: \"box-title\",\n            children: \"Misurazioni\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-content\",\n            children: measurements.map((measurement, index) => /*#__PURE__*/_jsxDEV(Typography, {\n              children: `${measurement.date}: ${measurement.value}`\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: \"info-block\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            className: \"box-title\",\n            children: \"Trattamenti\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-content\",\n            children: treatments.map((treatment, index) => /*#__PURE__*/_jsxDEV(Typography, {\n              children: `${treatment.date}: ${treatment.description}`\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: \"info-block\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            className: \"box-title\",\n            children: \"Patologie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-content\",\n            children: pathologies.map((pathology, index) => /*#__PURE__*/_jsxDEV(Typography, {\n              children: pathology.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleAssignPathologiesDialogOpen,\n            children: \"Assegna Patologie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: \"info-block\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            className: \"box-title\",\n            children: \"Sintomi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-content\",\n            children: symptoms.map((symptom, index) => /*#__PURE__*/_jsxDEV(Typography, {\n              children: symptom.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleAssignSymptomsDialogOpen,\n            children: \"Assegna Sintomi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: \"info-block\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            className: \"box-title\",\n            children: \"Eventi Traumatici\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-content\",\n            children: traumaticEvents.map((event, index) => /*#__PURE__*/_jsxDEV(Typography, {\n              children: event.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleAssignTraumaticEventsDialogOpen,\n            children: \"Assegna Eventi Traumatici\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: \"info-block\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            className: \"box-title\",\n            children: \"Interventi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-content\",\n            children: surgeries.map((surgery, index) => /*#__PURE__*/_jsxDEV(Typography, {\n              children: surgery.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleAssignSurgeriesDialogOpen,\n            children: \"Assegna Interventi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AssignPathologiesDialog, {\n      open: assignPathologiesDialogOpen,\n      onClose: handleAssignPathologiesDialogClose,\n      patient: patient,\n      onAssign: fetchPathologies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AssignSymptomsDialog, {\n      open: assignSymptomsDialogOpen,\n      onClose: handleAssignSymptomsDialogClose,\n      patient: patient,\n      onAssign: fetchSymptoms\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AssignTraumaticEventsDialog, {\n      open: assignTraumaticEventsDialogOpen,\n      onClose: handleAssignTraumaticEventsDialogClose,\n      patient: patient,\n      onAssign: fetchTraumaticEvents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AssignSurgeriesDialog, {\n      open: assignSurgeriesDialogOpen,\n      onClose: handleAssignSurgeriesDialogClose,\n      patient: patient,\n      onAssign: fetchSurgeries\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditPatientDialog, {\n      open: editDialogOpen,\n      onClose: handleEditDialogClose,\n      onEditSubmit: handleEditSubmit,\n      patient: patient\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 269,\n    columnNumber: 5\n  }, this);\n};\n_s(PatientProfile, \"JG9qWMyDqiXcJFe/4PKfcEWQdH0=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = PatientProfile;\nexport default PatientProfile;\nvar _c;\n$RefreshReg$(_c, \"PatientProfile\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","Container","Grid","Paper","Typography","IconButton","Button","ArrowBackIcon","SaveAltIcon","EditIcon","jsPDF","AssignPathologiesDialog","AssignSymptomsDialog","AssignTraumaticEventsDialog","AssignSurgeriesDialog","EditPatientDialog","jsxDEV","_jsxDEV","PatientProfile","_s","uuid","navigate","patient","setPatient","pathologies","setPathologies","symptoms","setSymptoms","traumaticEvents","setTraumaticEvents","surgeries","setSurgeries","assignPathologiesDialogOpen","setAssignPathologiesDialogOpen","assignSymptomsDialogOpen","setAssignSymptomsDialogOpen","assignTraumaticEventsDialogOpen","setAssignTraumaticEventsDialogOpen","assignSurgeriesDialogOpen","setAssignSurgeriesDialogOpen","editDialogOpen","setEditDialogOpen","fetchPatient","response","fetch","method","credentials","ok","Error","data","json","error","console","fetchPathologies","fetchSymptoms","fetchTraumaticEvents","fetchSurgeries","children","fileName","_jsxFileName","lineNumber","columnNumber","measurements","date","value","treatments","description","generatePDF","doc","setFontSize","text","nominativo","eta","altezza","peso","sesso","forEach","measurement","index","length","treatment","pathology","name","symptom","event","surgery","save","getIcon","handleAssignPathologiesDialogOpen","handleAssignPathologiesDialogClose","handleAssignSymptomsDialogOpen","handleAssignSymptomsDialogClose","handleAssignTraumaticEventsDialogOpen","handleAssignTraumaticEventsDialogClose","handleAssignSurgeriesDialogOpen","handleAssignSurgeriesDialogClose","handleEditDialogOpen","handleEditDialogClose","handleEditSubmit","updatedPatient","headers","body","JSON","stringify","message","className","onClick","container","spacing","item","xs","variant","md","map","color","open","onClose","onAssign","onEditSubmit","_c","$RefreshReg$"],"sources":["C:/Users/Davide Grieco/Desktop/CranialDevice_web/frontend/src/pages/patients/PatientProfile.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { Container, Grid, Paper, Typography, IconButton, Button } from '@mui/material';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\nimport SaveAltIcon from '@mui/icons-material/SaveAlt';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport jsPDF from 'jspdf';\r\nimport AssignPathologiesDialog from './AssignPathologiesDialog';\r\nimport AssignSymptomsDialog from './AssignSymptomsDialog';\r\nimport AssignTraumaticEventsDialog from './AssignTraumaticEventsDialog';\r\nimport AssignSurgeriesDialog from './AssignSurgeriesDialog'; // Import the new dialog\r\nimport EditPatientDialog from './EditPatientDialog';\r\nimport './PatientProfile.css';\r\n\r\nconst PatientProfile = () => {\r\n  const { uuid } = useParams();\r\n  const navigate = useNavigate();\r\n  const [patient, setPatient] = useState(null);\r\n  const [pathologies, setPathologies] = useState([]);\r\n  const [symptoms, setSymptoms] = useState([]);\r\n  const [traumaticEvents, setTraumaticEvents] = useState([]);\r\n  const [surgeries, setSurgeries] = useState([]); // Add state for surgeries\r\n  const [assignPathologiesDialogOpen, setAssignPathologiesDialogOpen] = useState(false);\r\n  const [assignSymptomsDialogOpen, setAssignSymptomsDialogOpen] = useState(false);\r\n  const [assignTraumaticEventsDialogOpen, setAssignTraumaticEventsDialogOpen] = useState(false);\r\n  const [assignSurgeriesDialogOpen, setAssignSurgeriesDialogOpen] = useState(false); // Add state for surgeries dialog\r\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\r\n\r\n  const fetchPatient = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/patients/${uuid}`, {\r\n        method: 'GET',\r\n        credentials: 'include',\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n      const data = await response.json();\r\n      setPatient(data);\r\n    } catch (error) {\r\n      console.error('Error fetching patient:', error);\r\n    }\r\n  };\r\n\r\n  const fetchPathologies = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/patient_pathology/${uuid}`, {\r\n        method: 'GET',\r\n        credentials: 'include',\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n      const data = await response.json();\r\n      setPathologies(data);\r\n    } catch (error) {\r\n      console.error('Error fetching pathologies:', error);\r\n    }\r\n  };\r\n\r\n  const fetchSymptoms = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/patient_symptom/${uuid}`, {\r\n        method: 'GET',\r\n        credentials: 'include',\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n      const data = await response.json();\r\n      setSymptoms(data);\r\n    } catch (error) {\r\n      console.error('Error fetching symptoms:', error);\r\n    }\r\n  };\r\n\r\n  const fetchTraumaticEvents = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/patient_traumatic_event/${uuid}`, {\r\n        method: 'GET',\r\n        credentials: 'include',\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n      const data = await response.json();\r\n      setTraumaticEvents(data);\r\n    } catch (error) {\r\n      console.error('Error fetching traumatic events:', error);\r\n    }\r\n  };\r\n\r\n  const fetchSurgeries = async () => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/patient_surgery/${uuid}`, {\r\n        method: 'GET',\r\n        credentials: 'include',\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n      const data = await response.json();\r\n      setSurgeries(data);\r\n    } catch (error) {\r\n      console.error('Error fetching surgeries:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPatient();\r\n    fetchPathologies();\r\n    fetchSymptoms();\r\n    fetchTraumaticEvents();\r\n    fetchSurgeries(); // Fetch surgeries as well\r\n  }, [uuid]);\r\n\r\n  if (!patient) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  const measurements = [\r\n    { date: '2024-06-20', value: '120/80' },\r\n    { date: '2024-06-21', value: '125/85' },\r\n  ];\r\n\r\n  const treatments = [\r\n    { date: '2024-06-20', description: 'Antibiotics' },\r\n    { date: '2024-06-21', description: 'Physical Therapy' },\r\n  ];\r\n\r\n  const generatePDF = () => {\r\n    const doc = new jsPDF();\r\n    doc.setFontSize(18);\r\n    doc.text(`Cartella Clinica di ${patient.nominativo}`, 20, 20);\r\n\r\n    doc.setFontSize(14);\r\n    doc.text('Informazioni del Paziente', 20, 30);\r\n    doc.setFontSize(12);\r\n    doc.text(`Nome: ${patient.nominativo}`, 20, 40);\r\n    doc.text(`EtÃ : ${patient.eta}`, 20, 50);\r\n    doc.text(`Altezza: ${patient.altezza}`, 20, 60);\r\n    doc.text(`Peso: ${patient.peso}`, 20, 70);\r\n    doc.text(`Sesso: ${patient.sesso}`, 20, 80);\r\n\r\n    doc.setFontSize(14);\r\n    doc.text('Misurazioni', 20, 90);\r\n    doc.setFontSize(12);\r\n    measurements.forEach((measurement, index) => {\r\n      doc.text(`${measurement.date}: ${measurement.value}`, 20, 100 + index * 10);\r\n    });\r\n\r\n    doc.setFontSize(14);\r\n    doc.text('Trattamenti', 20, 110 + measurements.length * 10);\r\n    doc.setFontSize(12);\r\n    treatments.forEach((treatment, index) => {\r\n      doc.text(`${treatment.date}: ${treatment.description}`, 20, 120 + measurements.length * 10 + index * 10);\r\n    });\r\n\r\n    doc.setFontSize(14);\r\n    doc.text('Patologie', 20, 130 + measurements.length * 10 + treatments.length * 10);\r\n    doc.setFontSize(12);\r\n    pathologies.forEach((pathology, index) => {\r\n      doc.text(pathology.name, 20, 140 + measurements.length * 10 + treatments.length * 10 + index * 10);\r\n    });\r\n\r\n    doc.setFontSize(14);\r\n    doc.text('Sintomi', 20, 150 + measurements.length * 10 + treatments.length * 10 + pathologies.length * 10);\r\n    doc.setFontSize(12);\r\n    symptoms.forEach((symptom, index) => {\r\n      doc.text(symptom.name, 20, 160 + measurements.length * 10 + treatments.length * 10 + pathologies.length * 10 + index * 10);\r\n    });\r\n\r\n    doc.setFontSize(14);\r\n    doc.text('Eventi Traumatici', 20, 170 + measurements.length * 10 + treatments.length * 10 + pathologies.length * 10 + symptoms.length * 10);\r\n    doc.setFontSize(12);\r\n    traumaticEvents.forEach((event, index) => {\r\n      doc.text(event.name, 20, 180 + measurements.length * 10 + treatments.length * 10 + pathologies.length * 10 + symptoms.length * 10 + index * 10);\r\n    });\r\n\r\n    doc.setFontSize(14);\r\n    doc.text('Interventi', 20, 190 + measurements.length * 10 + treatments.length * 10 + pathologies.length * 10 + symptoms.length * 10 + traumaticEvents.length * 10);\r\n    doc.setFontSize(12);\r\n    surgeries.forEach((surgery, index) => {\r\n      doc.text(surgery.name, 20, 200 + measurements.length * 10 + treatments.length * 10 + pathologies.length * 10 + symptoms.length * 10 + traumaticEvents.length * 10 + index * 10);\r\n    });\r\n\r\n    doc.save(`Cartella_Clinica_${patient.nominativo}.pdf`);\r\n  };\r\n\r\n  const getIcon = () => {\r\n    switch (patient.sesso) {\r\n      case 'maschio':\r\n        return 'ðŸ‘¤'; // Placeholder icon for male\r\n      case 'femmina':\r\n        return 'ðŸ‘©'; // Placeholder icon for female\r\n      default:\r\n        return 'ðŸ‘¤'; // Placeholder icon for other/unspecified\r\n    }\r\n  };\r\n\r\n  const handleAssignPathologiesDialogOpen = () => {\r\n    setAssignPathologiesDialogOpen(true);\r\n  };\r\n\r\n  const handleAssignPathologiesDialogClose = () => {\r\n    setAssignPathologiesDialogOpen(false);\r\n    fetchPathologies(); // Refresh pathologies after assignment\r\n  };\r\n\r\n  const handleAssignSymptomsDialogOpen = () => {\r\n    setAssignSymptomsDialogOpen(true);\r\n  };\r\n\r\n  const handleAssignSymptomsDialogClose = () => {\r\n    setAssignSymptomsDialogOpen(false);\r\n    fetchSymptoms(); // Refresh symptoms after assignment\r\n  };\r\n\r\n  const handleAssignTraumaticEventsDialogOpen = () => {\r\n    setAssignTraumaticEventsDialogOpen(true);\r\n  };\r\n\r\n  const handleAssignTraumaticEventsDialogClose = () => {\r\n    setAssignTraumaticEventsDialogOpen(false);\r\n    fetchTraumaticEvents(); // Refresh traumatic events after assignment\r\n  };\r\n\r\n  const handleAssignSurgeriesDialogOpen = () => {\r\n    setAssignSurgeriesDialogOpen(true);\r\n  };\r\n\r\n  const handleAssignSurgeriesDialogClose = () => {\r\n    setAssignSurgeriesDialogOpen(false);\r\n    fetchSurgeries(); // Refresh surgeries after assignment\r\n  };\r\n\r\n  const handleEditDialogOpen = () => {\r\n    setEditDialogOpen(true);\r\n  };\r\n\r\n  const handleEditDialogClose = () => {\r\n    setEditDialogOpen(false);\r\n    fetchPatient(); // Refresh patient data\r\n  };\r\n\r\n  const handleEditSubmit = async (updatedPatient) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/patients`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify(updatedPatient),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n\r\n      setPatient(updatedPatient);\r\n      setEditDialogOpen(false);\r\n    } catch (error) {\r\n      console.error('Error updating patient:', error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className=\"patient-info-container\">\r\n      <IconButton onClick={() => navigate(-1)} className=\"back-button\">\r\n        <ArrowBackIcon />\r\n      </IconButton>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} className=\"patient-header\">\r\n          <div className=\"patient-icon\">{getIcon()}</div>\r\n          <div className=\"patient-details\">\r\n            <Typography variant=\"h4\">{patient.nominativo}</Typography>\r\n            <Typography variant=\"body1\">EtÃ : {patient.eta}</Typography>\r\n            <Typography variant=\"body1\">Altezza: {patient.altezza}</Typography>\r\n            <Typography variant=\"body1\">Peso: {patient.peso}</Typography>\r\n            <Typography variant=\"body1\">Sesso: {patient.sesso}</Typography>\r\n            <IconButton onClick={handleEditDialogOpen} className=\"edit-button\">\r\n              <EditIcon />\r\n            </IconButton>\r\n          </div>\r\n          <IconButton onClick={generatePDF} className=\"pdf-button\">\r\n            <SaveAltIcon />\r\n          </IconButton>\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <Paper className=\"info-block\">\r\n            <Typography variant=\"h6\" className=\"box-title\">Misurazioni</Typography>\r\n            <div className=\"info-content\">\r\n              {measurements.map((measurement, index) => (\r\n                <Typography key={index}>{`${measurement.date}: ${measurement.value}`}</Typography>\r\n              ))}\r\n            </div>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <Paper className=\"info-block\">\r\n            <Typography variant=\"h6\" className=\"box-title\">Trattamenti</Typography>\r\n            <div className=\"info-content\">\r\n              {treatments.map((treatment, index) => (\r\n                <Typography key={index}>{`${treatment.date}: ${treatment.description}`}</Typography>\r\n              ))}\r\n            </div>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <Paper className=\"info-block\">\r\n            <Typography variant=\"h6\" className=\"box-title\">Patologie</Typography>\r\n            <div className=\"info-content\">\r\n              {pathologies.map((pathology, index) => (\r\n                <Typography key={index}>{pathology.name}</Typography>\r\n              ))}\r\n            </div>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleAssignPathologiesDialogOpen}>\r\n              Assegna Patologie\r\n            </Button>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <Paper className=\"info-block\">\r\n            <Typography variant=\"h6\" className=\"box-title\">Sintomi</Typography>\r\n            <div className=\"info-content\">\r\n              {symptoms.map((symptom, index) => (\r\n                <Typography key={index}>{symptom.name}</Typography>\r\n              ))}\r\n            </div>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleAssignSymptomsDialogOpen}>\r\n              Assegna Sintomi\r\n            </Button>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <Paper className=\"info-block\">\r\n            <Typography variant=\"h6\" className=\"box-title\">Eventi Traumatici</Typography>\r\n            <div className=\"info-content\">\r\n              {traumaticEvents.map((event, index) => (\r\n                <Typography key={index}>{event.name}</Typography>\r\n              ))}\r\n            </div>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleAssignTraumaticEventsDialogOpen}>\r\n              Assegna Eventi Traumatici\r\n            </Button>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <Paper className=\"info-block\">\r\n            <Typography variant=\"h6\" className=\"box-title\">Interventi</Typography>\r\n            <div className=\"info-content\">\r\n              {surgeries.map((surgery, index) => (\r\n                <Typography key={index}>{surgery.name}</Typography>\r\n              ))}\r\n            </div>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleAssignSurgeriesDialogOpen}>\r\n              Assegna Interventi\r\n            </Button>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n      <AssignPathologiesDialog\r\n        open={assignPathologiesDialogOpen}\r\n        onClose={handleAssignPathologiesDialogClose}\r\n        patient={patient}\r\n        onAssign={fetchPathologies}\r\n      />\r\n      <AssignSymptomsDialog\r\n        open={assignSymptomsDialogOpen}\r\n        onClose={handleAssignSymptomsDialogClose}\r\n        patient={patient}\r\n        onAssign={fetchSymptoms}\r\n      />\r\n      <AssignTraumaticEventsDialog\r\n        open={assignTraumaticEventsDialogOpen}\r\n        onClose={handleAssignTraumaticEventsDialogClose}\r\n        patient={patient}\r\n        onAssign={fetchTraumaticEvents}\r\n      />\r\n      <AssignSurgeriesDialog\r\n        open={assignSurgeriesDialogOpen}\r\n        onClose={handleAssignSurgeriesDialogClose}\r\n        patient={patient}\r\n        onAssign={fetchSurgeries}\r\n      />\r\n      <EditPatientDialog\r\n        open={editDialogOpen}\r\n        onClose={handleEditDialogClose}\r\n        onEditSubmit={handleEditSubmit}\r\n        patient={patient}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PatientProfile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}