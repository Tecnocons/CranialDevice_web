{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Davide Grieco\\\\Desktop\\\\CranialDevice_web\\\\frontend\\\\src\\\\pages\\\\symptoms\\\\SymptomList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Container, Typography, Table, TableBody, TableCell, TableHead, TableRow, Paper, Button, TablePagination, IconButton, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Checkbox, Link } from '@mui/material';\nimport { Delete as DeleteIcon, Edit as EditIcon, ArrowBack as ArrowBackIcon } from '@mui/icons-material';\nimport { useAuth } from '../../contexts/AuthContext';\nimport AddSymptomDialog from './AddSymptomDialog';\nimport EditSymptomDialog from './EditSymptomDialog';\nimport { useNavigate } from 'react-router-dom';\nimport './SymptomList.css';\nimport HamburgerMenu from '../../components/HamburgerMenu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SymptomList() {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const navigate = useNavigate();\n  const [symptoms, setSymptoms] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [addDialogOpen, setAddDialogOpen] = useState(false);\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n  const [selectedSymptom, setSelectedSymptom] = useState(null);\n  const [selectedSymptoms, setSelectedSymptoms] = useState([]);\n  useEffect(() => {\n    const fetchSymptoms = async () => {\n      if (!user) return;\n      try {\n        const response = await fetch('http://localhost:5000/api/symptoms', {\n          method: 'GET',\n          credentials: 'include'\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setSymptoms(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSymptoms();\n  }, [user]);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  const handleDelete = async ids => {\n    try {\n      const response = await fetch('http://localhost:5000/api/symptoms', {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          ids\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      setSymptoms(prevSymptoms => prevSymptoms.filter(symptom => !ids.includes(symptom.id)));\n      setDeleteDialogOpen(false);\n      setSelectedSymptoms([]);\n      setSelectedSymptom(null);\n    } catch (error) {\n      console.error('Error deleting symptom:', error.message);\n    }\n  };\n  const handleAddDialogOpen = () => {\n    setAddDialogOpen(true);\n  };\n  const handleAddDialogClose = () => {\n    setAddDialogOpen(false);\n  };\n  const handleSymptomAdded = () => {\n    setAddDialogOpen(false);\n    const fetchSymptoms = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/symptoms', {\n          method: 'GET',\n          credentials: 'include'\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setSymptoms(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSymptoms();\n  };\n  const handleEditDialogOpen = symptom => {\n    setSelectedSymptom(symptom);\n    setEditDialogOpen(true);\n  };\n  const handleEditDialogClose = () => {\n    setEditDialogOpen(false);\n    setSelectedSymptom(null);\n  };\n  const handleEditSubmit = async updatedSymptom => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/symptoms`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify(updatedSymptom)\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      setSymptoms(prevSymptoms => prevSymptoms.map(symptom => symptom.id === updatedSymptom.id ? {\n        ...symptom,\n        ...updatedSymptom\n      } : symptom));\n      setEditDialogOpen(false);\n      setSelectedSymptom(null);\n    } catch (error) {\n      console.error('Error updating symptom:', error.message);\n    }\n  };\n  const handleDeleteDialogOpen = symptom => {\n    setSelectedSymptom(symptom);\n    setDeleteDialogOpen(true);\n  };\n  const handleDeleteDialogClose = () => {\n    setDeleteDialogOpen(false);\n    setSelectedSymptom(null);\n  };\n  const handleSelectSymptom = id => {\n    if (selectedSymptoms.includes(id)) {\n      setSelectedSymptoms(selectedSymptoms.filter(symptomId => symptomId !== id));\n    } else {\n      setSelectedSymptoms([...selectedSymptoms, id]);\n    }\n  };\n  const isSelected = id => selectedSymptoms.includes(id);\n  const handleSelectAllSymptoms = event => {\n    if (event.target.checked) {\n      const newSelecteds = symptoms.map(symptom => symptom.id);\n      setSelectedSymptoms(newSelecteds);\n    } else {\n      setSelectedSymptoms([]);\n    }\n  };\n  const isAllSelected = selectedSymptoms.length === symptoms.length;\n  const handleMultipleDelete = () => {\n    setDeleteDialogOpen(true);\n    setSelectedSymptom(null);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"root\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"root\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"root\",\n    children: [/*#__PURE__*/_jsxDEV(HamburgerMenu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        component: Paper,\n        className: \"table-container\",\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => navigate(-1),\n          className: \"back-button\",\n          children: /*#__PURE__*/_jsxDEV(ArrowBackIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table-header-container\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            gutterBottom: true,\n            children: \"Lista Sintomi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), user && user.isAdmin && /*#__PURE__*/_jsxDEV(Button, {\n            className: \"add-symptom-btn\",\n            onClick: handleAddDialogOpen,\n            children: \"Aggiungi Sintomo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this), user && user.isAdmin && selectedSymptoms.length > 0 && /*#__PURE__*/_jsxDEV(Button, {\n            color: \"secondary\",\n            onClick: handleMultipleDelete,\n            children: \"Elimina Selezionati\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          className: \"styled-table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [user && user.isAdmin && /*#__PURE__*/_jsxDEV(TableCell, {\n                padding: \"checkbox\",\n                children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  indeterminate: selectedSymptoms.length > 0 && selectedSymptoms.length < symptoms.length,\n                  checked: isAllSelected,\n                  onChange: handleSelectAllSymptoms\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                className: \"table-header\",\n                children: \"Nome\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                className: \"table-header\",\n                children: \"Descrizione\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 17\n              }, this), user && user.isAdmin && /*#__PURE__*/_jsxDEV(TableCell, {\n                className: \"table-header\",\n                children: \"Azioni\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 42\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: symptoms.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(symptom => /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              role: \"checkbox\",\n              \"aria-checked\": isSelected(symptom.id),\n              selected: isSelected(symptom.id),\n              children: [user && user.isAdmin && /*#__PURE__*/_jsxDEV(TableCell, {\n                padding: \"checkbox\",\n                children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  checked: isSelected(symptom.id),\n                  onChange: () => handleSelectSymptom(symptom.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: symptom.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: symptom.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 19\n              }, this), user && user.isAdmin && /*#__PURE__*/_jsxDEV(TableCell, {\n                children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => handleEditDialogOpen(symptom),\n                  color: \"primary\",\n                  disabled: selectedSymptoms.length > 0,\n                  children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => handleDeleteDialogOpen(symptom),\n                  color: \"secondary\",\n                  children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 21\n              }, this)]\n            }, symptom.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n          rowsPerPageOptions: [10, 25, 50],\n          component: \"div\",\n          count: symptoms.length,\n          rowsPerPage: rowsPerPage,\n          page: page,\n          onPageChange: handleChangePage,\n          onRowsPerPageChange: handleChangeRowsPerPage,\n          className: \"pagination\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), user && /*#__PURE__*/_jsxDEV(AddSymptomDialog, {\n      open: addDialogOpen,\n      onClose: handleAddDialogClose,\n      onSymptomAdded: handleSymptomAdded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 9\n    }, this), user && selectedSymptom && /*#__PURE__*/_jsxDEV(EditSymptomDialog, {\n      open: editDialogOpen,\n      onClose: handleEditDialogClose,\n      onEditSubmit: handleEditSubmit,\n      symptom: selectedSymptom\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: deleteDialogOpen,\n      onClose: handleDeleteDialogClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Conferma Eliminazione\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: selectedSymptom ? `Sei sicuro di voler eliminare il sintomo ${selectedSymptom.name}?` : 'Sei sicuro di voler eliminare i sintomi selezionati?'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleDeleteDialogClose,\n          color: \"primary\",\n          children: \"Annulla\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => handleDelete(selectedSymptom ? [selectedSymptom.id] : selectedSymptoms),\n          color: \"primary\",\n          autoFocus: true,\n          children: \"Elimina\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 5\n  }, this);\n}\n_s(SymptomList, \"xmxD810O2yxAYjQqsDsEcAzw3Oo=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = SymptomList;\nexport default SymptomList;\nvar _c;\n$RefreshReg$(_c, \"SymptomList\");","map":{"version":3,"names":["React","useEffect","useState","Container","Typography","Table","TableBody","TableCell","TableHead","TableRow","Paper","Button","TablePagination","IconButton","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Checkbox","Link","Delete","DeleteIcon","Edit","EditIcon","ArrowBack","ArrowBackIcon","useAuth","AddSymptomDialog","EditSymptomDialog","useNavigate","HamburgerMenu","jsxDEV","_jsxDEV","SymptomList","_s","user","navigate","symptoms","setSymptoms","loading","setLoading","error","setError","page","setPage","rowsPerPage","setRowsPerPage","addDialogOpen","setAddDialogOpen","deleteDialogOpen","setDeleteDialogOpen","editDialogOpen","setEditDialogOpen","selectedSymptom","setSelectedSymptom","selectedSymptoms","setSelectedSymptoms","fetchSymptoms","response","fetch","method","credentials","ok","Error","data","json","message","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","handleDelete","ids","headers","body","JSON","stringify","prevSymptoms","filter","symptom","includes","id","console","handleAddDialogOpen","handleAddDialogClose","handleSymptomAdded","handleEditDialogOpen","handleEditDialogClose","handleEditSubmit","updatedSymptom","map","handleDeleteDialogOpen","handleDeleteDialogClose","handleSelectSymptom","symptomId","isSelected","handleSelectAllSymptoms","checked","newSelecteds","isAllSelected","length","handleMultipleDelete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","component","onClick","variant","gutterBottom","isAdmin","color","padding","indeterminate","onChange","slice","hover","role","selected","name","description","disabled","rowsPerPageOptions","count","onPageChange","onRowsPerPageChange","open","onClose","onSymptomAdded","onEditSubmit","autoFocus","_c","$RefreshReg$"],"sources":["C:/Users/Davide Grieco/Desktop/CranialDevice_web/frontend/src/pages/symptoms/SymptomList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Button,\r\n  TablePagination,\r\n  IconButton,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Checkbox,\r\n  Link,\r\n} from '@mui/material';\r\nimport { Delete as DeleteIcon, Edit as EditIcon, ArrowBack as ArrowBackIcon } from '@mui/icons-material';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport AddSymptomDialog from './AddSymptomDialog';\r\nimport EditSymptomDialog from './EditSymptomDialog';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './SymptomList.css';\r\nimport HamburgerMenu from '../../components/HamburgerMenu';\r\n\r\nfunction SymptomList() {\r\n  const { user } = useAuth();\r\n  const navigate = useNavigate();\r\n  const [symptoms, setSymptoms] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [addDialogOpen, setAddDialogOpen] = useState(false);\r\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\r\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\r\n  const [selectedSymptom, setSelectedSymptom] = useState(null);\r\n  const [selectedSymptoms, setSelectedSymptoms] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchSymptoms = async () => {\r\n      if (!user) return;\r\n\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/symptoms', {\r\n          method: 'GET',\r\n          credentials: 'include',\r\n        });\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        const data = await response.json();\r\n        setSymptoms(data);\r\n      } catch (error) {\r\n        setError(error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchSymptoms();\r\n  }, [user]);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleDelete = async (ids) => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/symptoms', {\r\n        method: 'DELETE',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ ids }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n\r\n      setSymptoms((prevSymptoms) => prevSymptoms.filter((symptom) => !ids.includes(symptom.id)));\r\n      setDeleteDialogOpen(false);\r\n      setSelectedSymptoms([]);\r\n      setSelectedSymptom(null);\r\n    } catch (error) {\r\n      console.error('Error deleting symptom:', error.message);\r\n    }\r\n  };\r\n\r\n  const handleAddDialogOpen = () => {\r\n    setAddDialogOpen(true);\r\n  };\r\n\r\n  const handleAddDialogClose = () => {\r\n    setAddDialogOpen(false);\r\n  };\r\n\r\n  const handleSymptomAdded = () => {\r\n    setAddDialogOpen(false);\r\n    const fetchSymptoms = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/symptoms', {\r\n          method: 'GET',\r\n          credentials: 'include',\r\n        });\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        const data = await response.json();\r\n        setSymptoms(data);\r\n      } catch (error) {\r\n        setError(error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchSymptoms();\r\n  };\r\n\r\n  const handleEditDialogOpen = (symptom) => {\r\n    setSelectedSymptom(symptom);\r\n    setEditDialogOpen(true);\r\n  };\r\n\r\n  const handleEditDialogClose = () => {\r\n    setEditDialogOpen(false);\r\n    setSelectedSymptom(null);\r\n  };\r\n\r\n  const handleEditSubmit = async (updatedSymptom) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/symptoms`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify(updatedSymptom),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n\r\n      setSymptoms((prevSymptoms) =>\r\n        prevSymptoms.map((symptom) =>\r\n          symptom.id === updatedSymptom.id ? { ...symptom, ...updatedSymptom } : symptom\r\n        )\r\n      );\r\n      setEditDialogOpen(false);\r\n      setSelectedSymptom(null);\r\n    } catch (error) {\r\n      console.error('Error updating symptom:', error.message);\r\n    }\r\n  };\r\n\r\n  const handleDeleteDialogOpen = (symptom) => {\r\n    setSelectedSymptom(symptom);\r\n    setDeleteDialogOpen(true);\r\n  };\r\n\r\n  const handleDeleteDialogClose = () => {\r\n    setDeleteDialogOpen(false);\r\n    setSelectedSymptom(null);\r\n  };\r\n\r\n  const handleSelectSymptom = (id) => {\r\n    if (selectedSymptoms.includes(id)) {\r\n      setSelectedSymptoms(selectedSymptoms.filter((symptomId) => symptomId !== id));\r\n    } else {\r\n      setSelectedSymptoms([...selectedSymptoms, id]);\r\n    }\r\n  };\r\n\r\n  const isSelected = (id) => selectedSymptoms.includes(id);\r\n\r\n  const handleSelectAllSymptoms = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = symptoms.map((symptom) => symptom.id);\r\n      setSelectedSymptoms(newSelecteds);\r\n    } else {\r\n      setSelectedSymptoms([]);\r\n    }\r\n  };\r\n\r\n  const isAllSelected = selectedSymptoms.length === symptoms.length;\r\n\r\n  const handleMultipleDelete = () => {\r\n    setDeleteDialogOpen(true);\r\n    setSelectedSymptom(null);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"root\">\r\n        <Typography>Loading...</Typography>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"root\">\r\n        <Typography>Error: {error}</Typography>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"root\">\r\n      <HamburgerMenu />\r\n      <div className=\"content\">\r\n        <Container component={Paper} className=\"table-container\">\r\n          <IconButton onClick={() => navigate(-1)} className=\"back-button\">\r\n            <ArrowBackIcon />\r\n          </IconButton>\r\n          <div className=\"table-header-container\">\r\n            <Typography variant=\"h4\" gutterBottom>\r\n              Lista Sintomi\r\n            </Typography>\r\n            {user && user.isAdmin && (\r\n              <Button className=\"add-symptom-btn\" onClick={handleAddDialogOpen}>\r\n                Aggiungi Sintomo\r\n              </Button>\r\n            )}\r\n            {user && user.isAdmin && selectedSymptoms.length > 0 && (\r\n              <Button color=\"secondary\" onClick={handleMultipleDelete}>\r\n                Elimina Selezionati\r\n              </Button>\r\n            )}\r\n          </div>\r\n          <Table className=\"styled-table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {user && user.isAdmin && (\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      indeterminate={selectedSymptoms.length > 0 && selectedSymptoms.length < symptoms.length}\r\n                      checked={isAllSelected}\r\n                      onChange={handleSelectAllSymptoms}\r\n                    />\r\n                  </TableCell>\r\n                )}\r\n                <TableCell className=\"table-header\">Nome</TableCell>\r\n                <TableCell className=\"table-header\">Descrizione</TableCell>\r\n                {user && user.isAdmin && <TableCell className=\"table-header\">Azioni</TableCell>}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {symptoms.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((symptom) => (\r\n                <TableRow\r\n                  key={symptom.id}\r\n                  hover\r\n                  role=\"checkbox\"\r\n                  aria-checked={isSelected(symptom.id)}\r\n                  selected={isSelected(symptom.id)}\r\n                >\r\n                  {user && user.isAdmin && (\r\n                    <TableCell padding=\"checkbox\">\r\n                      <Checkbox\r\n                        checked={isSelected(symptom.id)}\r\n                        onChange={() => handleSelectSymptom(symptom.id)}\r\n                      />\r\n                    </TableCell>\r\n                  )}\r\n                  <TableCell>{symptom.name}</TableCell>\r\n                  <TableCell>{symptom.description}</TableCell>\r\n                  {user && user.isAdmin && (\r\n                    <TableCell>\r\n                      <IconButton onClick={() => handleEditDialogOpen(symptom)} color=\"primary\" disabled={selectedSymptoms.length > 0}>\r\n                        <EditIcon />\r\n                      </IconButton>\r\n                      <IconButton onClick={() => handleDeleteDialogOpen(symptom)} color=\"secondary\">\r\n                        <DeleteIcon />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  )}\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n          <TablePagination\r\n            rowsPerPageOptions={[10, 25, 50]}\r\n            component=\"div\"\r\n            count={symptoms.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={handleChangePage}\r\n            onRowsPerPageChange={handleChangeRowsPerPage}\r\n            className=\"pagination\"\r\n          />\r\n        </Container>\r\n      </div>\r\n      {user && (\r\n        <AddSymptomDialog open={addDialogOpen} onClose={handleAddDialogClose} onSymptomAdded={handleSymptomAdded} />\r\n      )}\r\n      {user && selectedSymptom && (\r\n        <EditSymptomDialog\r\n          open={editDialogOpen}\r\n          onClose={handleEditDialogClose}\r\n          onEditSubmit={handleEditSubmit}\r\n          symptom={selectedSymptom}\r\n        />\r\n      )}\r\n      <Dialog open={deleteDialogOpen} onClose={handleDeleteDialogClose}>\r\n        <DialogTitle>Conferma Eliminazione</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            {selectedSymptom\r\n              ? `Sei sicuro di voler eliminare il sintomo ${selectedSymptom.name}?`\r\n              : 'Sei sicuro di voler eliminare i sintomi selezionati?'}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDeleteDialogClose} color=\"primary\">\r\n            Annulla\r\n          </Button>\r\n          <Button\r\n            onClick={() => handleDelete(selectedSymptom ? [selectedSymptom.id] : selectedSymptoms)}\r\n            color=\"primary\"\r\n            autoFocus\r\n          >\r\n            Elimina\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SymptomList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}